{
	"id": "f2a93b68a6e7aee990aeb802cc64dbdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Lockness/contract/LNT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\ncontract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {\n    // Define roles\n    bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\");\n\n    // Define events for transparency\n    event TokensRewarded(address indexed user, uint256 amount, string taskId);\n    event TokensSpent(address indexed user, uint256 amount, string itemOrServiceId);\n    event TokensRecovered(address indexed token, address indexed to, uint256 amount);\n\n    // Constructor: Initialize token with 1 billion supply\n    constructor(address initialOwner) \n        ERC20(\"LocknessToken\", \"LNT\")\n        Ownable(initialOwner)\n    {\n        _mint(initialOwner, 1_000_000_000 * 10**decimals());\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\n        _grantRole(TASK_MANAGER_ROLE, initialOwner);\n    }\n\n    // Modifier to check non-zero address\n    modifier nonZeroAddress(address account) {\n        require(account != address(0), \"Invalid address\");\n        _;\n    }\n\n    // Reward tokens to a user for completing a task\n    function rewardTokens(\n        address user,\n        uint256 amount,\n        string calldata taskId\n    ) external onlyRole(TASK_MANAGER_ROLE) whenNotPaused nonReentrant nonZeroAddress(user) {\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(balanceOf(owner()) >= amount, \"Insufficient owner balance\");\n\n        _transfer(owner(), user, amount);\n        emit TokensRewarded(user, amount, taskId);\n    }\n\n    // Spend tokens on items or services\n    function spendTokens(\n        uint256 amount,\n        string calldata itemOrServiceId\n    ) external whenNotPaused nonReentrant {\n        // Ascertain that the amount is valid and the user has enough tokens\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n\n        _burn(msg.sender, amount);\n        emit TokensSpent(msg.sender, amount, itemOrServiceId);\n    }\n\n    // Pause contract (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    // Unpause contract (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // Recover tokens accidentally sent to the contract\n    function recoverTokens(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner nonZeroAddress(to) {\n        require(amount > 0, \"Amount must be greater than zero\");\n        IERC20(token).transfer(to, amount);\n        emit TokensRecovered(token, to, amount);\n    }\n\n    // Override decimals to ensure compatibility\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n  \n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 682,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 866,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 868,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 870,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 872,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Lockness/contract/LNT.sol": {
				"LNT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "taskId",
									"type": "string"
								}
							],
							"name": "TokensRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemOrServiceId",
									"type": "string"
								}
							],
							"name": "TokensSpent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TASK_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "taskId",
									"type": "string"
								}
							],
							"name": "rewardTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "itemOrServiceId",
									"type": "string"
								}
							],
							"name": "spendTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Lockness/contract/LNT.sol\":348:3037  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Lockness/contract/LNT.sol\":876:1158  constructor(address initialOwner) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Lockness/contract/LNT.sol\":965:977  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6f636b6e657373546f6b656e00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4c4e540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x07\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Lockness/contract/LNT.sol\":993:1044  _mint(initialOwner, 1_000_000_000 * 10**decimals()) */\n  tag_22\n    /* \"Lockness/contract/LNT.sol\":999:1011  initialOwner */\n  dup2\n    /* \"Lockness/contract/LNT.sol\":1033:1043  decimals() */\n  tag_23\n    /* \"Lockness/contract/LNT.sol\":1033:1041  decimals */\n  shl(0x20, tag_24)\n    /* \"Lockness/contract/LNT.sol\":1033:1043  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"Lockness/contract/LNT.sol\":1029:1031  10 */\n  0x0a\n    /* \"Lockness/contract/LNT.sol\":1029:1043  10**decimals() */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"Lockness/contract/LNT.sol\":1013:1026  1_000_000_000 */\n  0x3b9aca00\n    /* \"Lockness/contract/LNT.sol\":1013:1043  1_000_000_000 * 10**decimals() */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"Lockness/contract/LNT.sol\":993:998  _mint */\n  shl(0x20, tag_29)\n    /* \"Lockness/contract/LNT.sol\":993:1044  _mint(initialOwner, 1_000_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"Lockness/contract/LNT.sol\":1054:1098  _grantRole(DEFAULT_ADMIN_ROLE, initialOwner) */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"Lockness/contract/LNT.sol\":1065:1083  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"Lockness/contract/LNT.sol\":1085:1097  initialOwner */\n  dup3\n    /* \"Lockness/contract/LNT.sol\":1054:1064  _grantRole */\n  shl(0x20, tag_31)\n    /* \"Lockness/contract/LNT.sol\":1054:1098  _grantRole(DEFAULT_ADMIN_ROLE, initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n  pop\n    /* \"Lockness/contract/LNT.sol\":1108:1151  _grantRole(TASK_MANAGER_ROLE, initialOwner) */\n  tag_32\n    /* \"Lockness/contract/LNT.sol\":491:521  keccak256(\"TASK_MANAGER_ROLE\") */\n  0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n    /* \"Lockness/contract/LNT.sol\":1138:1150  initialOwner */\n  dup3\n    /* \"Lockness/contract/LNT.sol\":1108:1118  _grantRole */\n  shl(0x20, tag_31)\n    /* \"Lockness/contract/LNT.sol\":1108:1151  _grantRole(TASK_MANAGER_ROLE, initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n  pop\n    /* \"Lockness/contract/LNT.sol\":876:1158  constructor(address initialOwner) ... */\n  pop\n    /* \"Lockness/contract/LNT.sol\":348:3037  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x08\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Lockness/contract/LNT.sol\":2940:3031  function decimals() public view virtual override returns (uint8) {... */\ntag_24:\n    /* \"Lockness/contract/LNT.sol\":2998:3003  uint8 */\n  0x00\n    /* \"Lockness/contract/LNT.sol\":3022:3024  18 */\n  0x12\n    /* \"Lockness/contract/LNT.sol\":3015:3024  return 18 */\n  swap1\n  pop\n    /* \"Lockness/contract/LNT.sol\":2940:3031  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_45\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_41:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_52)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_54\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_57)\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_63:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_65:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_66:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_102\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_65\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_67:\n    /* \"#utility.yul\":641:665   */\n  tag_104\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_66\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_105:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_68:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_107\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_67\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_110\n  tag_63\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":932:1051   */\ntag_109:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_111\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_68\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_69:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_70:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_71:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_72:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_116:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_118\n  tag_71\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1909:1993   */\ntag_117:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_73:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_74:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_75:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_76:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_123\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2624:2663   */\n  tag_124\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_75\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_77:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_78:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_79:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_128\n    /* \"#utility.yul\":3013:3047   */\n  tag_129\n    /* \"#utility.yul\":3022:3046   */\n  tag_130\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_77\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3013:3047   */\n  tag_78\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2995:3048   */\n  tag_77\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_80:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_81:\n    /* \"#utility.yul\":3251:3290   */\n  tag_133\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_79\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3312:3403   */\n  tag_134\n    /* \"#utility.yul\":3361:3402   */\n  tag_135\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_80\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_76\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_82:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_83:\n    /* \"#utility.yul\":3572:3604   */\n  tag_138\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3613:3678   */\n  tag_139\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_81\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_84:\n    /* \"#utility.yul\":3750:3870   */\ntag_141:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_144\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_83\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_85:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_147\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_73\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4101:4130   */\n  tag_148\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_74\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_149:\n    /* \"#utility.yul\":4328:4408   */\n  tag_150\n    /* \"#utility.yul\":4384:4406   */\n  tag_151\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_74\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_84\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_146:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_86:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_87:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_154\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_86\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_88:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_156\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_87\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_158\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_69\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_160\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5233:5289   */\ntag_159:\n    /* \"#utility.yul\":5313:5351   */\n  tag_161\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5398:5465   */\n  tag_162\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_85\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_165:\n    /* \"#utility.yul\":6339:6406   */\n  tag_166\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_88\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_163)\n    /* \"#utility.yul\":5560:6178   */\ntag_164:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_167\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_73\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_168:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_172\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_87\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_171:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_163:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_89:\n    /* \"#utility.yul\":6516:6540   */\n  tag_174\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_66\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_18:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_176\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_89\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_90:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_91:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_92:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  0x00\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_180:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_184\n  tag_90\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7300:7350   */\ntag_183:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_185:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_186\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_91\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_180)\ntag_182:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_93:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_187)\n    /* \"#utility.yul\":8164:8204   */\ntag_188:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_187)\n    /* \"#utility.yul\":8213:8249   */\ntag_189:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_190)\n    /* \"#utility.yul\":8352:8379   */\ntag_191:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_187)\n    /* \"#utility.yul\":8388:8579   */\ntag_192:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_194\n  tag_90\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8417:8460   */\ntag_193:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_196\n  tag_90\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8511:8551   */\ntag_195:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_187)\n    /* \"#utility.yul\":8302:8579   */\ntag_190:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_199\n  tag_90\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8766:8806   */\ntag_198:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_187)\n    /* \"#utility.yul\":8588:8834   */\ntag_197:\n    /* \"#utility.yul\":8859:8901   */\n  tag_200\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_92\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_202\n  tag_90\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8911:8962   */\ntag_201:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_187:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_94:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_26:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_205\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_77\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_206\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_94\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_207\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_93\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_28:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_209\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_77\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_210\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_77\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_211\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_77\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_212\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_213\n  tag_90\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9651:9790   */\ntag_212:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_51:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_215\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_77\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_216\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_77\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_218\n  tag_90\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9951:9987   */\ntag_217:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_95:\n    /* \"#utility.yul\":10087:10111   */\n  tag_220\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_77\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_55:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_222\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_89\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10405:10477   */\n  tag_223\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_95\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10487:10559   */\n  tag_224\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_95\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_59:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_226\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_95\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Lockness/contract/LNT.sol\":348:3037  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Lockness/contract/LNT.sol\":348:3037  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f3e849f\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc7495233\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc7495233\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x5f3e849f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x248a9ca3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x59563cdf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0ceb382e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":1383:1817  function rewardTokens(... */\n    tag_6:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Lockness/contract/LNT.sol\":2940:3031  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"Lockness/contract/LNT.sol\":2459:2524  function unpause() external onlyOwner {... */\n    tag_13:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"Lockness/contract/LNT.sol\":1864:2314  function spendTokens(... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":2586:2885  function recoverTokens(... */\n    tag_16:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"Lockness/contract/LNT.sol\":2355:2416  function pause() external onlyOwner {... */\n    tag_19:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_21:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":447:521  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n    tag_25:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_133\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_138\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":1383:1817  function rewardTokens(... */\n    tag_52:\n        /* \"Lockness/contract/LNT.sol\":491:521  keccak256(\"TASK_MANAGER_ROLE\") */\n      0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_152\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_153\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_155:\n        /* \"Lockness/contract/LNT.sol\":1568:1572  user */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":1284:1285  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1265:1286  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1265:1272  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1265:1286  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1257:1306  require(account != address(0), \"Invalid address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"Lockness/contract/LNT.sol\":1601:1602  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1592:1598  amount */\n      dup6\n        /* \"Lockness/contract/LNT.sol\":1592:1602  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":1584:1639  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"Lockness/contract/LNT.sol\":1679:1685  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":1657:1675  balanceOf(owner()) */\n      tag_165\n        /* \"Lockness/contract/LNT.sol\":1667:1674  owner() */\n      tag_166\n        /* \"Lockness/contract/LNT.sol\":1667:1672  owner */\n      tag_101\n        /* \"Lockness/contract/LNT.sol\":1667:1674  owner() */\n      jump\t// in\n    tag_166:\n        /* \"Lockness/contract/LNT.sol\":1657:1666  balanceOf */\n      tag_94\n        /* \"Lockness/contract/LNT.sol\":1657:1675  balanceOf(owner()) */\n      jump\t// in\n    tag_165:\n        /* \"Lockness/contract/LNT.sol\":1657:1685  balanceOf(owner()) >= amount */\n      lt\n      iszero\n        /* \"Lockness/contract/LNT.sol\":1649:1716  require(balanceOf(owner()) >= amount, \"Insufficient owner balance\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"Lockness/contract/LNT.sol\":1727:1759  _transfer(owner(), user, amount) */\n      tag_170\n        /* \"Lockness/contract/LNT.sol\":1737:1744  owner() */\n      tag_171\n        /* \"Lockness/contract/LNT.sol\":1737:1742  owner */\n      tag_101\n        /* \"Lockness/contract/LNT.sol\":1737:1744  owner() */\n      jump\t// in\n    tag_171:\n        /* \"Lockness/contract/LNT.sol\":1746:1750  user */\n      dup8\n        /* \"Lockness/contract/LNT.sol\":1752:1758  amount */\n      dup8\n        /* \"Lockness/contract/LNT.sol\":1727:1736  _transfer */\n      tag_172\n        /* \"Lockness/contract/LNT.sol\":1727:1759  _transfer(owner(), user, amount) */\n      jump\t// in\n    tag_170:\n        /* \"Lockness/contract/LNT.sol\":1789:1793  user */\n      dup6\n        /* \"Lockness/contract/LNT.sol\":1774:1810  TokensRewarded(user, amount, taskId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d\n        /* \"Lockness/contract/LNT.sol\":1795:1801  amount */\n      dup7\n        /* \"Lockness/contract/LNT.sol\":1803:1809  taskId */\n      dup7\n      dup7\n        /* \"Lockness/contract/LNT.sol\":1774:1810  TokensRewarded(user, amount, taskId) */\n      mload(0x40)\n      tag_173\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_176\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_175:\n        /* \"Lockness/contract/LNT.sol\":1383:1817  function rewardTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_65\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2940:3031  function decimals() public view virtual override returns (uint8) {... */\n    tag_73:\n        /* \"Lockness/contract/LNT.sol\":2998:3003  uint8 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":3022:3024  18 */\n      0x12\n        /* \"Lockness/contract/LNT.sol\":3015:3024  return 18 */\n      swap1\n      pop\n        /* \"Lockness/contract/LNT.sol\":2940:3031  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_194:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2459:2524  function unpause() external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"Lockness/contract/LNT.sol\":2507:2517  _unpause() */\n      tag_200\n        /* \"Lockness/contract/LNT.sol\":2507:2515  _unpause */\n      tag_201\n        /* \"Lockness/contract/LNT.sol\":2507:2517  _unpause() */\n      jump\t// in\n    tag_200:\n        /* \"Lockness/contract/LNT.sol\":2459:2524  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":1864:2314  function spendTokens(... */\n    tag_84:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_203\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_153\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_205\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_205:\n        /* \"Lockness/contract/LNT.sol\":2096:2097  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2087:2093  amount */\n      dup4\n        /* \"Lockness/contract/LNT.sol\":2087:2097  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":2079:2134  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_164\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"Lockness/contract/LNT.sol\":2177:2183  amount */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":2152:2173  balanceOf(msg.sender) */\n      tag_209\n        /* \"Lockness/contract/LNT.sol\":2162:2172  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":2152:2161  balanceOf */\n      tag_94\n        /* \"Lockness/contract/LNT.sol\":2152:2173  balanceOf(msg.sender) */\n      jump\t// in\n    tag_209:\n        /* \"Lockness/contract/LNT.sol\":2152:2183  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Lockness/contract/LNT.sol\":2144:2208  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"Lockness/contract/LNT.sol\":2219:2244  _burn(msg.sender, amount) */\n      tag_213\n        /* \"Lockness/contract/LNT.sol\":2225:2235  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":2237:2243  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2219:2224  _burn */\n      tag_214\n        /* \"Lockness/contract/LNT.sol\":2219:2244  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_213:\n        /* \"Lockness/contract/LNT.sol\":2271:2281  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":2259:2307  TokensSpent(msg.sender, amount, itemOrServiceId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729\n        /* \"Lockness/contract/LNT.sol\":2283:2289  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2291:2306  itemOrServiceId */\n      dup5\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2259:2307  TokensSpent(msg.sender, amount, itemOrServiceId) */\n      mload(0x40)\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_176\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"Lockness/contract/LNT.sol\":1864:2314  function spendTokens(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2586:2885  function recoverTokens(... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"Lockness/contract/LNT.sol\":2716:2718  to */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1284:1285  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1265:1286  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1265:1272  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1265:1286  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1257:1306  require(account != address(0), \"Invalid address\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_160\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"Lockness/contract/LNT.sol\":2747:2748  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2738:2744  amount */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":2738:2748  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":2730:2785  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_164\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"Lockness/contract/LNT.sol\":2802:2807  token */\n      dup4\n        /* \"Lockness/contract/LNT.sol\":2795:2817  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Lockness/contract/LNT.sol\":2818:2820  to */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2822:2828  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2795:2829  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      pop\n        /* \"Lockness/contract/LNT.sol\":2867:2869  to */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":2844:2878  TokensRecovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2860:2865  token */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2844:2878  TokensRecovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe6\n        /* \"Lockness/contract/LNT.sol\":2871:2877  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2844:2878  TokensRecovered(token, to, amount) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Lockness/contract/LNT.sol\":2586:2885  function recoverTokens(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2355:2416  function pause() external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"Lockness/contract/LNT.sol\":2401:2409  _pause() */\n      tag_242\n        /* \"Lockness/contract/LNT.sol\":2401:2407  _pause */\n      tag_243\n        /* \"Lockness/contract/LNT.sol\":2401:2409  _pause() */\n      jump\t// in\n    tag_242:\n        /* \"Lockness/contract/LNT.sol\":2355:2416  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_138\n      jump\t// in\n    tag_247:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_248\n      swap1\n      tag_138\n      jump\t// in\n    tag_248:\n      dup1\n      iszero\n      tag_249\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_250\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_249)\n    tag_250:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_251:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_251\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":447:521  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n    tag_119:\n        /* \"Lockness/contract/LNT.sol\":491:521  keccak256(\"TASK_MANAGER_ROLE\") */\n      0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n        /* \"Lockness/contract/LNT.sol\":447:521  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_65\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_273\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_277\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_86\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x07)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_301\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_300)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_300:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_306\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_305)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_305:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_314\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_317\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_318\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x08\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_328\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_153\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_330\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_145\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_331\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_340\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap3\n      swap2\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_346\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_348)\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_352)\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_353\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_355\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_86\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_356:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_360:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_361:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_362:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_363:\n        /* \"#utility.yul\":561:584   */\n      tag_417\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_362\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_418:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_364:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_420\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_363\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_36:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_423\n      tag_360\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":833:952   */\n    tag_422:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_424\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_364\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_365:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_366:\n        /* \"#utility.yul\":1268:1289   */\n      tag_427\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_365\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_39:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_429\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_366\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_367:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_368:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_369:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_370:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_371:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_435\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_367\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2222:2293   */\n      tag_436\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_368\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_437\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_369\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2392:2421   */\n      tag_438\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_370\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_43:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_440\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_371\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_372:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_373:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_443\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_372\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_374:\n        /* \"#utility.yul\":3060:3084   */\n      tag_445\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_373\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_446:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_375:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_448\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_374\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_376:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_377:\n        /* \"#utility.yul\":3416:3440   */\n      tag_451\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_376\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_452:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_378:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_454\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_377\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_46:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_457\n      tag_360\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3709:3828   */\n    tag_456:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_458\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_375\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_459\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_378\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4213   */\n    tag_379:\n        /* \"#utility.yul\":4205:4206   */\n      0x00\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4195:4207   */\n      revert\n        /* \"#utility.yul\":4219:4336   */\n    tag_380:\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4325:4326   */\n      0x00\n        /* \"#utility.yul\":4318:4330   */\n      revert\n        /* \"#utility.yul\":4342:4459   */\n    tag_381:\n        /* \"#utility.yul\":4451:4452   */\n      0x00\n        /* \"#utility.yul\":4448:4449   */\n      0x00\n        /* \"#utility.yul\":4441:4453   */\n      revert\n        /* \"#utility.yul\":4479:5032   */\n    tag_382:\n        /* \"#utility.yul\":4537:4545   */\n      0x00\n        /* \"#utility.yul\":4547:4553   */\n      0x00\n        /* \"#utility.yul\":4597:4600   */\n      dup4\n        /* \"#utility.yul\":4590:4594   */\n      0x1f\n        /* \"#utility.yul\":4582:4588   */\n      dup5\n        /* \"#utility.yul\":4578:4595   */\n      add\n        /* \"#utility.yul\":4574:4601   */\n      slt\n        /* \"#utility.yul\":4564:4686   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4605:4684   */\n      tag_465\n      tag_379\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4564:4686   */\n    tag_464:\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4705:4725   */\n      calldataload\n        /* \"#utility.yul\":4695:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4748:4766   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4740:4746   */\n      dup2\n        /* \"#utility.yul\":4737:4767   */\n      gt\n        /* \"#utility.yul\":4734:4851   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":4770:4849   */\n      tag_467\n      tag_380\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4734:4851   */\n    tag_466:\n        /* \"#utility.yul\":4884:4888   */\n      0x20\n        /* \"#utility.yul\":4876:4882   */\n      dup4\n        /* \"#utility.yul\":4872:4889   */\n      add\n        /* \"#utility.yul\":4860:4889   */\n      swap2\n      pop\n        /* \"#utility.yul\":4938:4941   */\n      dup4\n        /* \"#utility.yul\":4930:4934   */\n      0x01\n        /* \"#utility.yul\":4922:4928   */\n      dup3\n        /* \"#utility.yul\":4918:4935   */\n      mul\n        /* \"#utility.yul\":4908:4916   */\n      dup4\n        /* \"#utility.yul\":4904:4936   */\n      add\n        /* \"#utility.yul\":4901:4942   */\n      gt\n        /* \"#utility.yul\":4898:5026   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":4945:5024   */\n      tag_469\n      tag_381\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4898:5026   */\n    tag_468:\n        /* \"#utility.yul\":4479:5032   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5038:5857   */\n    tag_51:\n        /* \"#utility.yul\":5127:5133   */\n      0x00\n        /* \"#utility.yul\":5135:5141   */\n      0x00\n        /* \"#utility.yul\":5143:5149   */\n      0x00\n        /* \"#utility.yul\":5151:5157   */\n      0x00\n        /* \"#utility.yul\":5200:5202   */\n      0x60\n        /* \"#utility.yul\":5188:5197   */\n      dup6\n        /* \"#utility.yul\":5179:5186   */\n      dup8\n        /* \"#utility.yul\":5175:5198   */\n      sub\n        /* \"#utility.yul\":5171:5203   */\n      slt\n        /* \"#utility.yul\":5168:5287   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5206:5285   */\n      tag_472\n      tag_360\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5168:5287   */\n    tag_471:\n        /* \"#utility.yul\":5326:5327   */\n      0x00\n        /* \"#utility.yul\":5351:5404   */\n      tag_473\n        /* \"#utility.yul\":5396:5403   */\n      dup8\n        /* \"#utility.yul\":5387:5393   */\n      dup3\n        /* \"#utility.yul\":5376:5385   */\n      dup9\n        /* \"#utility.yul\":5372:5394   */\n      add\n        /* \"#utility.yul\":5351:5404   */\n      tag_375\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5341:5404   */\n      swap5\n      pop\n        /* \"#utility.yul\":5297:5414   */\n      pop\n        /* \"#utility.yul\":5453:5455   */\n      0x20\n        /* \"#utility.yul\":5479:5532   */\n      tag_474\n        /* \"#utility.yul\":5524:5531   */\n      dup8\n        /* \"#utility.yul\":5515:5521   */\n      dup3\n        /* \"#utility.yul\":5504:5513   */\n      dup9\n        /* \"#utility.yul\":5500:5522   */\n      add\n        /* \"#utility.yul\":5479:5532   */\n      tag_378\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5469:5532   */\n      swap4\n      pop\n        /* \"#utility.yul\":5424:5542   */\n      pop\n        /* \"#utility.yul\":5609:5611   */\n      0x40\n        /* \"#utility.yul\":5598:5607   */\n      dup6\n        /* \"#utility.yul\":5594:5612   */\n      add\n        /* \"#utility.yul\":5581:5613   */\n      calldataload\n        /* \"#utility.yul\":5640:5658   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5632:5638   */\n      dup2\n        /* \"#utility.yul\":5629:5659   */\n      gt\n        /* \"#utility.yul\":5626:5743   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5662:5741   */\n      tag_476\n      tag_361\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5626:5743   */\n    tag_475:\n        /* \"#utility.yul\":5775:5840   */\n      tag_477\n        /* \"#utility.yul\":5832:5839   */\n      dup8\n        /* \"#utility.yul\":5823:5829   */\n      dup3\n        /* \"#utility.yul\":5812:5821   */\n      dup9\n        /* \"#utility.yul\":5808:5830   */\n      add\n        /* \"#utility.yul\":5775:5840   */\n      tag_382\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5757:5840   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5552:5850   */\n      pop\n        /* \"#utility.yul\":5038:5857   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:5981   */\n    tag_383:\n        /* \"#utility.yul\":5950:5974   */\n      tag_479\n        /* \"#utility.yul\":5968:5973   */\n      dup2\n        /* \"#utility.yul\":5950:5974   */\n      tag_376\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5945:5948   */\n      dup3\n        /* \"#utility.yul\":5938:5975   */\n      mstore\n        /* \"#utility.yul\":5863:5981   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5987:6209   */\n    tag_56:\n        /* \"#utility.yul\":6080:6084   */\n      0x00\n        /* \"#utility.yul\":6118:6120   */\n      0x20\n        /* \"#utility.yul\":6107:6116   */\n      dup3\n        /* \"#utility.yul\":6103:6121   */\n      add\n        /* \"#utility.yul\":6095:6121   */\n      swap1\n      pop\n        /* \"#utility.yul\":6131:6202   */\n      tag_481\n        /* \"#utility.yul\":6199:6200   */\n      0x00\n        /* \"#utility.yul\":6188:6197   */\n      dup4\n        /* \"#utility.yul\":6184:6201   */\n      add\n        /* \"#utility.yul\":6175:6181   */\n      dup5\n        /* \"#utility.yul\":6131:6202   */\n      tag_383\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5987:6209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6215:6834   */\n    tag_59:\n        /* \"#utility.yul\":6292:6298   */\n      0x00\n        /* \"#utility.yul\":6300:6306   */\n      0x00\n        /* \"#utility.yul\":6308:6314   */\n      0x00\n        /* \"#utility.yul\":6357:6359   */\n      0x60\n        /* \"#utility.yul\":6345:6354   */\n      dup5\n        /* \"#utility.yul\":6336:6343   */\n      dup7\n        /* \"#utility.yul\":6332:6355   */\n      sub\n        /* \"#utility.yul\":6328:6360   */\n      slt\n        /* \"#utility.yul\":6325:6444   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6363:6442   */\n      tag_484\n      tag_360\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6325:6444   */\n    tag_483:\n        /* \"#utility.yul\":6483:6484   */\n      0x00\n        /* \"#utility.yul\":6508:6561   */\n      tag_485\n        /* \"#utility.yul\":6553:6560   */\n      dup7\n        /* \"#utility.yul\":6544:6550   */\n      dup3\n        /* \"#utility.yul\":6533:6542   */\n      dup8\n        /* \"#utility.yul\":6529:6551   */\n      add\n        /* \"#utility.yul\":6508:6561   */\n      tag_375\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6498:6561   */\n      swap4\n      pop\n        /* \"#utility.yul\":6454:6571   */\n      pop\n        /* \"#utility.yul\":6610:6612   */\n      0x20\n        /* \"#utility.yul\":6636:6689   */\n      tag_486\n        /* \"#utility.yul\":6681:6688   */\n      dup7\n        /* \"#utility.yul\":6672:6678   */\n      dup3\n        /* \"#utility.yul\":6661:6670   */\n      dup8\n        /* \"#utility.yul\":6657:6679   */\n      add\n        /* \"#utility.yul\":6636:6689   */\n      tag_375\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6626:6689   */\n      swap3\n      pop\n        /* \"#utility.yul\":6581:6699   */\n      pop\n        /* \"#utility.yul\":6738:6740   */\n      0x40\n        /* \"#utility.yul\":6764:6817   */\n      tag_487\n        /* \"#utility.yul\":6809:6816   */\n      dup7\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6789:6798   */\n      dup8\n        /* \"#utility.yul\":6785:6807   */\n      add\n        /* \"#utility.yul\":6764:6817   */\n      tag_378\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6754:6817   */\n      swap2\n      pop\n        /* \"#utility.yul\":6709:6827   */\n      pop\n        /* \"#utility.yul\":6215:6834   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6840:6917   */\n    tag_384:\n        /* \"#utility.yul\":6877:6884   */\n      0x00\n        /* \"#utility.yul\":6906:6911   */\n      dup2\n        /* \"#utility.yul\":6895:6911   */\n      swap1\n      pop\n        /* \"#utility.yul\":6840:6917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6923:7045   */\n    tag_385:\n        /* \"#utility.yul\":6996:7020   */\n      tag_490\n        /* \"#utility.yul\":7014:7019   */\n      dup2\n        /* \"#utility.yul\":6996:7020   */\n      tag_384\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6989:6994   */\n      dup2\n        /* \"#utility.yul\":6986:7021   */\n      eq\n        /* \"#utility.yul\":6976:7039   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":7035:7036   */\n      0x00\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7025:7037   */\n      revert\n        /* \"#utility.yul\":6976:7039   */\n    tag_491:\n        /* \"#utility.yul\":6923:7045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7051:7190   */\n    tag_386:\n        /* \"#utility.yul\":7097:7102   */\n      0x00\n        /* \"#utility.yul\":7135:7141   */\n      dup2\n        /* \"#utility.yul\":7122:7142   */\n      calldataload\n        /* \"#utility.yul\":7113:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7151:7184   */\n      tag_493\n        /* \"#utility.yul\":7178:7183   */\n      dup2\n        /* \"#utility.yul\":7151:7184   */\n      tag_385\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7051:7190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7196:7525   */\n    tag_64:\n        /* \"#utility.yul\":7255:7261   */\n      0x00\n        /* \"#utility.yul\":7304:7306   */\n      0x20\n        /* \"#utility.yul\":7292:7301   */\n      dup3\n        /* \"#utility.yul\":7283:7290   */\n      dup5\n        /* \"#utility.yul\":7279:7302   */\n      sub\n        /* \"#utility.yul\":7275:7307   */\n      slt\n        /* \"#utility.yul\":7272:7391   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":7310:7389   */\n      tag_496\n      tag_360\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7272:7391   */\n    tag_495:\n        /* \"#utility.yul\":7430:7431   */\n      0x00\n        /* \"#utility.yul\":7455:7508   */\n      tag_497\n        /* \"#utility.yul\":7500:7507   */\n      dup5\n        /* \"#utility.yul\":7491:7497   */\n      dup3\n        /* \"#utility.yul\":7480:7489   */\n      dup6\n        /* \"#utility.yul\":7476:7498   */\n      add\n        /* \"#utility.yul\":7455:7508   */\n      tag_386\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7445:7508   */\n      swap2\n      pop\n        /* \"#utility.yul\":7401:7518   */\n      pop\n        /* \"#utility.yul\":7196:7525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7531:7649   */\n    tag_387:\n        /* \"#utility.yul\":7618:7642   */\n      tag_499\n        /* \"#utility.yul\":7636:7641   */\n      dup2\n        /* \"#utility.yul\":7618:7642   */\n      tag_384\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7613:7616   */\n      dup3\n        /* \"#utility.yul\":7606:7643   */\n      mstore\n        /* \"#utility.yul\":7531:7649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7655:7877   */\n    tag_67:\n        /* \"#utility.yul\":7748:7752   */\n      0x00\n        /* \"#utility.yul\":7786:7788   */\n      0x20\n        /* \"#utility.yul\":7775:7784   */\n      dup3\n        /* \"#utility.yul\":7771:7789   */\n      add\n        /* \"#utility.yul\":7763:7789   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7870   */\n      tag_501\n        /* \"#utility.yul\":7867:7868   */\n      0x00\n        /* \"#utility.yul\":7856:7865   */\n      dup4\n        /* \"#utility.yul\":7852:7869   */\n      add\n        /* \"#utility.yul\":7843:7849   */\n      dup5\n        /* \"#utility.yul\":7799:7870   */\n      tag_387\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":7655:7877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7883:8357   */\n    tag_70:\n        /* \"#utility.yul\":7951:7957   */\n      0x00\n        /* \"#utility.yul\":7959:7965   */\n      0x00\n        /* \"#utility.yul\":8008:8010   */\n      0x40\n        /* \"#utility.yul\":7996:8005   */\n      dup4\n        /* \"#utility.yul\":7987:7994   */\n      dup6\n        /* \"#utility.yul\":7983:8006   */\n      sub\n        /* \"#utility.yul\":7979:8011   */\n      slt\n        /* \"#utility.yul\":7976:8095   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":8014:8093   */\n      tag_504\n      tag_360\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7976:8095   */\n    tag_503:\n        /* \"#utility.yul\":8134:8135   */\n      0x00\n        /* \"#utility.yul\":8159:8212   */\n      tag_505\n        /* \"#utility.yul\":8204:8211   */\n      dup6\n        /* \"#utility.yul\":8195:8201   */\n      dup3\n        /* \"#utility.yul\":8184:8193   */\n      dup7\n        /* \"#utility.yul\":8180:8202   */\n      add\n        /* \"#utility.yul\":8159:8212   */\n      tag_386\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8149:8212   */\n      swap3\n      pop\n        /* \"#utility.yul\":8105:8222   */\n      pop\n        /* \"#utility.yul\":8261:8263   */\n      0x20\n        /* \"#utility.yul\":8287:8340   */\n      tag_506\n        /* \"#utility.yul\":8332:8339   */\n      dup6\n        /* \"#utility.yul\":8323:8329   */\n      dup3\n        /* \"#utility.yul\":8312:8321   */\n      dup7\n        /* \"#utility.yul\":8308:8330   */\n      add\n        /* \"#utility.yul\":8287:8340   */\n      tag_375\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8277:8340   */\n      swap2\n      pop\n        /* \"#utility.yul\":8232:8350   */\n      pop\n        /* \"#utility.yul\":7883:8357   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8363:8449   */\n    tag_388:\n        /* \"#utility.yul\":8398:8405   */\n      0x00\n        /* \"#utility.yul\":8438:8442   */\n      0xff\n        /* \"#utility.yul\":8431:8436   */\n      dup3\n        /* \"#utility.yul\":8427:8443   */\n      and\n        /* \"#utility.yul\":8416:8443   */\n      swap1\n      pop\n        /* \"#utility.yul\":8363:8449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8455:8567   */\n    tag_389:\n        /* \"#utility.yul\":8538:8560   */\n      tag_509\n        /* \"#utility.yul\":8554:8559   */\n      dup2\n        /* \"#utility.yul\":8538:8560   */\n      tag_388\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8533:8536   */\n      dup3\n        /* \"#utility.yul\":8526:8561   */\n      mstore\n        /* \"#utility.yul\":8455:8567   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8573:8787   */\n    tag_75:\n        /* \"#utility.yul\":8662:8666   */\n      0x00\n        /* \"#utility.yul\":8700:8702   */\n      0x20\n        /* \"#utility.yul\":8689:8698   */\n      dup3\n        /* \"#utility.yul\":8685:8703   */\n      add\n        /* \"#utility.yul\":8677:8703   */\n      swap1\n      pop\n        /* \"#utility.yul\":8713:8780   */\n      tag_511\n        /* \"#utility.yul\":8777:8778   */\n      0x00\n        /* \"#utility.yul\":8766:8775   */\n      dup4\n        /* \"#utility.yul\":8762:8779   */\n      add\n        /* \"#utility.yul\":8753:8759   */\n      dup5\n        /* \"#utility.yul\":8713:8780   */\n      tag_389\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8573:8787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8793:9467   */\n    tag_83:\n        /* \"#utility.yul\":8873:8879   */\n      0x00\n        /* \"#utility.yul\":8881:8887   */\n      0x00\n        /* \"#utility.yul\":8889:8895   */\n      0x00\n        /* \"#utility.yul\":8938:8940   */\n      0x40\n        /* \"#utility.yul\":8926:8935   */\n      dup5\n        /* \"#utility.yul\":8917:8924   */\n      dup7\n        /* \"#utility.yul\":8913:8936   */\n      sub\n        /* \"#utility.yul\":8909:8941   */\n      slt\n        /* \"#utility.yul\":8906:9025   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":8944:9023   */\n      tag_514\n      tag_360\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8906:9025   */\n    tag_513:\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9089:9142   */\n      tag_515\n        /* \"#utility.yul\":9134:9141   */\n      dup7\n        /* \"#utility.yul\":9125:9131   */\n      dup3\n        /* \"#utility.yul\":9114:9123   */\n      dup8\n        /* \"#utility.yul\":9110:9132   */\n      add\n        /* \"#utility.yul\":9089:9142   */\n      tag_378\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9079:9142   */\n      swap4\n      pop\n        /* \"#utility.yul\":9035:9152   */\n      pop\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9208:9217   */\n      dup5\n        /* \"#utility.yul\":9204:9222   */\n      add\n        /* \"#utility.yul\":9191:9223   */\n      calldataload\n        /* \"#utility.yul\":9250:9268   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9242:9248   */\n      dup2\n        /* \"#utility.yul\":9239:9269   */\n      gt\n        /* \"#utility.yul\":9236:9353   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":9272:9351   */\n      tag_517\n      tag_361\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9236:9353   */\n    tag_516:\n        /* \"#utility.yul\":9385:9450   */\n      tag_518\n        /* \"#utility.yul\":9442:9449   */\n      dup7\n        /* \"#utility.yul\":9433:9439   */\n      dup3\n        /* \"#utility.yul\":9422:9431   */\n      dup8\n        /* \"#utility.yul\":9418:9440   */\n      add\n        /* \"#utility.yul\":9385:9450   */\n      tag_382\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9367:9450   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9162:9460   */\n      pop\n        /* \"#utility.yul\":8793:9467   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9473:9802   */\n    tag_93:\n        /* \"#utility.yul\":9532:9538   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9569:9578   */\n      dup3\n        /* \"#utility.yul\":9560:9567   */\n      dup5\n        /* \"#utility.yul\":9556:9579   */\n      sub\n        /* \"#utility.yul\":9552:9584   */\n      slt\n        /* \"#utility.yul\":9549:9668   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":9587:9666   */\n      tag_521\n      tag_360\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":9549:9668   */\n    tag_520:\n        /* \"#utility.yul\":9707:9708   */\n      0x00\n        /* \"#utility.yul\":9732:9785   */\n      tag_522\n        /* \"#utility.yul\":9777:9784   */\n      dup5\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9757:9766   */\n      dup6\n        /* \"#utility.yul\":9753:9775   */\n      add\n        /* \"#utility.yul\":9732:9785   */\n      tag_375\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9722:9785   */\n      swap2\n      pop\n        /* \"#utility.yul\":9678:9795   */\n      pop\n        /* \"#utility.yul\":9473:9802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:9926   */\n    tag_390:\n        /* \"#utility.yul\":9895:9919   */\n      tag_524\n        /* \"#utility.yul\":9913:9918   */\n      dup2\n        /* \"#utility.yul\":9895:9919   */\n      tag_373\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9890:9893   */\n      dup3\n        /* \"#utility.yul\":9883:9920   */\n      mstore\n        /* \"#utility.yul\":9808:9926   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10154   */\n    tag_103:\n        /* \"#utility.yul\":10025:10029   */\n      0x00\n        /* \"#utility.yul\":10063:10065   */\n      0x20\n        /* \"#utility.yul\":10052:10061   */\n      dup3\n        /* \"#utility.yul\":10048:10066   */\n      add\n        /* \"#utility.yul\":10040:10066   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10147   */\n      tag_526\n        /* \"#utility.yul\":10144:10145   */\n      0x00\n        /* \"#utility.yul\":10133:10142   */\n      dup4\n        /* \"#utility.yul\":10129:10146   */\n      add\n        /* \"#utility.yul\":10120:10126   */\n      dup5\n        /* \"#utility.yul\":10076:10147   */\n      tag_390\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9932:10154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10634   */\n    tag_126:\n        /* \"#utility.yul\":10228:10234   */\n      0x00\n        /* \"#utility.yul\":10236:10242   */\n      0x00\n        /* \"#utility.yul\":10285:10287   */\n      0x40\n        /* \"#utility.yul\":10273:10282   */\n      dup4\n        /* \"#utility.yul\":10264:10271   */\n      dup6\n        /* \"#utility.yul\":10260:10283   */\n      sub\n        /* \"#utility.yul\":10256:10288   */\n      slt\n        /* \"#utility.yul\":10253:10372   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":10291:10370   */\n      tag_529\n      tag_360\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10253:10372   */\n    tag_528:\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10436:10489   */\n      tag_530\n        /* \"#utility.yul\":10481:10488   */\n      dup6\n        /* \"#utility.yul\":10472:10478   */\n      dup3\n        /* \"#utility.yul\":10461:10470   */\n      dup7\n        /* \"#utility.yul\":10457:10479   */\n      add\n        /* \"#utility.yul\":10436:10489   */\n      tag_375\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10426:10489   */\n      swap3\n      pop\n        /* \"#utility.yul\":10382:10499   */\n      pop\n        /* \"#utility.yul\":10538:10540   */\n      0x20\n        /* \"#utility.yul\":10564:10617   */\n      tag_531\n        /* \"#utility.yul\":10609:10616   */\n      dup6\n        /* \"#utility.yul\":10600:10606   */\n      dup3\n        /* \"#utility.yul\":10589:10598   */\n      dup7\n        /* \"#utility.yul\":10585:10607   */\n      add\n        /* \"#utility.yul\":10564:10617   */\n      tag_375\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10554:10617   */\n      swap2\n      pop\n        /* \"#utility.yul\":10509:10627   */\n      pop\n        /* \"#utility.yul\":10160:10634   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10640:10820   */\n    tag_391:\n        /* \"#utility.yul\":10688:10765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10685:10686   */\n      0x00\n        /* \"#utility.yul\":10678:10766   */\n      mstore\n        /* \"#utility.yul\":10785:10789   */\n      0x22\n        /* \"#utility.yul\":10782:10783   */\n      0x04\n        /* \"#utility.yul\":10775:10790   */\n      mstore\n        /* \"#utility.yul\":10809:10813   */\n      0x24\n        /* \"#utility.yul\":10806:10807   */\n      0x00\n        /* \"#utility.yul\":10799:10814   */\n      revert\n        /* \"#utility.yul\":10826:11146   */\n    tag_138:\n        /* \"#utility.yul\":10870:10876   */\n      0x00\n        /* \"#utility.yul\":10907:10908   */\n      0x02\n        /* \"#utility.yul\":10901:10905   */\n      dup3\n        /* \"#utility.yul\":10897:10909   */\n      div\n        /* \"#utility.yul\":10887:10909   */\n      swap1\n      pop\n        /* \"#utility.yul\":10954:10955   */\n      0x01\n        /* \"#utility.yul\":10948:10952   */\n      dup3\n        /* \"#utility.yul\":10944:10956   */\n      and\n        /* \"#utility.yul\":10975:10993   */\n      dup1\n        /* \"#utility.yul\":10965:11046   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":11031:11035   */\n      0x7f\n        /* \"#utility.yul\":11023:11029   */\n      dup3\n        /* \"#utility.yul\":11019:11036   */\n      and\n        /* \"#utility.yul\":11009:11036   */\n      swap2\n      pop\n        /* \"#utility.yul\":10965:11046   */\n    tag_534:\n        /* \"#utility.yul\":11093:11095   */\n      0x20\n        /* \"#utility.yul\":11085:11091   */\n      dup3\n        /* \"#utility.yul\":11082:11096   */\n      lt\n        /* \"#utility.yul\":11062:11080   */\n      dup2\n        /* \"#utility.yul\":11059:11097   */\n      sub\n        /* \"#utility.yul\":11056:11140   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11112:11130   */\n      tag_536\n      tag_391\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11056:11140   */\n    tag_535:\n        /* \"#utility.yul\":10877:11146   */\n      pop\n        /* \"#utility.yul\":10826:11146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11152:11317   */\n    tag_392:\n        /* \"#utility.yul\":11292:11309   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":11288:11289   */\n      0x00\n        /* \"#utility.yul\":11280:11286   */\n      dup3\n        /* \"#utility.yul\":11276:11290   */\n      add\n        /* \"#utility.yul\":11269:11310   */\n      mstore\n        /* \"#utility.yul\":11152:11317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11323:11689   */\n    tag_393:\n        /* \"#utility.yul\":11465:11468   */\n      0x00\n        /* \"#utility.yul\":11486:11553   */\n      tag_539\n        /* \"#utility.yul\":11550:11552   */\n      0x0f\n        /* \"#utility.yul\":11545:11548   */\n      dup4\n        /* \"#utility.yul\":11486:11553   */\n      tag_368\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11479:11553   */\n      swap2\n      pop\n        /* \"#utility.yul\":11562:11655   */\n      tag_540\n        /* \"#utility.yul\":11651:11654   */\n      dup3\n        /* \"#utility.yul\":11562:11655   */\n      tag_392\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":11680:11682   */\n      0x20\n        /* \"#utility.yul\":11675:11678   */\n      dup3\n        /* \"#utility.yul\":11671:11683   */\n      add\n        /* \"#utility.yul\":11664:11683   */\n      swap1\n      pop\n        /* \"#utility.yul\":11323:11689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11695:12114   */\n    tag_160:\n        /* \"#utility.yul\":11861:11865   */\n      0x00\n        /* \"#utility.yul\":11899:11901   */\n      0x20\n        /* \"#utility.yul\":11888:11897   */\n      dup3\n        /* \"#utility.yul\":11884:11902   */\n      add\n        /* \"#utility.yul\":11876:11902   */\n      swap1\n      pop\n        /* \"#utility.yul\":11948:11957   */\n      dup2\n        /* \"#utility.yul\":11942:11946   */\n      dup2\n        /* \"#utility.yul\":11938:11958   */\n      sub\n        /* \"#utility.yul\":11934:11935   */\n      0x00\n        /* \"#utility.yul\":11923:11932   */\n      dup4\n        /* \"#utility.yul\":11919:11936   */\n      add\n        /* \"#utility.yul\":11912:11959   */\n      mstore\n        /* \"#utility.yul\":11976:12107   */\n      tag_542\n        /* \"#utility.yul\":12102:12106   */\n      dup2\n        /* \"#utility.yul\":11976:12107   */\n      tag_393\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":11968:12107   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:12114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12120:12302   */\n    tag_394:\n        /* \"#utility.yul\":12260:12294   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":12256:12257   */\n      0x00\n        /* \"#utility.yul\":12248:12254   */\n      dup3\n        /* \"#utility.yul\":12244:12258   */\n      add\n        /* \"#utility.yul\":12237:12295   */\n      mstore\n        /* \"#utility.yul\":12120:12302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12308:12674   */\n    tag_395:\n        /* \"#utility.yul\":12450:12453   */\n      0x00\n        /* \"#utility.yul\":12471:12538   */\n      tag_545\n        /* \"#utility.yul\":12535:12537   */\n      0x20\n        /* \"#utility.yul\":12530:12533   */\n      dup4\n        /* \"#utility.yul\":12471:12538   */\n      tag_368\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12464:12538   */\n      swap2\n      pop\n        /* \"#utility.yul\":12547:12640   */\n      tag_546\n        /* \"#utility.yul\":12636:12639   */\n      dup3\n        /* \"#utility.yul\":12547:12640   */\n      tag_394\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":12665:12667   */\n      0x20\n        /* \"#utility.yul\":12660:12663   */\n      dup3\n        /* \"#utility.yul\":12656:12668   */\n      add\n        /* \"#utility.yul\":12649:12668   */\n      swap1\n      pop\n        /* \"#utility.yul\":12308:12674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12680:13099   */\n    tag_164:\n        /* \"#utility.yul\":12846:12850   */\n      0x00\n        /* \"#utility.yul\":12884:12886   */\n      0x20\n        /* \"#utility.yul\":12873:12882   */\n      dup3\n        /* \"#utility.yul\":12869:12887   */\n      add\n        /* \"#utility.yul\":12861:12887   */\n      swap1\n      pop\n        /* \"#utility.yul\":12933:12942   */\n      dup2\n        /* \"#utility.yul\":12927:12931   */\n      dup2\n        /* \"#utility.yul\":12923:12943   */\n      sub\n        /* \"#utility.yul\":12919:12920   */\n      0x00\n        /* \"#utility.yul\":12908:12917   */\n      dup4\n        /* \"#utility.yul\":12904:12921   */\n      add\n        /* \"#utility.yul\":12897:12944   */\n      mstore\n        /* \"#utility.yul\":12961:13092   */\n      tag_548\n        /* \"#utility.yul\":13087:13091   */\n      dup2\n        /* \"#utility.yul\":12961:13092   */\n      tag_395\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":12953:13092   */\n      swap1\n      pop\n        /* \"#utility.yul\":12680:13099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13105:13281   */\n    tag_396:\n        /* \"#utility.yul\":13245:13273   */\n      0x496e73756666696369656e74206f776e65722062616c616e6365000000000000\n        /* \"#utility.yul\":13241:13242   */\n      0x00\n        /* \"#utility.yul\":13233:13239   */\n      dup3\n        /* \"#utility.yul\":13229:13243   */\n      add\n        /* \"#utility.yul\":13222:13274   */\n      mstore\n        /* \"#utility.yul\":13105:13281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13287:13653   */\n    tag_397:\n        /* \"#utility.yul\":13429:13432   */\n      0x00\n        /* \"#utility.yul\":13450:13517   */\n      tag_551\n        /* \"#utility.yul\":13514:13516   */\n      0x1a\n        /* \"#utility.yul\":13509:13512   */\n      dup4\n        /* \"#utility.yul\":13450:13517   */\n      tag_368\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13443:13517   */\n      swap2\n      pop\n        /* \"#utility.yul\":13526:13619   */\n      tag_552\n        /* \"#utility.yul\":13615:13618   */\n      dup3\n        /* \"#utility.yul\":13526:13619   */\n      tag_396\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13644:13646   */\n      0x20\n        /* \"#utility.yul\":13639:13642   */\n      dup3\n        /* \"#utility.yul\":13635:13647   */\n      add\n        /* \"#utility.yul\":13628:13647   */\n      swap1\n      pop\n        /* \"#utility.yul\":13287:13653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13659:14078   */\n    tag_169:\n        /* \"#utility.yul\":13825:13829   */\n      0x00\n        /* \"#utility.yul\":13863:13865   */\n      0x20\n        /* \"#utility.yul\":13852:13861   */\n      dup3\n        /* \"#utility.yul\":13848:13866   */\n      add\n        /* \"#utility.yul\":13840:13866   */\n      swap1\n      pop\n        /* \"#utility.yul\":13912:13921   */\n      dup2\n        /* \"#utility.yul\":13906:13910   */\n      dup2\n        /* \"#utility.yul\":13902:13922   */\n      sub\n        /* \"#utility.yul\":13898:13899   */\n      0x00\n        /* \"#utility.yul\":13887:13896   */\n      dup4\n        /* \"#utility.yul\":13883:13900   */\n      add\n        /* \"#utility.yul\":13876:13923   */\n      mstore\n        /* \"#utility.yul\":13940:14071   */\n      tag_554\n        /* \"#utility.yul\":14066:14070   */\n      dup2\n        /* \"#utility.yul\":13940:14071   */\n      tag_397\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13932:14071   */\n      swap1\n      pop\n        /* \"#utility.yul\":13659:14078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14084:14232   */\n    tag_398:\n        /* \"#utility.yul\":14182:14188   */\n      dup3\n        /* \"#utility.yul\":14177:14180   */\n      dup2\n        /* \"#utility.yul\":14172:14175   */\n      dup4\n        /* \"#utility.yul\":14159:14189   */\n      calldatacopy\n        /* \"#utility.yul\":14223:14224   */\n      0x00\n        /* \"#utility.yul\":14214:14220   */\n      dup4\n        /* \"#utility.yul\":14209:14212   */\n      dup4\n        /* \"#utility.yul\":14205:14221   */\n      add\n        /* \"#utility.yul\":14198:14225   */\n      mstore\n        /* \"#utility.yul\":14084:14232   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14262:14579   */\n    tag_399:\n        /* \"#utility.yul\":14360:14363   */\n      0x00\n        /* \"#utility.yul\":14381:14452   */\n      tag_557\n        /* \"#utility.yul\":14445:14451   */\n      dup4\n        /* \"#utility.yul\":14440:14443   */\n      dup6\n        /* \"#utility.yul\":14381:14452   */\n      tag_368\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14374:14452   */\n      swap4\n      pop\n        /* \"#utility.yul\":14462:14518   */\n      tag_558\n        /* \"#utility.yul\":14511:14517   */\n      dup4\n        /* \"#utility.yul\":14506:14509   */\n      dup6\n        /* \"#utility.yul\":14499:14504   */\n      dup5\n        /* \"#utility.yul\":14462:14518   */\n      tag_398\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14543:14572   */\n      tag_559\n        /* \"#utility.yul\":14565:14571   */\n      dup4\n        /* \"#utility.yul\":14543:14572   */\n      tag_370\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14538:14541   */\n      dup5\n        /* \"#utility.yul\":14534:14573   */\n      add\n        /* \"#utility.yul\":14527:14573   */\n      swap1\n      pop\n        /* \"#utility.yul\":14262:14579   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14585:15028   */\n    tag_174:\n        /* \"#utility.yul\":14736:14740   */\n      0x00\n        /* \"#utility.yul\":14774:14776   */\n      0x40\n        /* \"#utility.yul\":14763:14772   */\n      dup3\n        /* \"#utility.yul\":14759:14777   */\n      add\n        /* \"#utility.yul\":14751:14777   */\n      swap1\n      pop\n        /* \"#utility.yul\":14787:14858   */\n      tag_561\n        /* \"#utility.yul\":14855:14856   */\n      0x00\n        /* \"#utility.yul\":14844:14853   */\n      dup4\n        /* \"#utility.yul\":14840:14857   */\n      add\n        /* \"#utility.yul\":14831:14837   */\n      dup7\n        /* \"#utility.yul\":14787:14858   */\n      tag_383\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14905:14914   */\n      dup2\n        /* \"#utility.yul\":14899:14903   */\n      dup2\n        /* \"#utility.yul\":14895:14915   */\n      sub\n        /* \"#utility.yul\":14890:14892   */\n      0x20\n        /* \"#utility.yul\":14879:14888   */\n      dup4\n        /* \"#utility.yul\":14875:14893   */\n      add\n        /* \"#utility.yul\":14868:14916   */\n      mstore\n        /* \"#utility.yul\":14933:15021   */\n      tag_562\n        /* \"#utility.yul\":15016:15020   */\n      dup2\n        /* \"#utility.yul\":15007:15013   */\n      dup5\n        /* \"#utility.yul\":14999:15005   */\n      dup7\n        /* \"#utility.yul\":14933:15021   */\n      tag_399\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14925:15021   */\n      swap1\n      pop\n        /* \"#utility.yul\":14585:15028   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15034:15204   */\n    tag_400:\n        /* \"#utility.yul\":15174:15196   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":15170:15171   */\n      0x00\n        /* \"#utility.yul\":15162:15168   */\n      dup3\n        /* \"#utility.yul\":15158:15172   */\n      add\n        /* \"#utility.yul\":15151:15197   */\n      mstore\n        /* \"#utility.yul\":15034:15204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15576   */\n    tag_401:\n        /* \"#utility.yul\":15352:15355   */\n      0x00\n        /* \"#utility.yul\":15373:15440   */\n      tag_565\n        /* \"#utility.yul\":15437:15439   */\n      0x14\n        /* \"#utility.yul\":15432:15435   */\n      dup4\n        /* \"#utility.yul\":15373:15440   */\n      tag_368\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15366:15440   */\n      swap2\n      pop\n        /* \"#utility.yul\":15449:15542   */\n      tag_566\n        /* \"#utility.yul\":15538:15541   */\n      dup3\n        /* \"#utility.yul\":15449:15542   */\n      tag_400\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15567:15569   */\n      0x20\n        /* \"#utility.yul\":15562:15565   */\n      dup3\n        /* \"#utility.yul\":15558:15570   */\n      add\n        /* \"#utility.yul\":15551:15570   */\n      swap1\n      pop\n        /* \"#utility.yul\":15210:15576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15582:16001   */\n    tag_212:\n        /* \"#utility.yul\":15748:15752   */\n      0x00\n        /* \"#utility.yul\":15786:15788   */\n      0x20\n        /* \"#utility.yul\":15775:15784   */\n      dup3\n        /* \"#utility.yul\":15771:15789   */\n      add\n        /* \"#utility.yul\":15763:15789   */\n      swap1\n      pop\n        /* \"#utility.yul\":15835:15844   */\n      dup2\n        /* \"#utility.yul\":15829:15833   */\n      dup2\n        /* \"#utility.yul\":15825:15845   */\n      sub\n        /* \"#utility.yul\":15821:15822   */\n      0x00\n        /* \"#utility.yul\":15810:15819   */\n      dup4\n        /* \"#utility.yul\":15806:15823   */\n      add\n        /* \"#utility.yul\":15799:15846   */\n      mstore\n        /* \"#utility.yul\":15863:15994   */\n      tag_568\n        /* \"#utility.yul\":15989:15993   */\n      dup2\n        /* \"#utility.yul\":15863:15994   */\n      tag_401\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15855:15994   */\n      swap1\n      pop\n        /* \"#utility.yul\":15582:16001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16007:16339   */\n    tag_227:\n        /* \"#utility.yul\":16128:16132   */\n      0x00\n        /* \"#utility.yul\":16166:16168   */\n      0x40\n        /* \"#utility.yul\":16155:16164   */\n      dup3\n        /* \"#utility.yul\":16151:16169   */\n      add\n        /* \"#utility.yul\":16143:16169   */\n      swap1\n      pop\n        /* \"#utility.yul\":16179:16250   */\n      tag_570\n        /* \"#utility.yul\":16247:16248   */\n      0x00\n        /* \"#utility.yul\":16236:16245   */\n      dup4\n        /* \"#utility.yul\":16232:16249   */\n      add\n        /* \"#utility.yul\":16223:16229   */\n      dup6\n        /* \"#utility.yul\":16179:16250   */\n      tag_390\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16260:16332   */\n      tag_571\n        /* \"#utility.yul\":16328:16330   */\n      0x20\n        /* \"#utility.yul\":16317:16326   */\n      dup4\n        /* \"#utility.yul\":16313:16331   */\n      add\n        /* \"#utility.yul\":16304:16310   */\n      dup5\n        /* \"#utility.yul\":16260:16332   */\n      tag_383\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16007:16339   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16345:16461   */\n    tag_402:\n        /* \"#utility.yul\":16415:16436   */\n      tag_573\n        /* \"#utility.yul\":16430:16435   */\n      dup2\n        /* \"#utility.yul\":16415:16436   */\n      tag_365\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16408:16413   */\n      dup2\n        /* \"#utility.yul\":16405:16437   */\n      eq\n        /* \"#utility.yul\":16395:16455   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":16451:16452   */\n      0x00\n        /* \"#utility.yul\":16448:16449   */\n      0x00\n        /* \"#utility.yul\":16441:16453   */\n      revert\n        /* \"#utility.yul\":16395:16455   */\n    tag_574:\n        /* \"#utility.yul\":16345:16461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16604   */\n    tag_403:\n        /* \"#utility.yul\":16521:16526   */\n      0x00\n        /* \"#utility.yul\":16552:16558   */\n      dup2\n        /* \"#utility.yul\":16546:16559   */\n      mload\n        /* \"#utility.yul\":16537:16559   */\n      swap1\n      pop\n        /* \"#utility.yul\":16568:16598   */\n      tag_576\n        /* \"#utility.yul\":16592:16597   */\n      dup2\n        /* \"#utility.yul\":16568:16598   */\n      tag_402\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16467:16604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16610:16955   */\n    tag_231:\n        /* \"#utility.yul\":16677:16683   */\n      0x00\n        /* \"#utility.yul\":16726:16728   */\n      0x20\n        /* \"#utility.yul\":16714:16723   */\n      dup3\n        /* \"#utility.yul\":16705:16712   */\n      dup5\n        /* \"#utility.yul\":16701:16724   */\n      sub\n        /* \"#utility.yul\":16697:16729   */\n      slt\n        /* \"#utility.yul\":16694:16813   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":16732:16811   */\n      tag_579\n      tag_360\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16694:16813   */\n    tag_578:\n        /* \"#utility.yul\":16852:16853   */\n      0x00\n        /* \"#utility.yul\":16877:16938   */\n      tag_580\n        /* \"#utility.yul\":16930:16937   */\n      dup5\n        /* \"#utility.yul\":16921:16927   */\n      dup3\n        /* \"#utility.yul\":16910:16919   */\n      dup6\n        /* \"#utility.yul\":16906:16928   */\n      add\n        /* \"#utility.yul\":16877:16938   */\n      tag_403\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16867:16938   */\n      swap2\n      pop\n        /* \"#utility.yul\":16823:16948   */\n      pop\n        /* \"#utility.yul\":16610:16955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16961:17127   */\n    tag_404:\n        /* \"#utility.yul\":17101:17119   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":17097:17098   */\n      0x00\n        /* \"#utility.yul\":17089:17095   */\n      dup3\n        /* \"#utility.yul\":17085:17099   */\n      add\n        /* \"#utility.yul\":17078:17120   */\n      mstore\n        /* \"#utility.yul\":16961:17127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17133:17499   */\n    tag_405:\n        /* \"#utility.yul\":17275:17278   */\n      0x00\n        /* \"#utility.yul\":17296:17363   */\n      tag_583\n        /* \"#utility.yul\":17360:17362   */\n      0x10\n        /* \"#utility.yul\":17355:17358   */\n      dup4\n        /* \"#utility.yul\":17296:17363   */\n      tag_368\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17289:17363   */\n      swap2\n      pop\n        /* \"#utility.yul\":17372:17465   */\n      tag_584\n        /* \"#utility.yul\":17461:17464   */\n      dup3\n        /* \"#utility.yul\":17372:17465   */\n      tag_404\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17490:17492   */\n      0x20\n        /* \"#utility.yul\":17485:17488   */\n      dup3\n        /* \"#utility.yul\":17481:17493   */\n      add\n        /* \"#utility.yul\":17474:17493   */\n      swap1\n      pop\n        /* \"#utility.yul\":17133:17499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17505:17924   */\n    tag_280:\n        /* \"#utility.yul\":17671:17675   */\n      0x00\n        /* \"#utility.yul\":17709:17711   */\n      0x20\n        /* \"#utility.yul\":17698:17707   */\n      dup3\n        /* \"#utility.yul\":17694:17712   */\n      add\n        /* \"#utility.yul\":17686:17712   */\n      swap1\n      pop\n        /* \"#utility.yul\":17758:17767   */\n      dup2\n        /* \"#utility.yul\":17752:17756   */\n      dup2\n        /* \"#utility.yul\":17748:17768   */\n      sub\n        /* \"#utility.yul\":17744:17745   */\n      0x00\n        /* \"#utility.yul\":17733:17742   */\n      dup4\n        /* \"#utility.yul\":17729:17746   */\n      add\n        /* \"#utility.yul\":17722:17769   */\n      mstore\n        /* \"#utility.yul\":17786:17917   */\n      tag_586\n        /* \"#utility.yul\":17912:17916   */\n      dup2\n        /* \"#utility.yul\":17786:17917   */\n      tag_405\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17778:17917   */\n      swap1\n      pop\n        /* \"#utility.yul\":17505:17924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17930:18111   */\n    tag_406:\n        /* \"#utility.yul\":18070:18103   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":18066:18067   */\n      0x00\n        /* \"#utility.yul\":18058:18064   */\n      dup3\n        /* \"#utility.yul\":18054:18068   */\n      add\n        /* \"#utility.yul\":18047:18104   */\n      mstore\n        /* \"#utility.yul\":17930:18111   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18117:18483   */\n    tag_407:\n        /* \"#utility.yul\":18259:18262   */\n      0x00\n        /* \"#utility.yul\":18280:18347   */\n      tag_589\n        /* \"#utility.yul\":18344:18346   */\n      0x1f\n        /* \"#utility.yul\":18339:18342   */\n      dup4\n        /* \"#utility.yul\":18280:18347   */\n      tag_368\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18273:18347   */\n      swap2\n      pop\n        /* \"#utility.yul\":18356:18449   */\n      tag_590\n        /* \"#utility.yul\":18445:18448   */\n      dup3\n        /* \"#utility.yul\":18356:18449   */\n      tag_406\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18474:18476   */\n      0x20\n        /* \"#utility.yul\":18469:18472   */\n      dup3\n        /* \"#utility.yul\":18465:18477   */\n      add\n        /* \"#utility.yul\":18458:18477   */\n      swap1\n      pop\n        /* \"#utility.yul\":18117:18483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18489:18908   */\n    tag_284:\n        /* \"#utility.yul\":18655:18659   */\n      0x00\n        /* \"#utility.yul\":18693:18695   */\n      0x20\n        /* \"#utility.yul\":18682:18691   */\n      dup3\n        /* \"#utility.yul\":18678:18696   */\n      add\n        /* \"#utility.yul\":18670:18696   */\n      swap1\n      pop\n        /* \"#utility.yul\":18742:18751   */\n      dup2\n        /* \"#utility.yul\":18736:18740   */\n      dup2\n        /* \"#utility.yul\":18732:18752   */\n      sub\n        /* \"#utility.yul\":18728:18729   */\n      0x00\n        /* \"#utility.yul\":18717:18726   */\n      dup4\n        /* \"#utility.yul\":18713:18730   */\n      add\n        /* \"#utility.yul\":18706:18753   */\n      mstore\n        /* \"#utility.yul\":18770:18901   */\n      tag_592\n        /* \"#utility.yul\":18896:18900   */\n      dup2\n        /* \"#utility.yul\":18770:18901   */\n      tag_407\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18762:18901   */\n      swap1\n      pop\n        /* \"#utility.yul\":18489:18908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18914:19356   */\n    tag_298:\n        /* \"#utility.yul\":19063:19067   */\n      0x00\n        /* \"#utility.yul\":19101:19103   */\n      0x60\n        /* \"#utility.yul\":19090:19099   */\n      dup3\n        /* \"#utility.yul\":19086:19104   */\n      add\n        /* \"#utility.yul\":19078:19104   */\n      swap1\n      pop\n        /* \"#utility.yul\":19114:19185   */\n      tag_594\n        /* \"#utility.yul\":19182:19183   */\n      0x00\n        /* \"#utility.yul\":19171:19180   */\n      dup4\n        /* \"#utility.yul\":19167:19184   */\n      add\n        /* \"#utility.yul\":19158:19164   */\n      dup7\n        /* \"#utility.yul\":19114:19185   */\n      tag_390\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19195:19267   */\n      tag_595\n        /* \"#utility.yul\":19263:19265   */\n      0x20\n        /* \"#utility.yul\":19252:19261   */\n      dup4\n        /* \"#utility.yul\":19248:19266   */\n      add\n        /* \"#utility.yul\":19239:19245   */\n      dup6\n        /* \"#utility.yul\":19195:19267   */\n      tag_383\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19277:19349   */\n      tag_596\n        /* \"#utility.yul\":19345:19347   */\n      0x40\n        /* \"#utility.yul\":19334:19343   */\n      dup4\n        /* \"#utility.yul\":19330:19348   */\n      add\n        /* \"#utility.yul\":19321:19327   */\n      dup5\n        /* \"#utility.yul\":19277:19349   */\n      tag_383\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18914:19356   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19362:19694   */\n    tag_343:\n        /* \"#utility.yul\":19483:19487   */\n      0x00\n        /* \"#utility.yul\":19521:19523   */\n      0x40\n        /* \"#utility.yul\":19510:19519   */\n      dup3\n        /* \"#utility.yul\":19506:19524   */\n      add\n        /* \"#utility.yul\":19498:19524   */\n      swap1\n      pop\n        /* \"#utility.yul\":19534:19605   */\n      tag_598\n        /* \"#utility.yul\":19602:19603   */\n      0x00\n        /* \"#utility.yul\":19591:19600   */\n      dup4\n        /* \"#utility.yul\":19587:19604   */\n      add\n        /* \"#utility.yul\":19578:19584   */\n      dup6\n        /* \"#utility.yul\":19534:19605   */\n      tag_390\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19615:19687   */\n      tag_599\n        /* \"#utility.yul\":19683:19685   */\n      0x20\n        /* \"#utility.yul\":19672:19681   */\n      dup4\n        /* \"#utility.yul\":19668:19686   */\n      add\n        /* \"#utility.yul\":19659:19665   */\n      dup5\n        /* \"#utility.yul\":19615:19687   */\n      tag_387\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19362:19694   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19700:19880   */\n    tag_408:\n        /* \"#utility.yul\":19748:19825   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19745:19746   */\n      0x00\n        /* \"#utility.yul\":19738:19826   */\n      mstore\n        /* \"#utility.yul\":19845:19849   */\n      0x11\n        /* \"#utility.yul\":19842:19843   */\n      0x04\n        /* \"#utility.yul\":19835:19850   */\n      mstore\n        /* \"#utility.yul\":19869:19873   */\n      0x24\n        /* \"#utility.yul\":19866:19867   */\n      0x00\n        /* \"#utility.yul\":19859:19874   */\n      revert\n        /* \"#utility.yul\":19886:20077   */\n    tag_347:\n        /* \"#utility.yul\":19926:19929   */\n      0x00\n        /* \"#utility.yul\":19945:19965   */\n      tag_602\n        /* \"#utility.yul\":19963:19964   */\n      dup3\n        /* \"#utility.yul\":19945:19965   */\n      tag_376\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19940:19965   */\n      swap2\n      pop\n        /* \"#utility.yul\":19979:19999   */\n      tag_603\n        /* \"#utility.yul\":19997:19998   */\n      dup4\n        /* \"#utility.yul\":19979:19999   */\n      tag_376\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19974:19999   */\n      swap3\n      pop\n        /* \"#utility.yul\":20022:20023   */\n      dup3\n        /* \"#utility.yul\":20019:20020   */\n      dup3\n        /* \"#utility.yul\":20015:20024   */\n      add\n        /* \"#utility.yul\":20008:20024   */\n      swap1\n      pop\n        /* \"#utility.yul\":20043:20046   */\n      dup1\n        /* \"#utility.yul\":20040:20041   */\n      dup3\n        /* \"#utility.yul\":20037:20047   */\n      gt\n        /* \"#utility.yul\":20034:20070   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":20050:20068   */\n      tag_605\n      tag_408\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":20034:20070   */\n    tag_604:\n        /* \"#utility.yul\":19886:20077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20083:20253   */\n    tag_409:\n        /* \"#utility.yul\":20223:20245   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":20219:20220   */\n      0x00\n        /* \"#utility.yul\":20211:20217   */\n      dup3\n        /* \"#utility.yul\":20207:20221   */\n      add\n        /* \"#utility.yul\":20200:20246   */\n      mstore\n        /* \"#utility.yul\":20083:20253   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20259:20625   */\n    tag_410:\n        /* \"#utility.yul\":20401:20404   */\n      0x00\n        /* \"#utility.yul\":20422:20489   */\n      tag_608\n        /* \"#utility.yul\":20486:20488   */\n      0x14\n        /* \"#utility.yul\":20481:20484   */\n      dup4\n        /* \"#utility.yul\":20422:20489   */\n      tag_368\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20415:20489   */\n      swap2\n      pop\n        /* \"#utility.yul\":20498:20591   */\n      tag_609\n        /* \"#utility.yul\":20587:20590   */\n      dup3\n        /* \"#utility.yul\":20498:20591   */\n      tag_409\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20616:20618   */\n      0x20\n        /* \"#utility.yul\":20611:20614   */\n      dup3\n        /* \"#utility.yul\":20607:20619   */\n      add\n        /* \"#utility.yul\":20600:20619   */\n      swap1\n      pop\n        /* \"#utility.yul\":20259:20625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20631:21050   */\n    tag_358:\n        /* \"#utility.yul\":20797:20801   */\n      0x00\n        /* \"#utility.yul\":20835:20837   */\n      0x20\n        /* \"#utility.yul\":20824:20833   */\n      dup3\n        /* \"#utility.yul\":20820:20838   */\n      add\n        /* \"#utility.yul\":20812:20838   */\n      swap1\n      pop\n        /* \"#utility.yul\":20884:20893   */\n      dup2\n        /* \"#utility.yul\":20878:20882   */\n      dup2\n        /* \"#utility.yul\":20874:20894   */\n      sub\n        /* \"#utility.yul\":20870:20871   */\n      0x00\n        /* \"#utility.yul\":20859:20868   */\n      dup4\n        /* \"#utility.yul\":20855:20872   */\n      add\n        /* \"#utility.yul\":20848:20895   */\n      mstore\n        /* \"#utility.yul\":20912:21043   */\n      tag_611\n        /* \"#utility.yul\":21038:21042   */\n      dup2\n        /* \"#utility.yul\":20912:21043   */\n      tag_410\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20904:21043   */\n      swap1\n      pop\n        /* \"#utility.yul\":20631:21050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f78f591775794a628bee3e1cf0a7784c40da85a1e11160aff6e10aaa25e081464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1601": {
									"entryPoint": null,
									"id": 1601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_430": {
									"entryPoint": null,
									"id": 430,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 819,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1192": {
									"entryPoint": 686,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 1702,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_526": {
									"entryPoint": 483,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1159": {
									"entryPoint": 1065,
									"id": 1159,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_1772": {
									"entryPoint": 678,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 1602,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:13",
										"nodeType": "YulBlock",
										"src": "0:10797:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1261:40:13",
													"nodeType": "YulBlock",
													"src": "1261:40:13",
													"statements": [
														{
															"nativeSrc": "1272:22:13",
															"nodeType": "YulAssignment",
															"src": "1272:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:13"
																},
																"nativeSrc": "1282:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:13",
														"nodeType": "YulTypedName",
														"src": "1244:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:13",
														"nodeType": "YulTypedName",
														"src": "1254:6:13",
														"type": ""
													}
												],
												"src": "1202:99:13"
											},
											{
												"body": {
													"nativeSrc": "1335:152:13",
													"nodeType": "YulBlock",
													"src": "1335:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nativeSrc": "1345:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:13"
															},
															"nativeSrc": "1345:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:13"
															},
															"nativeSrc": "1442:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nativeSrc": "1466:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:13"
															},
															"nativeSrc": "1466:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:13"
											},
											{
												"body": {
													"nativeSrc": "1521:152:13",
													"nodeType": "YulBlock",
													"src": "1521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:13"
																},
																"nativeSrc": "1531:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:13"
															},
															"nativeSrc": "1531:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																},
																"nativeSrc": "1628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:13"
															},
															"nativeSrc": "1628:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nativeSrc": "1652:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:13"
															},
															"nativeSrc": "1652:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:13"
											},
											{
												"body": {
													"nativeSrc": "1730:269:13",
													"nodeType": "YulBlock",
													"src": "1730:269:13",
													"statements": [
														{
															"nativeSrc": "1740:22:13",
															"nodeType": "YulAssignment",
															"src": "1740:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:13"
																},
																"nativeSrc": "1750:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																}
															]
														},
														{
															"nativeSrc": "1771:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:13"
																},
																"nativeSrc": "1797:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:13",
																"nodeType": "YulBlock",
																"src": "1848:51:13",
																"statements": [
																	{
																		"nativeSrc": "1862:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:13"
																			},
																			"nativeSrc": "1872:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:13"
																},
																"nativeSrc": "1821:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:13"
															},
															"nativeSrc": "1818:81:13",
															"nodeType": "YulIf",
															"src": "1818:81:13"
														},
														{
															"body": {
																"nativeSrc": "1951:42:13",
																"nodeType": "YulBlock",
																"src": "1951:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:13"
																			},
																			"nativeSrc": "1965:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:13"
																		},
																		"nativeSrc": "1965:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nativeSrc": "1935:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:13"
																},
																"nativeSrc": "1912:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:13"
															},
															"nativeSrc": "1909:84:13",
															"nodeType": "YulIf",
															"src": "1909:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:13",
														"nodeType": "YulTypedName",
														"src": "1714:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:13",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													}
												],
												"src": "1679:320:13"
											},
											{
												"body": {
													"nativeSrc": "2059:87:13",
													"nodeType": "YulBlock",
													"src": "2059:87:13",
													"statements": [
														{
															"nativeSrc": "2069:11:13",
															"nodeType": "YulAssignment",
															"src": "2069:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:13",
																"nodeType": "YulIdentifier",
																"src": "2077:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																},
																"nativeSrc": "2090:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:13"
															},
															"nativeSrc": "2090:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:13"
														},
														{
															"nativeSrc": "2113:26:13",
															"nodeType": "YulAssignment",
															"src": "2113:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:13"
																},
																"nativeSrc": "2121:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:13",
														"nodeType": "YulTypedName",
														"src": "2046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:13",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "2005:141:13"
											},
											{
												"body": {
													"nativeSrc": "2196:49:13",
													"nodeType": "YulBlock",
													"src": "2196:49:13",
													"statements": [
														{
															"nativeSrc": "2206:33:13",
															"nodeType": "YulAssignment",
															"src": "2206:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nativeSrc": "2220:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nativeSrc": "2216:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:13",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:13",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2152:93:13"
											},
											{
												"body": {
													"nativeSrc": "2304:54:13",
													"nodeType": "YulBlock",
													"src": "2304:54:13",
													"statements": [
														{
															"nativeSrc": "2314:37:13",
															"nodeType": "YulAssignment",
															"src": "2314:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:13"
																},
																"nativeSrc": "2335:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:13",
														"nodeType": "YulTypedName",
														"src": "2279:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:13",
														"nodeType": "YulTypedName",
														"src": "2285:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:13",
														"nodeType": "YulTypedName",
														"src": "2295:8:13",
														"type": ""
													}
												],
												"src": "2251:107:13"
											},
											{
												"body": {
													"nativeSrc": "2440:317:13",
													"nodeType": "YulBlock",
													"src": "2440:317:13",
													"statements": [
														{
															"nativeSrc": "2450:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:13"
																},
																"nativeSrc": "2467:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:13"
																},
																"nativeSrc": "2506:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:13",
															"nodeType": "YulAssignment",
															"src": "2612:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:13"
																},
																"nativeSrc": "2624:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:13"
																}
															]
														},
														{
															"nativeSrc": "2672:30:13",
															"nodeType": "YulAssignment",
															"src": "2672:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:13"
																		},
																		"nativeSrc": "2692:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nativeSrc": "2681:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:13"
																}
															]
														},
														{
															"nativeSrc": "2711:40:13",
															"nodeType": "YulAssignment",
															"src": "2711:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:13"
																},
																"nativeSrc": "2721:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:13",
														"nodeType": "YulTypedName",
														"src": "2401:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:13",
														"nodeType": "YulTypedName",
														"src": "2408:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:13",
														"nodeType": "YulTypedName",
														"src": "2420:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:13",
														"nodeType": "YulTypedName",
														"src": "2433:6:13",
														"type": ""
													}
												],
												"src": "2364:393:13"
											},
											{
												"body": {
													"nativeSrc": "2808:32:13",
													"nodeType": "YulBlock",
													"src": "2808:32:13",
													"statements": [
														{
															"nativeSrc": "2818:16:13",
															"nodeType": "YulAssignment",
															"src": "2818:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:13",
																"nodeType": "YulIdentifier",
																"src": "2829:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:13",
														"nodeType": "YulTypedName",
														"src": "2790:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:13",
														"nodeType": "YulTypedName",
														"src": "2800:7:13",
														"type": ""
													}
												],
												"src": "2763:77:13"
											},
											{
												"body": {
													"nativeSrc": "2878:28:13",
													"nodeType": "YulBlock",
													"src": "2878:28:13",
													"statements": [
														{
															"nativeSrc": "2888:12:13",
															"nodeType": "YulAssignment",
															"src": "2888:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:13",
																"nodeType": "YulIdentifier",
																"src": "2895:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:13",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:13",
														"nodeType": "YulTypedName",
														"src": "2874:3:13",
														"type": ""
													}
												],
												"src": "2846:60:13"
											},
											{
												"body": {
													"nativeSrc": "2972:82:13",
													"nodeType": "YulBlock",
													"src": "2972:82:13",
													"statements": [
														{
															"nativeSrc": "2982:66:13",
															"nodeType": "YulAssignment",
															"src": "2982:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:13"
																				},
																				"nativeSrc": "3022:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:13"
																		},
																		"nativeSrc": "3013:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:13"
																},
																"nativeSrc": "2995:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:13",
														"nodeType": "YulTypedName",
														"src": "2952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:13",
														"nodeType": "YulTypedName",
														"src": "2962:9:13",
														"type": ""
													}
												],
												"src": "2912:142:13"
											},
											{
												"body": {
													"nativeSrc": "3107:28:13",
													"nodeType": "YulBlock",
													"src": "3107:28:13",
													"statements": [
														{
															"nativeSrc": "3117:12:13",
															"nodeType": "YulAssignment",
															"src": "3117:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:13",
																"nodeType": "YulIdentifier",
																"src": "3124:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:13",
														"nodeType": "YulTypedName",
														"src": "3093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:13",
														"nodeType": "YulTypedName",
														"src": "3103:3:13",
														"type": ""
													}
												],
												"src": "3060:75:13"
											},
											{
												"body": {
													"nativeSrc": "3217:193:13",
													"nodeType": "YulBlock",
													"src": "3217:193:13",
													"statements": [
														{
															"nativeSrc": "3227:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:13"
																},
																"nativeSrc": "3251:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:13",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:13"
																				},
																				"nativeSrc": "3340:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:13"
																				},
																				"nativeSrc": "3361:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:13"
																		},
																		"nativeSrc": "3312:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:13"
																},
																"nativeSrc": "3299:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:13"
															},
															"nativeSrc": "3299:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:13",
														"nodeType": "YulTypedName",
														"src": "3194:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:13",
														"nodeType": "YulTypedName",
														"src": "3200:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:13",
														"nodeType": "YulTypedName",
														"src": "3208:7:13",
														"type": ""
													}
												],
												"src": "3141:269:13"
											},
											{
												"body": {
													"nativeSrc": "3465:24:13",
													"nodeType": "YulBlock",
													"src": "3465:24:13",
													"statements": [
														{
															"nativeSrc": "3475:8:13",
															"nodeType": "YulAssignment",
															"src": "3475:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:13",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:13",
														"nodeType": "YulTypedName",
														"src": "3461:3:13",
														"type": ""
													}
												],
												"src": "3416:73:13"
											},
											{
												"body": {
													"nativeSrc": "3548:136:13",
													"nodeType": "YulBlock",
													"src": "3548:136:13",
													"statements": [
														{
															"nativeSrc": "3558:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:13"
																},
																"nativeSrc": "3572:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:13"
																},
																"nativeSrc": "3613:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:13"
															},
															"nativeSrc": "3613:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:13",
														"nodeType": "YulTypedName",
														"src": "3534:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:13",
														"nodeType": "YulTypedName",
														"src": "3540:6:13",
														"type": ""
													}
												],
												"src": "3495:189:13"
											},
											{
												"body": {
													"nativeSrc": "3740:136:13",
													"nodeType": "YulBlock",
													"src": "3740:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:13",
																"nodeType": "YulBlock",
																"src": "3807:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:13"
																			},
																			"nativeSrc": "3821:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:13"
																		},
																		"nativeSrc": "3821:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:13"
																},
																"nativeSrc": "3757:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:13"
															},
															"nativeSrc": "3750:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:13",
																"nodeType": "YulBlock",
																"src": "3772:26:13",
																"statements": [
																	{
																		"nativeSrc": "3774:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:13"
																			},
																			"nativeSrc": "3783:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:13",
																"nodeType": "YulBlock",
																"src": "3754:2:13",
																"statements": []
															},
															"src": "3750:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:13",
														"nodeType": "YulTypedName",
														"src": "3728:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:13",
														"nodeType": "YulTypedName",
														"src": "3735:3:13",
														"type": ""
													}
												],
												"src": "3690:186:13"
											},
											{
												"body": {
													"nativeSrc": "3961:464:13",
													"nodeType": "YulBlock",
													"src": "3961:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:13",
																"nodeType": "YulBlock",
																"src": "3987:431:13",
																"statements": [
																	{
																		"nativeSrc": "4001:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:13"
																			},
																			"nativeSrc": "4017:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:13"
																					},
																					"nativeSrc": "4101:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:13"
																			},
																			"nativeSrc": "4087:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:13",
																			"nodeType": "YulBlock",
																			"src": "4288:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:13"
																			},
																			"nativeSrc": "4269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:13"
																		},
																		"nativeSrc": "4266:49:13",
																		"nodeType": "YulIf",
																		"src": "4266:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:13"
																							},
																							"nativeSrc": "4384:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:13"
																					},
																					"nativeSrc": "4370:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:13"
																			},
																			"nativeSrc": "4328:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:13"
																		},
																		"nativeSrc": "4328:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:13"
																},
																"nativeSrc": "3975:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:13"
															},
															"nativeSrc": "3972:446:13",
															"nodeType": "YulIf",
															"src": "3972:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:13",
														"nodeType": "YulTypedName",
														"src": "3937:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:13",
														"nodeType": "YulTypedName",
														"src": "3944:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:13",
														"nodeType": "YulTypedName",
														"src": "3949:10:13",
														"type": ""
													}
												],
												"src": "3882:543:13"
											},
											{
												"body": {
													"nativeSrc": "4494:54:13",
													"nodeType": "YulBlock",
													"src": "4494:54:13",
													"statements": [
														{
															"nativeSrc": "4504:37:13",
															"nodeType": "YulAssignment",
															"src": "4504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:13"
																},
																"nativeSrc": "4525:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:13",
														"nodeType": "YulTypedName",
														"src": "4469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:13",
														"nodeType": "YulTypedName",
														"src": "4475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:13",
														"nodeType": "YulTypedName",
														"src": "4485:8:13",
														"type": ""
													}
												],
												"src": "4431:117:13"
											},
											{
												"body": {
													"nativeSrc": "4605:118:13",
													"nodeType": "YulBlock",
													"src": "4605:118:13",
													"statements": [
														{
															"nativeSrc": "4615:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:13"
																				},
																				"nativeSrc": "4660:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nativeSrc": "4675:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:13"
																		},
																		"nativeSrc": "4631:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:13"
																},
																"nativeSrc": "4627:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:13",
															"nodeType": "YulAssignment",
															"src": "4692:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:13"
																},
																"nativeSrc": "4702:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:13",
														"nodeType": "YulTypedName",
														"src": "4582:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:13",
														"nodeType": "YulTypedName",
														"src": "4588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:13",
														"nodeType": "YulTypedName",
														"src": "4598:6:13",
														"type": ""
													}
												],
												"src": "4554:169:13"
											},
											{
												"body": {
													"nativeSrc": "4809:214:13",
													"nodeType": "YulBlock",
													"src": "4809:214:13",
													"statements": [
														{
															"nativeSrc": "4942:37:13",
															"nodeType": "YulAssignment",
															"src": "4942:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:13"
																},
																"nativeSrc": "4950:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:13"
																}
															]
														},
														{
															"nativeSrc": "4988:29:13",
															"nodeType": "YulAssignment",
															"src": "4988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:13"
																		},
																		"nativeSrc": "5005:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:13"
																},
																"nativeSrc": "4996:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:13",
														"nodeType": "YulTypedName",
														"src": "4790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:13",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:13",
														"nodeType": "YulTypedName",
														"src": "4804:4:13",
														"type": ""
													}
												],
												"src": "4728:295:13"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:13",
													"nodeType": "YulBlock",
													"src": "5120:1303:13",
													"statements": [
														{
															"nativeSrc": "5131:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:13"
																},
																"nativeSrc": "5145:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:13",
																"nodeType": "YulBlock",
																"src": "5267:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:13"
																			},
																			"nativeSrc": "5269:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:13"
																		},
																		"nativeSrc": "5269:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:13"
																},
																"nativeSrc": "5236:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:13"
															},
															"nativeSrc": "5233:56:13",
															"nodeType": "YulIf",
															"src": "5233:56:13"
														},
														{
															"nativeSrc": "5299:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:13"
																		},
																		"nativeSrc": "5339:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:13"
																},
																"nativeSrc": "5313:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:13"
																},
																"nativeSrc": "5398:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:13"
															},
															"nativeSrc": "5398:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:13"
														},
														{
															"nativeSrc": "5475:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:13",
																"nodeType": "YulLiteral",
																"src": "5492:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:13",
															"nodeType": "YulAssignment",
															"src": "5503:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:13",
																"nodeType": "YulLiteral",
																"src": "5516:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:13",
																		"nodeType": "YulBlock",
																		"src": "5567:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:13"
																							},
																							"nativeSrc": "5608:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:13"
																					},
																					"nativeSrc": "5596:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:13"
																					},
																					"nativeSrc": "5646:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:13",
																					"nodeType": "YulBlock",
																					"src": "5764:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:13"
																												},
																												"nativeSrc": "5803:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:13"
																										},
																										"nativeSrc": "5797:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:13"
																								},
																								"nativeSrc": "5782:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:13"
																							},
																							"nativeSrc": "5782:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:13"
																						},
																						{
																							"nativeSrc": "5841:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:13"
																								},
																								"nativeSrc": "5851:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:13"
																								},
																								"nativeSrc": "5895:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:13"
																					},
																					"nativeSrc": "5727:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:13"
																				},
																				"nativeSrc": "5719:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:13",
																					"nodeType": "YulBlock",
																					"src": "5742:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:13"
																								},
																								"nativeSrc": "5749:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:13",
																					"nodeType": "YulBlock",
																					"src": "5723:3:13",
																					"statements": []
																				},
																				"src": "5719:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:13",
																					"nodeType": "YulBlock",
																					"src": "5963:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:13"
																										},
																										"nativeSrc": "6004:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:13"
																								},
																								"nativeSrc": "5998:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:13",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:13"
																												},
																												"nativeSrc": "6086:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:13"
																										},
																										"nativeSrc": "6056:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:13"
																								},
																								"nativeSrc": "6041:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:13"
																							},
																							"nativeSrc": "6041:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:13"
																					},
																					"nativeSrc": "5943:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:13"
																				},
																				"nativeSrc": "5940:179:13",
																				"nodeType": "YulIf",
																				"src": "5940:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:13",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:13"
																									},
																									"nativeSrc": "6149:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:13",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:13"
																							},
																							"nativeSrc": "6145:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					},
																					"nativeSrc": "6132:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:13"
																				},
																				"nativeSrc": "6132:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:13",
																	"nodeType": "YulCase",
																	"src": "5560:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:13",
																		"nodeType": "YulBlock",
																		"src": "6195:222:13",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:13",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:13",
																					"nodeType": "YulBlock",
																					"src": "6246:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:13"
																										},
																										"nativeSrc": "6279:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:13"
																								},
																								"nativeSrc": "6273:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:13"
																				},
																				"nativeSrc": "6236:77:13",
																				"nodeType": "YulIf",
																				"src": "6236:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:13"
																							},
																							"nativeSrc": "6339:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:13"
																					},
																					"nativeSrc": "6326:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:13"
																				},
																				"nativeSrc": "6326:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:13"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:13",
																	"nodeType": "YulCase",
																	"src": "6187:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:13"
																},
																"nativeSrc": "5537:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:13"
															},
															"nativeSrc": "5530:887:13",
															"nodeType": "YulSwitch",
															"src": "5530:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:13",
														"nodeType": "YulTypedName",
														"src": "5109:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"src": "5028:1395:13"
											},
											{
												"body": {
													"nativeSrc": "6494:53:13",
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nativeSrc": "6516:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nativeSrc": "6504:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nativeSrc": "6504:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:13",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:13",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nativeSrc": "6651:124:13",
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nativeSrc": "6661:26:13",
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nativeSrc": "6669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nativeSrc": "6750:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nativeSrc": "6697:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nativeSrc": "6697:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:13",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:13",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:13",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											},
											{
												"body": {
													"nativeSrc": "6809:152:13",
													"nodeType": "YulBlock",
													"src": "6809:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:13",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:13"
																},
																"nativeSrc": "6819:88:13",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:13"
															},
															"nativeSrc": "6819:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:13"
																},
																"nativeSrc": "6916:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:13"
															},
															"nativeSrc": "6916:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:13"
																},
																"nativeSrc": "6940:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:13"
															},
															"nativeSrc": "6940:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:13"
											},
											{
												"body": {
													"nativeSrc": "7018:51:13",
													"nodeType": "YulBlock",
													"src": "7018:51:13",
													"statements": [
														{
															"nativeSrc": "7028:34:13",
															"nodeType": "YulAssignment",
															"src": "7028:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:13"
																},
																"nativeSrc": "7049:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:13",
														"nodeType": "YulTypedName",
														"src": "6999:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:13",
														"nodeType": "YulTypedName",
														"src": "7009:8:13",
														"type": ""
													}
												],
												"src": "6967:102:13"
											},
											{
												"body": {
													"nativeSrc": "7148:775:13",
													"nodeType": "YulBlock",
													"src": "7148:775:13",
													"statements": [
														{
															"nativeSrc": "7158:15:13",
															"nodeType": "YulAssignment",
															"src": "7158:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:13",
																"nodeType": "YulIdentifier",
																"src": "7167:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:13"
																}
															]
														},
														{
															"nativeSrc": "7182:14:13",
															"nodeType": "YulAssignment",
															"src": "7182:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:13",
																"nodeType": "YulIdentifier",
																"src": "7191:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:13",
																"nodeType": "YulBlock",
																"src": "7240:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:13",
																			"nodeType": "YulBlock",
																			"src": "7328:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:13"
																						},
																						"nativeSrc": "7330:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:13"
																					},
																					"nativeSrc": "7330:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:13"
																					},
																					"nativeSrc": "7312:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:13"
																			},
																			"nativeSrc": "7303:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:13"
																		},
																		"nativeSrc": "7300:50:13",
																		"nodeType": "YulIf",
																		"src": "7300:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:13",
																			"nodeType": "YulBlock",
																			"src": "7395:419:13",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:13",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:13"
																						},
																						"nativeSrc": "7784:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:13"
																			},
																			"nativeSrc": "7366:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:13"
																		},
																		"nativeSrc": "7363:451:13",
																		"nodeType": "YulIf",
																		"src": "7363:451:13"
																	},
																	{
																		"nativeSrc": "7827:23:13",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:13"
																			},
																			"nativeSrc": "7835:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:13",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:13"
																			},
																			"nativeSrc": "7875:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:13"
																},
																"nativeSrc": "7213:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:13"
															},
															"nativeSrc": "7205:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:13",
																"nodeType": "YulBlock",
																"src": "7229:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:13",
																"nodeType": "YulBlock",
																"src": "7209:3:13",
																"statements": []
															},
															"src": "7205:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:13",
														"nodeType": "YulTypedName",
														"src": "7103:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:13",
														"nodeType": "YulTypedName",
														"src": "7111:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:13",
														"nodeType": "YulTypedName",
														"src": "7118:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:13",
														"nodeType": "YulTypedName",
														"src": "7128:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:13",
														"nodeType": "YulTypedName",
														"src": "7136:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:13",
														"nodeType": "YulTypedName",
														"src": "7143:4:13",
														"type": ""
													}
												],
												"src": "7075:848:13"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:13",
													"nodeType": "YulBlock",
													"src": "7989:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:13",
																"nodeType": "YulBlock",
																"src": "8184:20:13",
																"statements": [
																	{
																		"nativeSrc": "8186:10:13",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:13",
																		"nodeType": "YulLeave",
																		"src": "8197:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:13"
																},
																"nativeSrc": "8167:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:13"
															},
															"nativeSrc": "8164:40:13",
															"nodeType": "YulIf",
															"src": "8164:40:13"
														},
														{
															"body": {
																"nativeSrc": "8229:20:13",
																"nodeType": "YulBlock",
																"src": "8229:20:13",
																"statements": [
																	{
																		"nativeSrc": "8231:10:13",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:13",
																		"nodeType": "YulLeave",
																		"src": "8242:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:13"
																},
																"nativeSrc": "8216:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:13"
															},
															"nativeSrc": "8213:36:13",
															"nodeType": "YulIf",
															"src": "8213:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:13",
																		"nodeType": "YulBlock",
																		"src": "8359:20:13",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:13",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:13",
																				"nodeType": "YulLeave",
																				"src": "8372:5:13"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:13",
																	"nodeType": "YulCase",
																	"src": "8352:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:13",
																		"nodeType": "YulBlock",
																		"src": "8403:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:13",
																					"nodeType": "YulBlock",
																					"src": "8438:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:13"
																								},
																								"nativeSrc": "8440:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:13"
																							},
																							"nativeSrc": "8440:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:13",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:13"
																					},
																					"nativeSrc": "8420:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:13"
																				},
																				"nativeSrc": "8417:43:13",
																				"nodeType": "YulIf",
																				"src": "8417:43:13"
																			},
																			{
																				"nativeSrc": "8473:25:13",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:13",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:13"
																					},
																					"nativeSrc": "8482:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:13",
																					"nodeType": "YulBlock",
																					"src": "8529:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:13"
																								},
																								"nativeSrc": "8531:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:13"
																							},
																							"nativeSrc": "8531:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:13"
																					},
																					"nativeSrc": "8514:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:13"
																				},
																				"nativeSrc": "8511:40:13",
																				"nodeType": "YulIf",
																				"src": "8511:40:13"
																			},
																			{
																				"nativeSrc": "8564:5:13",
																				"nodeType": "YulLeave",
																				"src": "8564:5:13"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:13",
																	"nodeType": "YulCase",
																	"src": "8388:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:13",
																"nodeType": "YulIdentifier",
																"src": "8309:4:13"
															},
															"nativeSrc": "8302:277:13",
															"nodeType": "YulSwitch",
															"src": "8302:277:13"
														},
														{
															"body": {
																"nativeSrc": "8711:123:13",
																"nodeType": "YulBlock",
																"src": "8711:123:13",
																"statements": [
																	{
																		"nativeSrc": "8725:28:13",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:13"
																			},
																			"nativeSrc": "8734:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:13",
																			"nodeType": "YulBlock",
																			"src": "8784:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:13"
																						},
																						"nativeSrc": "8786:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:13"
																					},
																					"nativeSrc": "8786:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:13"
																			},
																			"nativeSrc": "8769:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:13"
																		},
																		"nativeSrc": "8766:40:13",
																		"nodeType": "YulIf",
																		"src": "8766:40:13"
																	},
																	{
																		"nativeSrc": "8819:5:13",
																		"nodeType": "YulLeave",
																		"src": "8819:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:13",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:13"
																				},
																				"nativeSrc": "8611:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:13",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:13"
																				},
																				"nativeSrc": "8625:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:13"
																		},
																		"nativeSrc": "8607:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:13",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:13"
																				},
																				"nativeSrc": "8660:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:13",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:13"
																				},
																				"nativeSrc": "8675:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:13"
																		},
																		"nativeSrc": "8656:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:13"
																},
																"nativeSrc": "8591:111:13",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:13"
															},
															"nativeSrc": "8588:246:13",
															"nodeType": "YulIf",
															"src": "8588:246:13"
														},
														{
															"nativeSrc": "8844:57:13",
															"nodeType": "YulAssignment",
															"src": "8844:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:13"
																},
																"nativeSrc": "8859:42:13",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:13",
																"nodeType": "YulBlock",
																"src": "8940:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:13"
																			},
																			"nativeSrc": "8942:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:13"
																		},
																		"nativeSrc": "8942:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:13"
																		},
																		"nativeSrc": "8924:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:13"
																},
																"nativeSrc": "8914:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:13"
															},
															"nativeSrc": "8911:51:13",
															"nodeType": "YulIf",
															"src": "8911:51:13"
														},
														{
															"nativeSrc": "8971:25:13",
															"nodeType": "YulAssignment",
															"src": "8971:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:13"
																},
																"nativeSrc": "8980:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:13",
														"nodeType": "YulTypedName",
														"src": "7959:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:13",
														"nodeType": "YulTypedName",
														"src": "7965:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:13",
														"nodeType": "YulTypedName",
														"src": "7975:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:13",
														"nodeType": "YulTypedName",
														"src": "7983:5:13",
														"type": ""
													}
												],
												"src": "7929:1073:13"
											},
											{
												"body": {
													"nativeSrc": "9051:43:13",
													"nodeType": "YulBlock",
													"src": "9051:43:13",
													"statements": [
														{
															"nativeSrc": "9061:27:13",
															"nodeType": "YulAssignment",
															"src": "9061:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:13"
																},
																"nativeSrc": "9072:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:13",
														"nodeType": "YulTypedName",
														"src": "9033:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:13",
														"nodeType": "YulTypedName",
														"src": "9043:7:13",
														"type": ""
													}
												],
												"src": "9008:86:13"
											},
											{
												"body": {
													"nativeSrc": "9164:217:13",
													"nodeType": "YulBlock",
													"src": "9164:217:13",
													"statements": [
														{
															"nativeSrc": "9174:31:13",
															"nodeType": "YulAssignment",
															"src": "9174:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:13"
																},
																"nativeSrc": "9182:23:13",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:13"
																}
															]
														},
														{
															"nativeSrc": "9214:37:13",
															"nodeType": "YulAssignment",
															"src": "9214:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:13"
																},
																"nativeSrc": "9226:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:13"
																}
															]
														},
														{
															"nativeSrc": "9261:113:13",
															"nodeType": "YulAssignment",
															"src": "9261:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:13",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:13"
																},
																"nativeSrc": "9270:104:13",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:13",
														"nodeType": "YulTypedName",
														"src": "9139:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:13",
														"nodeType": "YulTypedName",
														"src": "9145:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:13",
														"nodeType": "YulTypedName",
														"src": "9158:5:13",
														"type": ""
													}
												],
												"src": "9100:281:13"
											},
											{
												"body": {
													"nativeSrc": "9435:362:13",
													"nodeType": "YulBlock",
													"src": "9435:362:13",
													"statements": [
														{
															"nativeSrc": "9445:25:13",
															"nodeType": "YulAssignment",
															"src": "9445:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:13"
																},
																"nativeSrc": "9450:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:13"
																}
															]
														},
														{
															"nativeSrc": "9479:25:13",
															"nodeType": "YulAssignment",
															"src": "9479:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:13"
																},
																"nativeSrc": "9484:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:13"
																}
															]
														},
														{
															"nativeSrc": "9513:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:13"
																},
																"nativeSrc": "9532:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:13",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:13",
															"nodeType": "YulAssignment",
															"src": "9550:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:13"
																},
																"nativeSrc": "9561:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:13",
																"nodeType": "YulBlock",
																"src": "9768:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:13"
																			},
																			"nativeSrc": "9770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:13"
																		},
																		"nativeSrc": "9770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:13"
																				},
																				"nativeSrc": "9694:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:13"
																						},
																						"nativeSrc": "9727:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:13"
																				},
																				"nativeSrc": "9721:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:13"
																		},
																		"nativeSrc": "9674:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:13"
																},
																"nativeSrc": "9654:113:13",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:13"
															},
															"nativeSrc": "9651:139:13",
															"nodeType": "YulIf",
															"src": "9651:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:13",
														"nodeType": "YulTypedName",
														"src": "9418:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:13",
														"nodeType": "YulTypedName",
														"src": "9421:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:13",
														"nodeType": "YulTypedName",
														"src": "9427:7:13",
														"type": ""
													}
												],
												"src": "9387:410:13"
											},
											{
												"body": {
													"nativeSrc": "9847:147:13",
													"nodeType": "YulBlock",
													"src": "9847:147:13",
													"statements": [
														{
															"nativeSrc": "9857:25:13",
															"nodeType": "YulAssignment",
															"src": "9857:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:13"
																},
																"nativeSrc": "9862:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:13"
																}
															]
														},
														{
															"nativeSrc": "9891:25:13",
															"nodeType": "YulAssignment",
															"src": "9891:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:13"
																},
																"nativeSrc": "9896:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:13"
																}
															]
														},
														{
															"nativeSrc": "9925:16:13",
															"nodeType": "YulAssignment",
															"src": "9925:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:13"
																},
																"nativeSrc": "9932:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:13",
																"nodeType": "YulBlock",
																"src": "9965:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:13"
																			},
																			"nativeSrc": "9967:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:13"
																		},
																		"nativeSrc": "9967:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:13"
																},
																"nativeSrc": "9954:10:13",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:13"
															},
															"nativeSrc": "9951:36:13",
															"nodeType": "YulIf",
															"src": "9951:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:13",
														"nodeType": "YulTypedName",
														"src": "9834:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:13",
														"nodeType": "YulTypedName",
														"src": "9837:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:13",
														"nodeType": "YulTypedName",
														"src": "9843:3:13",
														"type": ""
													}
												],
												"src": "9803:191:13"
											},
											{
												"body": {
													"nativeSrc": "10065:53:13",
													"nodeType": "YulBlock",
													"src": "10065:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:13"
																		},
																		"nativeSrc": "10087:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:13"
																},
																"nativeSrc": "10075:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:13"
															},
															"nativeSrc": "10075:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:13",
														"nodeType": "YulTypedName",
														"src": "10053:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:13",
														"nodeType": "YulTypedName",
														"src": "10060:3:13",
														"type": ""
													}
												],
												"src": "10000:118:13"
											},
											{
												"body": {
													"nativeSrc": "10278:288:13",
													"nodeType": "YulBlock",
													"src": "10278:288:13",
													"statements": [
														{
															"nativeSrc": "10288:26:13",
															"nodeType": "YulAssignment",
															"src": "10288:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:13"
																},
																"nativeSrc": "10296:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:13"
																		},
																		"nativeSrc": "10377:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:13"
																},
																"nativeSrc": "10324:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:13"
															},
															"nativeSrc": "10324:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:13"
																		},
																		"nativeSrc": "10458:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:13"
																},
																"nativeSrc": "10405:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:13"
															},
															"nativeSrc": "10405:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:13"
																		},
																		"nativeSrc": "10540:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:13"
																},
																"nativeSrc": "10487:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:13"
															},
															"nativeSrc": "10487:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:13",
														"nodeType": "YulTypedName",
														"src": "10234:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:13",
														"nodeType": "YulTypedName",
														"src": "10246:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:13",
														"nodeType": "YulTypedName",
														"src": "10254:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:13",
														"nodeType": "YulTypedName",
														"src": "10262:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:13",
														"nodeType": "YulTypedName",
														"src": "10273:4:13",
														"type": ""
													}
												],
												"src": "10124:442:13"
											},
											{
												"body": {
													"nativeSrc": "10670:124:13",
													"nodeType": "YulBlock",
													"src": "10670:124:13",
													"statements": [
														{
															"nativeSrc": "10680:26:13",
															"nodeType": "YulAssignment",
															"src": "10680:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:13"
																},
																"nativeSrc": "10688:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:13"
																		},
																		"nativeSrc": "10769:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:13"
																},
																"nativeSrc": "10716:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:13"
															},
															"nativeSrc": "10716:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:13",
														"nodeType": "YulTypedName",
														"src": "10642:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:13",
														"nodeType": "YulTypedName",
														"src": "10654:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:13",
														"nodeType": "YulTypedName",
														"src": "10665:4:13",
														"type": ""
													}
												],
												"src": "10572:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516131693803806131698339818101604052810190610031919061070b565b806040518060400160405280600d81526020017f4c6f636b6e657373546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4e54000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610973565b5080600490816100bd9190610973565b5050505f60065f6101000a81548160ff02191690831515021790555060016007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610151575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101489190610a51565b60405180910390fd5b610160816101e360201b60201c565b50610199816101736102a660201b60201c565b600a61017f9190610bd2565b633b9aca0061018e9190610c1c565b6102ae60201b60201c565b6101ab5f5f1b8261033360201b60201c565b506101dc7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b538261033360201b60201c565b5050610ced565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361031e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103159190610a51565b60405180910390fd5b61032f5f838361042960201b60201c565b5050565b5f610344838361064260201b60201c565b61041f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103bc6106a660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610423565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610479578060025f82825461046d9190610c5d565b92505081905550610547565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610502578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104f993929190610c9f565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058e578060025f82825403925050819055506105d8565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106359190610cd4565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106da826106b1565b9050919050565b6106ea816106d0565b81146106f4575f5ffd5b50565b5f81519050610705816106e1565b92915050565b5f602082840312156107205761071f6106ad565b5b5f61072d848285016106f7565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107b157607f821691505b6020821081036107c4576107c361076d565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107eb565b61083086836107eb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61087461086f61086a84610848565b610851565b610848565b9050919050565b5f819050919050565b61088d8361085a565b6108a16108998261087b565b8484546107f7565b825550505050565b5f5f905090565b6108b86108a9565b6108c3818484610884565b505050565b5b818110156108e6576108db5f826108b0565b6001810190506108c9565b5050565b601f82111561092b576108fc816107ca565b610905846107dc565b81016020851015610914578190505b610928610920856107dc565b8301826108c8565b50505b505050565b5f82821c905092915050565b5f61094b5f1984600802610930565b1980831691505092915050565b5f610963838361093c565b9150826002028217905092915050565b61097c82610736565b67ffffffffffffffff81111561099557610994610740565b5b61099f825461079a565b6109aa8282856108ea565b5f60209050601f8311600181146109db575f84156109c9578287015190505b6109d38582610958565b865550610a3a565b601f1984166109e9866107ca565b5f5b82811015610a10578489015182556001820191506020850194506020810190506109eb565b86831015610a2d5784890151610a29601f89168261093c565b8355505b6001600288020188555050505b505050505050565b610a4b816106d0565b82525050565b5f602082019050610a645f830184610a42565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610aec57808604811115610ac857610ac7610a6a565b5b6001851615610ad75780820291505b8081029050610ae585610a97565b9450610aac565b94509492505050565b5f82610b045760019050610bbf565b81610b11575f9050610bbf565b8160018114610b275760028114610b3157610b60565b6001915050610bbf565b60ff841115610b4357610b42610a6a565b5b8360020a915084821115610b5a57610b59610a6a565b5b50610bbf565b5060208310610133831016604e8410600b8410161715610b955782820a905083811115610b9057610b8f610a6a565b5b610bbf565b610ba28484846001610aa3565b92509050818404811115610bb957610bb8610a6a565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610bdc82610848565b9150610be783610bc6565b9250610c147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610af5565b905092915050565b5f610c2682610848565b9150610c3183610848565b9250828202610c3f81610848565b91508282048414831517610c5657610c55610a6a565b5b5092915050565b5f610c6782610848565b9150610c7283610848565b9250828201905080821115610c8a57610c89610a6a565b5b92915050565b610c9981610848565b82525050565b5f606082019050610cb25f830186610a42565b610cbf6020830185610c90565b610ccc6040830184610c90565b949350505050565b5f602082019050610ce75f830184610c90565b92915050565b61246f80610cfa5f395ff3fe608060405234801561000f575f5ffd5b506004361061018c575f3560e01c80635f3e849f116100dc57806395d89b4111610095578063c74952331161006f578063c74952331461045c578063d547741f1461047a578063dd62ed3e14610496578063f2fde38b146104c65761018c565b806395d89b41146103f0578063a217fddf1461040e578063a9059cbb1461042c5761018c565b80635f3e849f1461034257806370a082311461035e578063715018a61461038e5780638456cb59146103985780638da5cb5b146103a257806391d14854146103c05761018c565b8063248a9ca31161014957806336568abe1161012357806336568abe146102e25780633f4ba83a146102fe57806359563cdf146103085780635c975abb146103245761018c565b8063248a9ca3146102785780632f2ff15d146102a8578063313ce567146102c45761018c565b806301ffc9a71461019057806306fdde03146101c0578063095ea7b3146101de5780630ceb382e1461020e57806318160ddd1461022a57806323b872dd14610248575b5f5ffd5b6101aa60048036038101906101a59190611a79565b6104e2565b6040516101b79190611abe565b60405180910390f35b6101c861055b565b6040516101d59190611b47565b60405180910390f35b6101f860048036038101906101f39190611bf4565b6105eb565b6040516102059190611abe565b60405180910390f35b61022860048036038101906102239190611c93565b61060d565b005b6102326107be565b60405161023f9190611d13565b60405180910390f35b610262600480360381019061025d9190611d2c565b6107c7565b60405161026f9190611abe565b60405180910390f35b610292600480360381019061028d9190611daf565b6107f5565b60405161029f9190611de9565b60405180910390f35b6102c260048036038101906102bd9190611e02565b610812565b005b6102cc610834565b6040516102d99190611e5b565b60405180910390f35b6102fc60048036038101906102f79190611e02565b61083c565b005b6103066108b7565b005b610322600480360381019061031d9190611e74565b6108c9565b005b61032c6109cf565b6040516103399190611abe565b60405180910390f35b61035c60048036038101906103579190611d2c565b6109e4565b005b61037860048036038101906103739190611ed1565b610b84565b6040516103859190611d13565b60405180910390f35b610396610bc9565b005b6103a0610bdc565b005b6103aa610bee565b6040516103b79190611f0b565b60405180910390f35b6103da60048036038101906103d59190611e02565b610c16565b6040516103e79190611abe565b60405180910390f35b6103f8610c7a565b6040516104059190611b47565b60405180910390f35b610416610d0a565b6040516104239190611de9565b60405180910390f35b61044660048036038101906104419190611bf4565b610d10565b6040516104539190611abe565b60405180910390f35b610464610d32565b6040516104719190611de9565b60405180910390f35b610494600480360381019061048f9190611e02565b610d56565b005b6104b060048036038101906104ab9190611f24565b610d78565b6040516104bd9190611d13565b60405180910390f35b6104e060048036038101906104db9190611ed1565b610dfa565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610554575061055382610e7e565b5b9050919050565b60606003805461056a90611f8f565b80601f016020809104026020016040519081016040528092919081815260200182805461059690611f8f565b80156105e15780601f106105b8576101008083540402835291602001916105e1565b820191905f5260205f20905b8154815290600101906020018083116105c457829003601f168201915b5050505050905090565b5f5f6105f5610ee7565b9050610602818585610eee565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5361063781610f00565b61063f610f14565b610647610f5e565b845f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90612009565b60405180910390fd5b5f85116106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef90612071565b60405180910390fd5b84610709610704610bee565b610b84565b101561074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906120d9565b60405180910390fd5b61075c610755610bee565b8787610fad565b8573ffffffffffffffffffffffffffffffffffffffff167fb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d8686866040516107a693929190612131565b60405180910390a2506107b761109d565b5050505050565b5f600254905090565b5f5f6107d1610ee7565b90506107de8582856110a7565b6107e9858585610fad565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b61081b826107f5565b61082481610f00565b61082e838361113a565b50505050565b5f6012905090565b610844610ee7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108a8576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108b28282611224565b505050565b6108bf61130e565b6108c7611395565b565b6108d1610f14565b6108d9610f5e565b5f831161091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290612071565b60405180910390fd5b8261092533610b84565b1015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906121ab565b60405180910390fd5b61097033846113f6565b3373ffffffffffffffffffffffffffffffffffffffff167f1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e281137298484846040516109ba93929190612131565b60405180910390a26109ca61109d565b505050565b5f60065f9054906101000a900460ff16905090565b6109ec61130e565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290612009565b60405180910390fd5b5f8211610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490612071565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610ad89291906121c9565b6020604051808303815f875af1158015610af4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b18919061221a565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe684604051610b769190611d13565b60405180910390a350505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610bd161130e565b610bda5f611475565b565b610be461130e565b610bec611538565b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610c8990611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb590611f8f565b8015610d005780601f10610cd757610100808354040283529160200191610d00565b820191905f5260205f20905b815481529060010190602001808311610ce357829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610d1a610ee7565b9050610d27818585610fad565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5381565b610d5f826107f5565b610d6881610f00565b610d728383611224565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e0261130e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e72575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e699190611f0b565b60405180910390fd5b610e7b81611475565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610efb838383600161159a565b505050565b610f1181610f0c610ee7565b611769565b50565b610f1c6109cf565b15610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f539061228f565b60405180910390fd5b565b600260075403610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a906122f7565b60405180910390fd5b6002600781905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110149190611f0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361108d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110849190611f0b565b60405180910390fd5b6110988383836117ba565b505050565b6001600781905550565b5f6110b28484610d78565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111345781811015611125578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161111c93929190612315565b60405180910390fd5b61113384848484035f61159a565b5b50505050565b5f6111458383610c16565b61121a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506111b7610ee7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061121e565b5f90505b92915050565b5f61122f8383610c16565b15611304575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112a1610ee7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611308565b5f90505b92915050565b611316610ee7565b73ffffffffffffffffffffffffffffffffffffffff16611334610bee565b73ffffffffffffffffffffffffffffffffffffffff161461139357611357610ee7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161138a9190611f0b565b60405180910390fd5b565b61139d6119d3565b5f60065f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113df610ee7565b6040516113ec9190611f0b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611466575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161145d9190611f0b565b60405180910390fd5b611471825f836117ba565b5050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611540610f14565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611583610ee7565b6040516115909190611f0b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361160a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116019190611f0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361167a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116719190611f0b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611763578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161175a9190611d13565b60405180910390a35b50505050565b6117738282610c16565b6117b65780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117ad92919061234a565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361180a578060025f8282546117fe919061239e565b925050819055506118d8565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611893578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161188a93929190612315565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191f578060025f8282540392505081905550611969565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c69190611d13565b60405180910390a3505050565b6119db6109cf565b611a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a119061241b565b60405180910390fd5b565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a5881611a24565b8114611a62575f5ffd5b50565b5f81359050611a7381611a4f565b92915050565b5f60208284031215611a8e57611a8d611a1c565b5b5f611a9b84828501611a65565b91505092915050565b5f8115159050919050565b611ab881611aa4565b82525050565b5f602082019050611ad15f830184611aaf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b1982611ad7565b611b238185611ae1565b9350611b33818560208601611af1565b611b3c81611aff565b840191505092915050565b5f6020820190508181035f830152611b5f8184611b0f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b9082611b67565b9050919050565b611ba081611b86565b8114611baa575f5ffd5b50565b5f81359050611bbb81611b97565b92915050565b5f819050919050565b611bd381611bc1565b8114611bdd575f5ffd5b50565b5f81359050611bee81611bca565b92915050565b5f5f60408385031215611c0a57611c09611a1c565b5b5f611c1785828601611bad565b9250506020611c2885828601611be0565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611c5357611c52611c32565b5b8235905067ffffffffffffffff811115611c7057611c6f611c36565b5b602083019150836001820283011115611c8c57611c8b611c3a565b5b9250929050565b5f5f5f5f60608587031215611cab57611caa611a1c565b5b5f611cb887828801611bad565b9450506020611cc987828801611be0565b935050604085013567ffffffffffffffff811115611cea57611ce9611a20565b5b611cf687828801611c3e565b925092505092959194509250565b611d0d81611bc1565b82525050565b5f602082019050611d265f830184611d04565b92915050565b5f5f5f60608486031215611d4357611d42611a1c565b5b5f611d5086828701611bad565b9350506020611d6186828701611bad565b9250506040611d7286828701611be0565b9150509250925092565b5f819050919050565b611d8e81611d7c565b8114611d98575f5ffd5b50565b5f81359050611da981611d85565b92915050565b5f60208284031215611dc457611dc3611a1c565b5b5f611dd184828501611d9b565b91505092915050565b611de381611d7c565b82525050565b5f602082019050611dfc5f830184611dda565b92915050565b5f5f60408385031215611e1857611e17611a1c565b5b5f611e2585828601611d9b565b9250506020611e3685828601611bad565b9150509250929050565b5f60ff82169050919050565b611e5581611e40565b82525050565b5f602082019050611e6e5f830184611e4c565b92915050565b5f5f5f60408486031215611e8b57611e8a611a1c565b5b5f611e9886828701611be0565b935050602084013567ffffffffffffffff811115611eb957611eb8611a20565b5b611ec586828701611c3e565b92509250509250925092565b5f60208284031215611ee657611ee5611a1c565b5b5f611ef384828501611bad565b91505092915050565b611f0581611b86565b82525050565b5f602082019050611f1e5f830184611efc565b92915050565b5f5f60408385031215611f3a57611f39611a1c565b5b5f611f4785828601611bad565b9250506020611f5885828601611bad565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fa657607f821691505b602082108103611fb957611fb8611f62565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611ff3600f83611ae1565b9150611ffe82611fbf565b602082019050919050565b5f6020820190508181035f83015261202081611fe7565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61205b602083611ae1565b915061206682612027565b602082019050919050565b5f6020820190508181035f8301526120888161204f565b9050919050565b7f496e73756666696369656e74206f776e65722062616c616e63650000000000005f82015250565b5f6120c3601a83611ae1565b91506120ce8261208f565b602082019050919050565b5f6020820190508181035f8301526120f0816120b7565b9050919050565b828183375f83830152505050565b5f6121108385611ae1565b935061211d8385846120f7565b61212683611aff565b840190509392505050565b5f6040820190506121445f830186611d04565b8181036020830152612157818486612105565b9050949350505050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612195601483611ae1565b91506121a082612161565b602082019050919050565b5f6020820190508181035f8301526121c281612189565b9050919050565b5f6040820190506121dc5f830185611efc565b6121e96020830184611d04565b9392505050565b6121f981611aa4565b8114612203575f5ffd5b50565b5f81519050612214816121f0565b92915050565b5f6020828403121561222f5761222e611a1c565b5b5f61223c84828501612206565b91505092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612279601083611ae1565b915061228482612245565b602082019050919050565b5f6020820190508181035f8301526122a68161226d565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6122e1601f83611ae1565b91506122ec826122ad565b602082019050919050565b5f6020820190508181035f83015261230e816122d5565b9050919050565b5f6060820190506123285f830186611efc565b6123356020830185611d04565b6123426040830184611d04565b949350505050565b5f60408201905061235d5f830185611efc565b61236a6020830184611dda565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123a882611bc1565b91506123b383611bc1565b92508282019050808211156123cb576123ca612371565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612405601483611ae1565b9150612410826123d1565b602082019050919050565b5f6020820190508181035f830152612432816123f9565b905091905056fea26469706673582212200f78f591775794a628bee3e1cf0a7784c40da85a1e11160aff6e10aaa25e081464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3169 CODESIZE SUB DUP1 PUSH2 0x3169 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6F636B6E657373546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x160 DUP2 PUSH2 0x1E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x199 DUP2 PUSH2 0x173 PUSH2 0x2A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x2AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1AB PUSH0 PUSH0 SHL DUP3 PUSH2 0x333 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1DC PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP3 PUSH2 0x333 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32F PUSH0 DUP4 DUP4 PUSH2 0x429 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x344 DUP4 DUP4 PUSH2 0x642 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3BC PUSH2 0x6A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x423 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x479 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x547 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5D8 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6DA DUP3 PUSH2 0x6B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EA DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x705 DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH2 0x71F PUSH2 0x6AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x72D DUP5 DUP3 DUP6 ADD PUSH2 0x6F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C4 JUMPI PUSH2 0x7C3 PUSH2 0x76D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x826 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x830 DUP7 DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x874 PUSH2 0x86F PUSH2 0x86A DUP5 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88D DUP4 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x8A1 PUSH2 0x899 DUP3 PUSH2 0x87B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7F7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x8C3 DUP2 DUP5 DUP5 PUSH2 0x884 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8E6 JUMPI PUSH2 0x8DB PUSH0 DUP3 PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x92B JUMPI PUSH2 0x8FC DUP2 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x905 DUP5 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x914 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x928 PUSH2 0x920 DUP6 PUSH2 0x7DC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8C8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x930 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x963 DUP4 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97C DUP3 PUSH2 0x736 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x740 JUMP JUMPDEST JUMPDEST PUSH2 0x99F DUP3 SLOAD PUSH2 0x79A JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 DUP6 PUSH2 0x8EA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9DB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9C9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9D3 DUP6 DUP3 PUSH2 0x958 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9E9 DUP7 PUSH2 0x7CA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA10 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA2D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA29 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x93C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA64 PUSH0 DUP4 ADD DUP5 PUSH2 0xA42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xAEC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAC8 JUMPI PUSH2 0xAC7 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xAD7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xAE5 DUP6 PUSH2 0xA97 JUMP JUMPDEST SWAP5 POP PUSH2 0xAAC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB04 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBBF JUMP JUMPDEST DUP2 PUSH2 0xB11 JUMPI PUSH0 SWAP1 POP PUSH2 0xBBF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB27 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB31 JUMPI PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBBF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB43 JUMPI PUSH2 0xB42 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH2 0xB59 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST POP PUSH2 0xBBF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB95 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB90 JUMPI PUSH2 0xB8F PUSH2 0xA6A JUMP JUMPDEST JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0xBA2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAA3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBDC DUP3 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE7 DUP4 PUSH2 0xBC6 JUMP JUMPDEST SWAP3 POP PUSH2 0xC14 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC26 DUP3 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0xC31 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC3F DUP2 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC67 DUP3 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP PUSH2 0xC72 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0xA6A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC99 DUP2 PUSH2 0x848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCB2 PUSH0 DUP4 ADD DUP7 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0xCBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0xCCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE7 PUSH0 DUP4 ADD DUP5 PUSH2 0xC90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x246F DUP1 PUSH2 0xCFA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7495233 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC7495233 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C6 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42C JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C0 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x59563CDF EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x324 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xCEB382E EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH2 0xBDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0xDFA JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x554 JUMPI POP PUSH2 0x553 DUP3 PUSH2 0xE7E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x56A SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x596 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5F5 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x602 DUP2 DUP6 DUP6 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 PUSH2 0x637 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x63F PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x647 PUSH2 0xF5E JUMP JUMPDEST DUP5 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x709 PUSH2 0x704 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x741 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75C PUSH2 0x755 PUSH2 0xBEE JUMP JUMPDEST DUP8 DUP8 PUSH2 0xFAD JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x7B7 PUSH2 0x109D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x7DE DUP6 DUP3 DUP6 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x7E9 DUP6 DUP6 DUP6 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x824 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x82E DUP4 DUP4 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x844 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x130E JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1395 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xF5E JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x925 CALLER PUSH2 0xB84 JUMP JUMPDEST LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x970 CALLER DUP5 PUSH2 0x13F6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9CA PUSH2 0x109D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x130E JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x221A JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 PUSH2 0x130E JUMP JUMPDEST PUSH2 0xBDA PUSH0 PUSH2 0x1475 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0x130E JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x1538 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC89 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB5 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD1A PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xD27 DUP2 DUP6 DUP6 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP2 JUMP JUMPDEST PUSH2 0xD5F DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0xD72 DUP4 DUP4 PUSH2 0x1224 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE02 PUSH2 0x130E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7B DUP2 PUSH2 0x1475 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEFB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x159A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xF0C PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x1769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF1C PUSH2 0x9CF JUMP JUMPDEST ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 DUP4 DUP4 DUP4 PUSH2 0x17BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10B2 DUP5 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1134 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1125 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1133 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x159A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1145 DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x121A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11B7 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x121E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x122F DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST ISZERO PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12A1 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1308 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1316 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1334 PUSH2 0xBEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1393 JUMPI PUSH2 0x1357 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x139D PUSH2 0x19D3 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13DF PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1466 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1471 DUP3 PUSH0 DUP4 PUSH2 0x17BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1540 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1583 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x167A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1763 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1773 DUP3 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x17B6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AD SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1893 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1969 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x19DB PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x1A1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A11 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A58 DUP2 PUSH2 0x1A24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A73 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8E JUMPI PUSH2 0x1A8D PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9B DUP5 DUP3 DUP6 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB8 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B19 DUP3 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1B23 DUP2 DUP6 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1B3C DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5F DUP2 DUP5 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B90 DUP3 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA0 DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBB DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEE DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C17 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1C36 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x1C3A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CC9 DUP8 DUP3 DUP9 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEA JUMPI PUSH2 0x1CE9 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF6 DUP8 DUP3 DUP9 ADD PUSH2 0x1C3E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D0D DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D50 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D61 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D72 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8E DUP2 PUSH2 0x1D7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1D98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DA9 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD1 DUP5 DUP3 DUP6 ADD PUSH2 0x1D9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE3 DUP2 PUSH2 0x1D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DFC PUSH0 DUP4 ADD DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E25 DUP6 DUP3 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E36 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E98 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C3E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE6 JUMPI PUSH2 0x1EE5 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF3 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3A JUMPI PUSH2 0x1F39 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F47 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F58 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF3 PUSH1 0xF DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFE DUP3 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x205B PUSH1 0x20 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP3 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F776E65722062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C3 PUSH1 0x1A DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CE DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20F0 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2110 DUP4 DUP6 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x211D DUP4 DUP6 DUP5 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x2126 DUP4 PUSH2 0x1AFF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2144 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D04 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2157 DUP2 DUP5 DUP7 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2195 PUSH1 0x14 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A0 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C2 DUP2 PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21DC PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x21E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21F9 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2203 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2214 DUP2 PUSH2 0x21F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x223C DUP5 DUP3 DUP6 ADD PUSH2 0x2206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2279 PUSH1 0x10 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2284 DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A6 DUP2 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E1 PUSH1 0x1F DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x22EC DUP3 PUSH2 0x22AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230E DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235D PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x236A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23A8 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B3 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x2371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2405 PUSH1 0x14 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2410 DUP3 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2432 DUP2 PUSH2 0x23F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH25 0xF591775794A628BEE3E1CF0A7784C40DA85A1E11160AFF6E10 0xAA LOG2 MCOPY ADDMOD EQ PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "348:2689:12:-:0;;;876:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;965:12;1582:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1006:5:4;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:5;1821:7;:22;;;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;993:51:12::2;999:12;1033:10;:8;;;:10;;:::i;:::-;1029:2;:14;;;;:::i;:::-;1013:13;:30;;;;:::i;:::-;993:5;;;:51;;:::i;:::-;1054:44;2241:4:0;1065:18:12;;1085:12;1054:10;;;:44;;:::i;:::-;;1108:43;491:30;1138:12;1108:10;;;:43;;:::i;:::-;;876:282:::0;348:2689;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2940:91:12:-;2998:5;3022:2;3015:9;;2940:91;:::o;7362:208:6:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;5912:1107:6:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;348:2689:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 3338,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TASK_MANAGER_ROLE_1544": {
									"entryPoint": 3378,
									"id": 1544,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1243": {
									"entryPoint": 3822,
									"id": 1243,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1303": {
									"entryPoint": 5530,
									"id": 1303,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1225": {
									"entryPoint": 5110,
									"id": 1225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_464": {
									"entryPoint": 4878,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 5993,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 3840,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 4410,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1468": {
									"entryPoint": 3815,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_825": {
									"entryPoint": 4253,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_817": {
									"entryPoint": 3934,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_755": {
									"entryPoint": 5432,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_728": {
									"entryPoint": 3860,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_739": {
									"entryPoint": 6611,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 4644,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1351": {
									"entryPoint": 4263,
									"id": 1351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_526": {
									"entryPoint": 5237,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 4013,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_771": {
									"entryPoint": 5013,
									"id": 771,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1159": {
									"entryPoint": 6074,
									"id": 1159,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 3448,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1515,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_938": {
									"entryPoint": 2948,
									"id": 938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1772": {
									"entryPoint": 2100,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 2037,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 2066,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 3094,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_898": {
									"entryPoint": 1371,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_447": {
									"entryPoint": 3054,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1718": {
									"entryPoint": 3036,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_716": {
									"entryPoint": 2511,
									"id": 716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverTokens_1763": {
									"entryPoint": 2532,
									"id": 1763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceOwnership_478": {
									"entryPoint": 3017,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2108,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 3414,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardTokens_1667": {
									"entryPoint": 1549,
									"id": 1667,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@spendTokens_1709": {
									"entryPoint": 2249,
									"id": 1709,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 3710,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1250,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_907": {
									"entryPoint": 3194,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_925": {
									"entryPoint": 1982,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 1991,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_506": {
									"entryPoint": 3578,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_962": {
									"entryPoint": 3344,
									"id": 962,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1727": {
									"entryPoint": 2231,
									"id": 1727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_calldata_ptr": {
									"entryPoint": 7796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8981,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21053:13",
										"nodeType": "YulBlock",
										"src": "0:21053:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4185:28:13",
													"nodeType": "YulBlock",
													"src": "4185:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4205:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4205:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:13"
																},
																"nativeSrc": "4195:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4195:12:13"
															},
															"nativeSrc": "4195:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "4195:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4096:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4096:117:13"
											},
											{
												"body": {
													"nativeSrc": "4308:28:13",
													"nodeType": "YulBlock",
													"src": "4308:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4325:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4325:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4328:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4328:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4318:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4318:6:13"
																},
																"nativeSrc": "4318:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4318:12:13"
															},
															"nativeSrc": "4318:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "4318:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "4219:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4219:117:13"
											},
											{
												"body": {
													"nativeSrc": "4431:28:13",
													"nodeType": "YulBlock",
													"src": "4431:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4451:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4451:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:13"
																},
																"nativeSrc": "4441:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4441:12:13"
															},
															"nativeSrc": "4441:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "4441:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4342:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4342:117:13"
											},
											{
												"body": {
													"nativeSrc": "4554:478:13",
													"nodeType": "YulBlock",
													"src": "4554:478:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4603:83:13",
																"nodeType": "YulBlock",
																"src": "4603:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4605:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4605:77:13"
																			},
																			"nativeSrc": "4605:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4605:79:13"
																		},
																		"nativeSrc": "4605:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4605:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4582:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4582:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4590:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4590:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4578:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4578:3:13"
																				},
																				"nativeSrc": "4578:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4578:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4597:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4597:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4574:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:13"
																		},
																		"nativeSrc": "4574:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4574:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4567:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4567:6:13"
																},
																"nativeSrc": "4567:35:13",
																"nodeType": "YulFunctionCall",
																"src": "4567:35:13"
															},
															"nativeSrc": "4564:122:13",
															"nodeType": "YulIf",
															"src": "4564:122:13"
														},
														{
															"nativeSrc": "4695:30:13",
															"nodeType": "YulAssignment",
															"src": "4695:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4718:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4718:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4705:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4705:12:13"
																},
																"nativeSrc": "4705:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4705:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4695:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4768:83:13",
																"nodeType": "YulBlock",
																"src": "4768:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "4770:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4770:77:13"
																			},
																			"nativeSrc": "4770:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4770:79:13"
																		},
																		"nativeSrc": "4770:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4770:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4740:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4740:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4748:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4748:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4737:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4737:2:13"
																},
																"nativeSrc": "4737:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4737:30:13"
															},
															"nativeSrc": "4734:117:13",
															"nodeType": "YulIf",
															"src": "4734:117:13"
														},
														{
															"nativeSrc": "4860:29:13",
															"nodeType": "YulAssignment",
															"src": "4860:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4876:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4876:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4884:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4884:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4872:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4872:3:13"
																},
																"nativeSrc": "4872:17:13",
																"nodeType": "YulFunctionCall",
																"src": "4872:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "4860:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4860:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4943:83:13",
																"nodeType": "YulBlock",
																"src": "4943:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4945:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4945:77:13"
																			},
																			"nativeSrc": "4945:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4945:79:13"
																		},
																		"nativeSrc": "4945:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4945:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "4908:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4908:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "4922:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4922:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4930:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4930:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4918:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4918:3:13"
																				},
																				"nativeSrc": "4918:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4918:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4904:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:13"
																		},
																		"nativeSrc": "4904:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4904:32:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4938:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4938:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4901:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4901:2:13"
																},
																"nativeSrc": "4901:41:13",
																"nodeType": "YulFunctionCall",
																"src": "4901:41:13"
															},
															"nativeSrc": "4898:128:13",
															"nodeType": "YulIf",
															"src": "4898:128:13"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "4479:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4521:6:13",
														"nodeType": "YulTypedName",
														"src": "4521:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4529:3:13",
														"nodeType": "YulTypedName",
														"src": "4529:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4537:8:13",
														"nodeType": "YulTypedName",
														"src": "4537:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4547:6:13",
														"nodeType": "YulTypedName",
														"src": "4547:6:13",
														"type": ""
													}
												],
												"src": "4479:553:13"
											},
											{
												"body": {
													"nativeSrc": "5158:699:13",
													"nodeType": "YulBlock",
													"src": "5158:699:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5204:83:13",
																"nodeType": "YulBlock",
																"src": "5204:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5206:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5206:77:13"
																			},
																			"nativeSrc": "5206:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:79:13"
																		},
																		"nativeSrc": "5206:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5179:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5179:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5175:3:13"
																		},
																		"nativeSrc": "5175:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5175:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5200:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5171:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:13"
																},
																"nativeSrc": "5171:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5171:32:13"
															},
															"nativeSrc": "5168:119:13",
															"nodeType": "YulIf",
															"src": "5168:119:13"
														},
														{
															"nativeSrc": "5297:117:13",
															"nodeType": "YulBlock",
															"src": "5297:117:13",
															"statements": [
																{
																	"nativeSrc": "5312:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5312:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5326:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5326:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5316:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5316:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5341:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5341:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5376:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5376:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5387:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5387:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5372:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5372:3:13"
																				},
																				"nativeSrc": "5372:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5372:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5396:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5396:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5351:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5351:20:13"
																		},
																		"nativeSrc": "5351:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5351:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5341:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5341:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5424:118:13",
															"nodeType": "YulBlock",
															"src": "5424:118:13",
															"statements": [
																{
																	"nativeSrc": "5439:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5439:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5453:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5453:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5443:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5443:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5469:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5469:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5504:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5504:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5515:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5515:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5500:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5500:3:13"
																				},
																				"nativeSrc": "5500:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5500:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5524:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5524:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5479:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5479:20:13"
																		},
																		"nativeSrc": "5479:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5469:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5469:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5552:298:13",
															"nodeType": "YulBlock",
															"src": "5552:298:13",
															"statements": [
																{
																	"nativeSrc": "5567:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5567:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5598:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5598:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5609:2:13",
																						"nodeType": "YulLiteral",
																						"src": "5609:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5594:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5594:3:13"
																				},
																				"nativeSrc": "5594:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5594:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5581:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "5581:12:13"
																		},
																		"nativeSrc": "5581:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5581:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5571:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5571:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5660:83:13",
																		"nodeType": "YulBlock",
																		"src": "5660:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5662:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "5662:77:13"
																					},
																					"nativeSrc": "5662:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5662:79:13"
																				},
																				"nativeSrc": "5662:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5662:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5632:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5640:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5640:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5629:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5629:2:13"
																		},
																		"nativeSrc": "5629:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:30:13"
																	},
																	"nativeSrc": "5626:117:13",
																	"nodeType": "YulIf",
																	"src": "5626:117:13"
																},
																{
																	"nativeSrc": "5757:83:13",
																	"nodeType": "YulAssignment",
																	"src": "5757:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5812:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5812:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5823:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5823:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5808:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5808:3:13"
																				},
																				"nativeSrc": "5808:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5808:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5832:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5832:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "5775:32:13",
																			"nodeType": "YulIdentifier",
																			"src": "5775:32:13"
																		},
																		"nativeSrc": "5775:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5775:65:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5757:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5757:6:13"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "5765:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5765:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr",
												"nativeSrc": "5038:819:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5104:9:13",
														"nodeType": "YulTypedName",
														"src": "5104:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5115:7:13",
														"nodeType": "YulTypedName",
														"src": "5115:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5127:6:13",
														"nodeType": "YulTypedName",
														"src": "5127:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5135:6:13",
														"nodeType": "YulTypedName",
														"src": "5135:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5143:6:13",
														"nodeType": "YulTypedName",
														"src": "5143:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5151:6:13",
														"nodeType": "YulTypedName",
														"src": "5151:6:13",
														"type": ""
													}
												],
												"src": "5038:819:13"
											},
											{
												"body": {
													"nativeSrc": "5928:53:13",
													"nodeType": "YulBlock",
													"src": "5928:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5945:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5945:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5968:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5968:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5950:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5950:17:13"
																		},
																		"nativeSrc": "5950:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5950:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5938:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5938:6:13"
																},
																"nativeSrc": "5938:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5938:37:13"
															},
															"nativeSrc": "5938:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5938:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5863:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5916:5:13",
														"nodeType": "YulTypedName",
														"src": "5916:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5923:3:13",
														"nodeType": "YulTypedName",
														"src": "5923:3:13",
														"type": ""
													}
												],
												"src": "5863:118:13"
											},
											{
												"body": {
													"nativeSrc": "6085:124:13",
													"nodeType": "YulBlock",
													"src": "6085:124:13",
													"statements": [
														{
															"nativeSrc": "6095:26:13",
															"nodeType": "YulAssignment",
															"src": "6095:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6107:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6107:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6118:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6118:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6103:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:13"
																},
																"nativeSrc": "6103:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6103:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6095:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6095:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6175:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6175:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6188:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6199:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6199:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6184:3:13"
																		},
																		"nativeSrc": "6184:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6184:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6131:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6131:43:13"
																},
																"nativeSrc": "6131:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6131:71:13"
															},
															"nativeSrc": "6131:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6131:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5987:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6057:9:13",
														"nodeType": "YulTypedName",
														"src": "6057:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6069:6:13",
														"nodeType": "YulTypedName",
														"src": "6069:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6080:4:13",
														"nodeType": "YulTypedName",
														"src": "6080:4:13",
														"type": ""
													}
												],
												"src": "5987:222:13"
											},
											{
												"body": {
													"nativeSrc": "6315:519:13",
													"nodeType": "YulBlock",
													"src": "6315:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6361:83:13",
																"nodeType": "YulBlock",
																"src": "6361:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6363:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6363:77:13"
																			},
																			"nativeSrc": "6363:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6363:79:13"
																		},
																		"nativeSrc": "6363:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6363:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6336:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6336:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6345:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6345:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6332:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:13"
																		},
																		"nativeSrc": "6332:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6357:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6357:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6328:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:13"
																},
																"nativeSrc": "6328:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6328:32:13"
															},
															"nativeSrc": "6325:119:13",
															"nodeType": "YulIf",
															"src": "6325:119:13"
														},
														{
															"nativeSrc": "6454:117:13",
															"nodeType": "YulBlock",
															"src": "6454:117:13",
															"statements": [
																{
																	"nativeSrc": "6469:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6469:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6483:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6473:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6473:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6498:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6498:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6533:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6533:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6544:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6544:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6529:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6529:3:13"
																				},
																				"nativeSrc": "6529:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6529:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6553:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6553:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6508:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6508:20:13"
																		},
																		"nativeSrc": "6508:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6508:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6498:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6498:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6581:118:13",
															"nodeType": "YulBlock",
															"src": "6581:118:13",
															"statements": [
																{
																	"nativeSrc": "6596:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6596:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6610:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6610:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6600:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6600:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6626:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6626:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6661:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6661:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6672:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6672:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6657:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6657:3:13"
																				},
																				"nativeSrc": "6657:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6657:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6681:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6681:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6636:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6636:20:13"
																		},
																		"nativeSrc": "6636:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6636:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6626:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6626:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6709:118:13",
															"nodeType": "YulBlock",
															"src": "6709:118:13",
															"statements": [
																{
																	"nativeSrc": "6724:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6724:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6738:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6738:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6728:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6728:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6754:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6754:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6789:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6789:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6800:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6800:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6785:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6785:3:13"
																				},
																				"nativeSrc": "6785:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6785:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6809:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6809:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6764:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6764:20:13"
																		},
																		"nativeSrc": "6764:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6764:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6754:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6754:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6215:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6269:9:13",
														"nodeType": "YulTypedName",
														"src": "6269:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6280:7:13",
														"nodeType": "YulTypedName",
														"src": "6280:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6292:6:13",
														"nodeType": "YulTypedName",
														"src": "6292:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6300:6:13",
														"nodeType": "YulTypedName",
														"src": "6300:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6308:6:13",
														"nodeType": "YulTypedName",
														"src": "6308:6:13",
														"type": ""
													}
												],
												"src": "6215:619:13"
											},
											{
												"body": {
													"nativeSrc": "6885:32:13",
													"nodeType": "YulBlock",
													"src": "6885:32:13",
													"statements": [
														{
															"nativeSrc": "6895:16:13",
															"nodeType": "YulAssignment",
															"src": "6895:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "6906:5:13",
																"nodeType": "YulIdentifier",
																"src": "6906:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6895:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6895:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "6840:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6867:5:13",
														"nodeType": "YulTypedName",
														"src": "6867:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6877:7:13",
														"nodeType": "YulTypedName",
														"src": "6877:7:13",
														"type": ""
													}
												],
												"src": "6840:77:13"
											},
											{
												"body": {
													"nativeSrc": "6966:79:13",
													"nodeType": "YulBlock",
													"src": "6966:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7023:16:13",
																"nodeType": "YulBlock",
																"src": "7023:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7032:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7032:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7035:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7035:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7025:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7025:6:13"
																			},
																			"nativeSrc": "7025:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7025:12:13"
																		},
																		"nativeSrc": "7025:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7025:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6989:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6989:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7014:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7014:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "6996:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6996:17:13"
																				},
																				"nativeSrc": "6996:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6996:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6986:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6986:2:13"
																		},
																		"nativeSrc": "6986:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6979:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:13"
																},
																"nativeSrc": "6979:43:13",
																"nodeType": "YulFunctionCall",
																"src": "6979:43:13"
															},
															"nativeSrc": "6976:63:13",
															"nodeType": "YulIf",
															"src": "6976:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "6923:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6959:5:13",
														"nodeType": "YulTypedName",
														"src": "6959:5:13",
														"type": ""
													}
												],
												"src": "6923:122:13"
											},
											{
												"body": {
													"nativeSrc": "7103:87:13",
													"nodeType": "YulBlock",
													"src": "7103:87:13",
													"statements": [
														{
															"nativeSrc": "7113:29:13",
															"nodeType": "YulAssignment",
															"src": "7113:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7135:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7135:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7122:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7122:12:13"
																},
																"nativeSrc": "7122:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7122:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7113:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7113:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7178:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7178:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "7151:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "7151:26:13"
																},
																"nativeSrc": "7151:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7151:33:13"
															},
															"nativeSrc": "7151:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7151:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "7051:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7081:6:13",
														"nodeType": "YulTypedName",
														"src": "7081:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7089:3:13",
														"nodeType": "YulTypedName",
														"src": "7089:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7097:5:13",
														"nodeType": "YulTypedName",
														"src": "7097:5:13",
														"type": ""
													}
												],
												"src": "7051:139:13"
											},
											{
												"body": {
													"nativeSrc": "7262:263:13",
													"nodeType": "YulBlock",
													"src": "7262:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7308:83:13",
																"nodeType": "YulBlock",
																"src": "7308:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7310:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7310:77:13"
																			},
																			"nativeSrc": "7310:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:79:13"
																		},
																		"nativeSrc": "7310:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7283:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7279:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:13"
																		},
																		"nativeSrc": "7279:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7304:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7275:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:13"
																},
																"nativeSrc": "7275:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7275:32:13"
															},
															"nativeSrc": "7272:119:13",
															"nodeType": "YulIf",
															"src": "7272:119:13"
														},
														{
															"nativeSrc": "7401:117:13",
															"nodeType": "YulBlock",
															"src": "7401:117:13",
															"statements": [
																{
																	"nativeSrc": "7416:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7416:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7430:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7430:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7420:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7420:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7445:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7445:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7480:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7480:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7491:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7491:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7476:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7476:3:13"
																				},
																				"nativeSrc": "7476:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7476:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7500:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7500:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7455:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7455:20:13"
																		},
																		"nativeSrc": "7455:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7445:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7445:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "7196:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7232:9:13",
														"nodeType": "YulTypedName",
														"src": "7232:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7243:7:13",
														"nodeType": "YulTypedName",
														"src": "7243:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7255:6:13",
														"nodeType": "YulTypedName",
														"src": "7255:6:13",
														"type": ""
													}
												],
												"src": "7196:329:13"
											},
											{
												"body": {
													"nativeSrc": "7596:53:13",
													"nodeType": "YulBlock",
													"src": "7596:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7613:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7613:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7636:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7636:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "7618:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7618:17:13"
																		},
																		"nativeSrc": "7618:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7618:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7606:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7606:6:13"
																},
																"nativeSrc": "7606:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7606:37:13"
															},
															"nativeSrc": "7606:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7606:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7531:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7584:5:13",
														"nodeType": "YulTypedName",
														"src": "7584:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7591:3:13",
														"nodeType": "YulTypedName",
														"src": "7591:3:13",
														"type": ""
													}
												],
												"src": "7531:118:13"
											},
											{
												"body": {
													"nativeSrc": "7753:124:13",
													"nodeType": "YulBlock",
													"src": "7753:124:13",
													"statements": [
														{
															"nativeSrc": "7763:26:13",
															"nodeType": "YulAssignment",
															"src": "7763:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7775:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7786:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7771:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:13"
																},
																"nativeSrc": "7771:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7771:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7763:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7843:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7843:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7856:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7856:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7867:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7867:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7852:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:13"
																		},
																		"nativeSrc": "7852:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7852:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7799:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7799:43:13"
																},
																"nativeSrc": "7799:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7799:71:13"
															},
															"nativeSrc": "7799:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7799:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "7655:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7725:9:13",
														"nodeType": "YulTypedName",
														"src": "7725:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7737:6:13",
														"nodeType": "YulTypedName",
														"src": "7737:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7748:4:13",
														"nodeType": "YulTypedName",
														"src": "7748:4:13",
														"type": ""
													}
												],
												"src": "7655:222:13"
											},
											{
												"body": {
													"nativeSrc": "7966:391:13",
													"nodeType": "YulBlock",
													"src": "7966:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8012:83:13",
																"nodeType": "YulBlock",
																"src": "8012:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8014:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8014:77:13"
																			},
																			"nativeSrc": "8014:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8014:79:13"
																		},
																		"nativeSrc": "8014:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8014:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7987:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7987:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7996:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7996:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7983:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:13"
																		},
																		"nativeSrc": "7983:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7983:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8008:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8008:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7979:3:13"
																},
																"nativeSrc": "7979:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7979:32:13"
															},
															"nativeSrc": "7976:119:13",
															"nodeType": "YulIf",
															"src": "7976:119:13"
														},
														{
															"nativeSrc": "8105:117:13",
															"nodeType": "YulBlock",
															"src": "8105:117:13",
															"statements": [
																{
																	"nativeSrc": "8120:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8120:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8134:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8134:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8124:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8124:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8149:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8149:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8184:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8184:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8195:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8195:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8180:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8180:3:13"
																				},
																				"nativeSrc": "8180:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8180:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8204:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8204:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8159:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8159:20:13"
																		},
																		"nativeSrc": "8159:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8159:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8149:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8149:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8232:118:13",
															"nodeType": "YulBlock",
															"src": "8232:118:13",
															"statements": [
																{
																	"nativeSrc": "8247:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8247:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8261:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8261:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8251:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8251:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8277:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8277:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8312:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8312:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8323:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8323:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8308:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8308:3:13"
																				},
																				"nativeSrc": "8308:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8308:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8332:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8332:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8287:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8287:20:13"
																		},
																		"nativeSrc": "8287:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8287:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8277:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8277:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "7883:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7928:9:13",
														"nodeType": "YulTypedName",
														"src": "7928:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7939:7:13",
														"nodeType": "YulTypedName",
														"src": "7939:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7951:6:13",
														"nodeType": "YulTypedName",
														"src": "7951:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7959:6:13",
														"nodeType": "YulTypedName",
														"src": "7959:6:13",
														"type": ""
													}
												],
												"src": "7883:474:13"
											},
											{
												"body": {
													"nativeSrc": "8406:43:13",
													"nodeType": "YulBlock",
													"src": "8406:43:13",
													"statements": [
														{
															"nativeSrc": "8416:27:13",
															"nodeType": "YulAssignment",
															"src": "8416:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8431:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8431:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8438:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8438:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8427:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8427:3:13"
																},
																"nativeSrc": "8427:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8427:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8416:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8416:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8363:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8388:5:13",
														"nodeType": "YulTypedName",
														"src": "8388:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8398:7:13",
														"nodeType": "YulTypedName",
														"src": "8398:7:13",
														"type": ""
													}
												],
												"src": "8363:86:13"
											},
											{
												"body": {
													"nativeSrc": "8516:51:13",
													"nodeType": "YulBlock",
													"src": "8516:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8533:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8533:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8554:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "8538:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "8538:15:13"
																		},
																		"nativeSrc": "8538:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8538:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8526:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8526:6:13"
																},
																"nativeSrc": "8526:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8526:35:13"
															},
															"nativeSrc": "8526:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "8526:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "8455:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8504:5:13",
														"nodeType": "YulTypedName",
														"src": "8504:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8511:3:13",
														"nodeType": "YulTypedName",
														"src": "8511:3:13",
														"type": ""
													}
												],
												"src": "8455:112:13"
											},
											{
												"body": {
													"nativeSrc": "8667:120:13",
													"nodeType": "YulBlock",
													"src": "8667:120:13",
													"statements": [
														{
															"nativeSrc": "8677:26:13",
															"nodeType": "YulAssignment",
															"src": "8677:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8689:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8689:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8700:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8700:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8685:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8685:3:13"
																},
																"nativeSrc": "8685:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8685:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8677:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8677:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8753:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8753:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8766:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8766:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8777:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8777:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8762:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8762:3:13"
																		},
																		"nativeSrc": "8762:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8762:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "8713:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "8713:39:13"
																},
																"nativeSrc": "8713:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8713:67:13"
															},
															"nativeSrc": "8713:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "8713:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "8573:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8639:9:13",
														"nodeType": "YulTypedName",
														"src": "8639:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8651:6:13",
														"nodeType": "YulTypedName",
														"src": "8651:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8662:4:13",
														"nodeType": "YulTypedName",
														"src": "8662:4:13",
														"type": ""
													}
												],
												"src": "8573:214:13"
											},
											{
												"body": {
													"nativeSrc": "8896:571:13",
													"nodeType": "YulBlock",
													"src": "8896:571:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8942:83:13",
																"nodeType": "YulBlock",
																"src": "8942:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8944:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8944:77:13"
																			},
																			"nativeSrc": "8944:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8944:79:13"
																		},
																		"nativeSrc": "8944:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8944:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8917:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8917:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8926:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8926:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8913:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8913:3:13"
																		},
																		"nativeSrc": "8913:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8938:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8938:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8909:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:13"
																},
																"nativeSrc": "8909:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8909:32:13"
															},
															"nativeSrc": "8906:119:13",
															"nodeType": "YulIf",
															"src": "8906:119:13"
														},
														{
															"nativeSrc": "9035:117:13",
															"nodeType": "YulBlock",
															"src": "9035:117:13",
															"statements": [
																{
																	"nativeSrc": "9050:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9050:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9064:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9064:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9054:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9054:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9079:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9079:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9114:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9114:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9125:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9125:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9110:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9110:3:13"
																				},
																				"nativeSrc": "9110:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9110:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9134:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9134:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9089:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9089:20:13"
																		},
																		"nativeSrc": "9089:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9089:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9079:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9079:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9162:298:13",
															"nodeType": "YulBlock",
															"src": "9162:298:13",
															"statements": [
																{
																	"nativeSrc": "9177:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9177:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9208:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9208:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9219:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9219:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9204:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9204:3:13"
																				},
																				"nativeSrc": "9204:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9204:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9191:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9191:12:13"
																		},
																		"nativeSrc": "9191:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9191:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9181:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9181:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9270:83:13",
																		"nodeType": "YulBlock",
																		"src": "9270:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9272:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9272:77:13"
																					},
																					"nativeSrc": "9272:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9272:79:13"
																				},
																				"nativeSrc": "9272:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9272:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9242:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9242:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9250:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9250:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9239:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9239:2:13"
																		},
																		"nativeSrc": "9239:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9239:30:13"
																	},
																	"nativeSrc": "9236:117:13",
																	"nodeType": "YulIf",
																	"src": "9236:117:13"
																},
																{
																	"nativeSrc": "9367:83:13",
																	"nodeType": "YulAssignment",
																	"src": "9367:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9422:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9422:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9433:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9433:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9418:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9418:3:13"
																				},
																				"nativeSrc": "9418:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9418:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9442:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9442:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "9385:32:13",
																			"nodeType": "YulIdentifier",
																			"src": "9385:32:13"
																		},
																		"nativeSrc": "9385:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:65:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9367:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9367:6:13"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "9375:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
												"nativeSrc": "8793:674:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8850:9:13",
														"nodeType": "YulTypedName",
														"src": "8850:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8861:7:13",
														"nodeType": "YulTypedName",
														"src": "8861:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8873:6:13",
														"nodeType": "YulTypedName",
														"src": "8873:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8881:6:13",
														"nodeType": "YulTypedName",
														"src": "8881:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8889:6:13",
														"nodeType": "YulTypedName",
														"src": "8889:6:13",
														"type": ""
													}
												],
												"src": "8793:674:13"
											},
											{
												"body": {
													"nativeSrc": "9539:263:13",
													"nodeType": "YulBlock",
													"src": "9539:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9585:83:13",
																"nodeType": "YulBlock",
																"src": "9585:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9587:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9587:77:13"
																			},
																			"nativeSrc": "9587:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9587:79:13"
																		},
																		"nativeSrc": "9587:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9587:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9560:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9560:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9569:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9569:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9556:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:13"
																		},
																		"nativeSrc": "9556:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9581:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9552:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9552:3:13"
																},
																"nativeSrc": "9552:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9552:32:13"
															},
															"nativeSrc": "9549:119:13",
															"nodeType": "YulIf",
															"src": "9549:119:13"
														},
														{
															"nativeSrc": "9678:117:13",
															"nodeType": "YulBlock",
															"src": "9678:117:13",
															"statements": [
																{
																	"nativeSrc": "9693:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9693:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9707:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9707:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9697:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9697:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9722:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9722:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9757:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9757:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9768:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9768:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9753:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9753:3:13"
																				},
																				"nativeSrc": "9753:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9753:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9777:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9732:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9732:20:13"
																		},
																		"nativeSrc": "9732:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9732:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9722:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9722:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9473:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9509:9:13",
														"nodeType": "YulTypedName",
														"src": "9509:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9520:7:13",
														"nodeType": "YulTypedName",
														"src": "9520:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9532:6:13",
														"nodeType": "YulTypedName",
														"src": "9532:6:13",
														"type": ""
													}
												],
												"src": "9473:329:13"
											},
											{
												"body": {
													"nativeSrc": "9873:53:13",
													"nodeType": "YulBlock",
													"src": "9873:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9890:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9890:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9913:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9913:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9895:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9895:17:13"
																		},
																		"nativeSrc": "9895:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9895:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9883:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9883:6:13"
																},
																"nativeSrc": "9883:37:13",
																"nodeType": "YulFunctionCall",
																"src": "9883:37:13"
															},
															"nativeSrc": "9883:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "9883:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9808:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9861:5:13",
														"nodeType": "YulTypedName",
														"src": "9861:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9868:3:13",
														"nodeType": "YulTypedName",
														"src": "9868:3:13",
														"type": ""
													}
												],
												"src": "9808:118:13"
											},
											{
												"body": {
													"nativeSrc": "10030:124:13",
													"nodeType": "YulBlock",
													"src": "10030:124:13",
													"statements": [
														{
															"nativeSrc": "10040:26:13",
															"nodeType": "YulAssignment",
															"src": "10040:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10052:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10052:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10063:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10063:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10048:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:13"
																},
																"nativeSrc": "10048:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10048:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10040:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10040:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10120:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10120:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10133:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10133:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10144:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10144:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10129:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10129:3:13"
																		},
																		"nativeSrc": "10129:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10129:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10076:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10076:43:13"
																},
																"nativeSrc": "10076:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10076:71:13"
															},
															"nativeSrc": "10076:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10076:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9932:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10002:9:13",
														"nodeType": "YulTypedName",
														"src": "10002:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10014:6:13",
														"nodeType": "YulTypedName",
														"src": "10014:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10025:4:13",
														"nodeType": "YulTypedName",
														"src": "10025:4:13",
														"type": ""
													}
												],
												"src": "9932:222:13"
											},
											{
												"body": {
													"nativeSrc": "10243:391:13",
													"nodeType": "YulBlock",
													"src": "10243:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10289:83:13",
																"nodeType": "YulBlock",
																"src": "10289:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10291:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10291:77:13"
																			},
																			"nativeSrc": "10291:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10291:79:13"
																		},
																		"nativeSrc": "10291:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10291:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10264:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10264:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10273:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10273:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10260:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:13"
																		},
																		"nativeSrc": "10260:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10285:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10285:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10256:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10256:3:13"
																},
																"nativeSrc": "10256:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10256:32:13"
															},
															"nativeSrc": "10253:119:13",
															"nodeType": "YulIf",
															"src": "10253:119:13"
														},
														{
															"nativeSrc": "10382:117:13",
															"nodeType": "YulBlock",
															"src": "10382:117:13",
															"statements": [
																{
																	"nativeSrc": "10397:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10397:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10411:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10401:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10401:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10426:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10426:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10461:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10461:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10472:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10472:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10457:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10457:3:13"
																				},
																				"nativeSrc": "10457:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10457:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10481:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10481:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10436:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10436:20:13"
																		},
																		"nativeSrc": "10436:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10436:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10426:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10426:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10509:118:13",
															"nodeType": "YulBlock",
															"src": "10509:118:13",
															"statements": [
																{
																	"nativeSrc": "10524:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10524:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10538:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10528:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10528:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10554:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10554:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10589:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10589:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10600:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10600:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10585:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10585:3:13"
																				},
																				"nativeSrc": "10585:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10585:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10609:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10609:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10564:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10564:20:13"
																		},
																		"nativeSrc": "10564:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10564:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10554:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10554:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10160:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10205:9:13",
														"nodeType": "YulTypedName",
														"src": "10205:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10216:7:13",
														"nodeType": "YulTypedName",
														"src": "10216:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10228:6:13",
														"nodeType": "YulTypedName",
														"src": "10228:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10236:6:13",
														"nodeType": "YulTypedName",
														"src": "10236:6:13",
														"type": ""
													}
												],
												"src": "10160:474:13"
											},
											{
												"body": {
													"nativeSrc": "10668:152:13",
													"nodeType": "YulBlock",
													"src": "10668:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10685:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10685:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10688:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10688:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10678:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10678:6:13"
																},
																"nativeSrc": "10678:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10678:88:13"
															},
															"nativeSrc": "10678:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10678:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10782:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10782:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10785:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10775:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:13"
																},
																"nativeSrc": "10775:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10775:15:13"
															},
															"nativeSrc": "10775:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10775:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10806:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10806:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10809:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10809:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10799:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:13"
																},
																"nativeSrc": "10799:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10799:15:13"
															},
															"nativeSrc": "10799:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10799:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10640:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10640:180:13"
											},
											{
												"body": {
													"nativeSrc": "10877:269:13",
													"nodeType": "YulBlock",
													"src": "10877:269:13",
													"statements": [
														{
															"nativeSrc": "10887:22:13",
															"nodeType": "YulAssignment",
															"src": "10887:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10901:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10901:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10907:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10907:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10897:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10897:3:13"
																},
																"nativeSrc": "10897:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10897:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10887:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:13"
																}
															]
														},
														{
															"nativeSrc": "10918:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10918:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10948:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10948:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10954:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10954:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10944:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10944:3:13"
																},
																"nativeSrc": "10944:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10944:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10922:18:13",
																	"nodeType": "YulTypedName",
																	"src": "10922:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10995:51:13",
																"nodeType": "YulBlock",
																"src": "10995:51:13",
																"statements": [
																	{
																		"nativeSrc": "11009:27:13",
																		"nodeType": "YulAssignment",
																		"src": "11009:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11023:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11023:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11031:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11031:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11019:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11019:3:13"
																			},
																			"nativeSrc": "11019:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11019:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11009:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11009:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10975:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "10975:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10968:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10968:6:13"
																},
																"nativeSrc": "10968:26:13",
																"nodeType": "YulFunctionCall",
																"src": "10968:26:13"
															},
															"nativeSrc": "10965:81:13",
															"nodeType": "YulIf",
															"src": "10965:81:13"
														},
														{
															"body": {
																"nativeSrc": "11098:42:13",
																"nodeType": "YulBlock",
																"src": "11098:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11112:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11112:16:13"
																			},
																			"nativeSrc": "11112:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11112:18:13"
																		},
																		"nativeSrc": "11112:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11112:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11062:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "11062:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11085:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11093:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11093:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11082:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11082:2:13"
																		},
																		"nativeSrc": "11082:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11082:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11059:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11059:2:13"
																},
																"nativeSrc": "11059:38:13",
																"nodeType": "YulFunctionCall",
																"src": "11059:38:13"
															},
															"nativeSrc": "11056:84:13",
															"nodeType": "YulIf",
															"src": "11056:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10826:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10861:4:13",
														"nodeType": "YulTypedName",
														"src": "10861:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10870:6:13",
														"nodeType": "YulTypedName",
														"src": "10870:6:13",
														"type": ""
													}
												],
												"src": "10826:320:13"
											},
											{
												"body": {
													"nativeSrc": "11258:59:13",
													"nodeType": "YulBlock",
													"src": "11258:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11280:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11288:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11288:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11276:3:13"
																		},
																		"nativeSrc": "11276:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11276:14:13"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "11292:17:13",
																		"nodeType": "YulLiteral",
																		"src": "11292:17:13",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11269:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11269:6:13"
																},
																"nativeSrc": "11269:41:13",
																"nodeType": "YulFunctionCall",
																"src": "11269:41:13"
															},
															"nativeSrc": "11269:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "11269:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "11152:165:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11250:6:13",
														"nodeType": "YulTypedName",
														"src": "11250:6:13",
														"type": ""
													}
												],
												"src": "11152:165:13"
											},
											{
												"body": {
													"nativeSrc": "11469:220:13",
													"nodeType": "YulBlock",
													"src": "11469:220:13",
													"statements": [
														{
															"nativeSrc": "11479:74:13",
															"nodeType": "YulAssignment",
															"src": "11479:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11545:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11545:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11550:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11550:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11486:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11486:58:13"
																},
																"nativeSrc": "11486:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11486:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11479:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11479:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11651:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11651:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "11562:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11562:88:13"
																},
																"nativeSrc": "11562:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11562:93:13"
															},
															"nativeSrc": "11562:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11562:93:13"
														},
														{
															"nativeSrc": "11664:19:13",
															"nodeType": "YulAssignment",
															"src": "11664:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11675:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11675:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11680:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11680:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11671:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11671:3:13"
																},
																"nativeSrc": "11671:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11671:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11664:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11323:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11457:3:13",
														"nodeType": "YulTypedName",
														"src": "11457:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11465:3:13",
														"nodeType": "YulTypedName",
														"src": "11465:3:13",
														"type": ""
													}
												],
												"src": "11323:366:13"
											},
											{
												"body": {
													"nativeSrc": "11866:248:13",
													"nodeType": "YulBlock",
													"src": "11866:248:13",
													"statements": [
														{
															"nativeSrc": "11876:26:13",
															"nodeType": "YulAssignment",
															"src": "11876:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11888:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11888:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11899:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11899:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11884:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11884:3:13"
																},
																"nativeSrc": "11884:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11884:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11876:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11876:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11923:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11923:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11934:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11934:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11919:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11919:3:13"
																		},
																		"nativeSrc": "11919:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11919:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11942:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11942:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11948:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11948:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11938:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11938:3:13"
																		},
																		"nativeSrc": "11938:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11938:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11912:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11912:6:13"
																},
																"nativeSrc": "11912:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11912:47:13"
															},
															"nativeSrc": "11912:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11912:47:13"
														},
														{
															"nativeSrc": "11968:139:13",
															"nodeType": "YulAssignment",
															"src": "11968:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12102:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12102:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11976:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11976:124:13"
																},
																"nativeSrc": "11976:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11976:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11968:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11968:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11695:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11846:9:13",
														"nodeType": "YulTypedName",
														"src": "11846:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11861:4:13",
														"nodeType": "YulTypedName",
														"src": "11861:4:13",
														"type": ""
													}
												],
												"src": "11695:419:13"
											},
											{
												"body": {
													"nativeSrc": "12226:76:13",
													"nodeType": "YulBlock",
													"src": "12226:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12248:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12248:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12256:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12256:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12244:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12244:3:13"
																		},
																		"nativeSrc": "12244:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12244:14:13"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "12260:34:13",
																		"nodeType": "YulLiteral",
																		"src": "12260:34:13",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:13"
																},
																"nativeSrc": "12237:58:13",
																"nodeType": "YulFunctionCall",
																"src": "12237:58:13"
															},
															"nativeSrc": "12237:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "12237:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "12120:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12218:6:13",
														"nodeType": "YulTypedName",
														"src": "12218:6:13",
														"type": ""
													}
												],
												"src": "12120:182:13"
											},
											{
												"body": {
													"nativeSrc": "12454:220:13",
													"nodeType": "YulBlock",
													"src": "12454:220:13",
													"statements": [
														{
															"nativeSrc": "12464:74:13",
															"nodeType": "YulAssignment",
															"src": "12464:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12530:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12530:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12535:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12535:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12471:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12471:58:13"
																},
																"nativeSrc": "12471:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12471:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12464:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12636:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12636:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "12547:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12547:88:13"
																},
																"nativeSrc": "12547:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12547:93:13"
															},
															"nativeSrc": "12547:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12547:93:13"
														},
														{
															"nativeSrc": "12649:19:13",
															"nodeType": "YulAssignment",
															"src": "12649:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12660:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12660:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12665:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12665:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12656:3:13"
																},
																"nativeSrc": "12656:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12656:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12649:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12649:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12308:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12442:3:13",
														"nodeType": "YulTypedName",
														"src": "12442:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12450:3:13",
														"nodeType": "YulTypedName",
														"src": "12450:3:13",
														"type": ""
													}
												],
												"src": "12308:366:13"
											},
											{
												"body": {
													"nativeSrc": "12851:248:13",
													"nodeType": "YulBlock",
													"src": "12851:248:13",
													"statements": [
														{
															"nativeSrc": "12861:26:13",
															"nodeType": "YulAssignment",
															"src": "12861:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12873:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12873:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12884:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12884:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12869:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12869:3:13"
																},
																"nativeSrc": "12869:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12869:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12861:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12861:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12908:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12908:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12919:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12919:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12904:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12904:3:13"
																		},
																		"nativeSrc": "12904:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12904:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12927:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12927:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12933:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12933:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12923:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12923:3:13"
																		},
																		"nativeSrc": "12923:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12923:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12897:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12897:6:13"
																},
																"nativeSrc": "12897:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12897:47:13"
															},
															"nativeSrc": "12897:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12897:47:13"
														},
														{
															"nativeSrc": "12953:139:13",
															"nodeType": "YulAssignment",
															"src": "12953:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13087:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13087:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12961:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12961:124:13"
																},
																"nativeSrc": "12961:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12961:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12953:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12953:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12680:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12831:9:13",
														"nodeType": "YulTypedName",
														"src": "12831:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12846:4:13",
														"nodeType": "YulTypedName",
														"src": "12846:4:13",
														"type": ""
													}
												],
												"src": "12680:419:13"
											},
											{
												"body": {
													"nativeSrc": "13211:70:13",
													"nodeType": "YulBlock",
													"src": "13211:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13233:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13233:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13241:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13241:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13229:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13229:3:13"
																		},
																		"nativeSrc": "13229:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13229:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f776e65722062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13245:28:13",
																		"nodeType": "YulLiteral",
																		"src": "13245:28:13",
																		"type": "",
																		"value": "Insufficient owner balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13222:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13222:6:13"
																},
																"nativeSrc": "13222:52:13",
																"nodeType": "YulFunctionCall",
																"src": "13222:52:13"
															},
															"nativeSrc": "13222:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "13222:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460",
												"nativeSrc": "13105:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13203:6:13",
														"nodeType": "YulTypedName",
														"src": "13203:6:13",
														"type": ""
													}
												],
												"src": "13105:176:13"
											},
											{
												"body": {
													"nativeSrc": "13433:220:13",
													"nodeType": "YulBlock",
													"src": "13433:220:13",
													"statements": [
														{
															"nativeSrc": "13443:74:13",
															"nodeType": "YulAssignment",
															"src": "13443:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13509:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13509:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13514:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13514:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13450:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13450:58:13"
																},
																"nativeSrc": "13450:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13450:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13443:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13443:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13615:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13615:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460",
																	"nativeSrc": "13526:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13526:88:13"
																},
																"nativeSrc": "13526:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13526:93:13"
															},
															"nativeSrc": "13526:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13526:93:13"
														},
														{
															"nativeSrc": "13628:19:13",
															"nodeType": "YulAssignment",
															"src": "13628:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13639:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13639:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13644:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13644:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13635:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13635:3:13"
																},
																"nativeSrc": "13635:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13635:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13628:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13287:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13421:3:13",
														"nodeType": "YulTypedName",
														"src": "13421:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13429:3:13",
														"nodeType": "YulTypedName",
														"src": "13429:3:13",
														"type": ""
													}
												],
												"src": "13287:366:13"
											},
											{
												"body": {
													"nativeSrc": "13830:248:13",
													"nodeType": "YulBlock",
													"src": "13830:248:13",
													"statements": [
														{
															"nativeSrc": "13840:26:13",
															"nodeType": "YulAssignment",
															"src": "13840:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13852:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13852:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13863:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13863:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13848:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13848:3:13"
																},
																"nativeSrc": "13848:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13848:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13840:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13840:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13887:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13887:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13898:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13898:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13883:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13883:3:13"
																		},
																		"nativeSrc": "13883:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13883:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13906:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13906:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13912:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13912:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13902:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13902:3:13"
																		},
																		"nativeSrc": "13902:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13902:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13876:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13876:6:13"
																},
																"nativeSrc": "13876:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13876:47:13"
															},
															"nativeSrc": "13876:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13876:47:13"
														},
														{
															"nativeSrc": "13932:139:13",
															"nodeType": "YulAssignment",
															"src": "13932:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14066:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14066:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13940:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13940:124:13"
																},
																"nativeSrc": "13940:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13940:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13932:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13932:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13659:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13810:9:13",
														"nodeType": "YulTypedName",
														"src": "13810:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13825:4:13",
														"nodeType": "YulTypedName",
														"src": "13825:4:13",
														"type": ""
													}
												],
												"src": "13659:419:13"
											},
											{
												"body": {
													"nativeSrc": "14148:84:13",
													"nodeType": "YulBlock",
													"src": "14148:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "14172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14172:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "14177:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14177:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14182:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14182:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "14159:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "14159:12:13"
																},
																"nativeSrc": "14159:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14159:30:13"
															},
															"nativeSrc": "14159:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14159:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "14209:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14209:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14214:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14214:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14205:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14205:3:13"
																		},
																		"nativeSrc": "14205:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14205:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14223:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14223:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14198:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14198:6:13"
																},
																"nativeSrc": "14198:27:13",
																"nodeType": "YulFunctionCall",
																"src": "14198:27:13"
															},
															"nativeSrc": "14198:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "14198:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "14084:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14130:3:13",
														"nodeType": "YulTypedName",
														"src": "14130:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "14135:3:13",
														"nodeType": "YulTypedName",
														"src": "14135:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14140:6:13",
														"nodeType": "YulTypedName",
														"src": "14140:6:13",
														"type": ""
													}
												],
												"src": "14084:148:13"
											},
											{
												"body": {
													"nativeSrc": "14364:215:13",
													"nodeType": "YulBlock",
													"src": "14364:215:13",
													"statements": [
														{
															"nativeSrc": "14374:78:13",
															"nodeType": "YulAssignment",
															"src": "14374:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14440:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14440:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14445:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14445:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14381:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14381:58:13"
																},
																"nativeSrc": "14381:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14381:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14374:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14499:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14499:5:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14506:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14506:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14511:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14511:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "14462:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "14462:36:13"
																},
																"nativeSrc": "14462:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14462:56:13"
															},
															"nativeSrc": "14462:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "14462:56:13"
														},
														{
															"nativeSrc": "14527:46:13",
															"nodeType": "YulAssignment",
															"src": "14527:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14538:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14538:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14565:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14565:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14543:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "14543:21:13"
																		},
																		"nativeSrc": "14543:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14543:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14534:3:13"
																},
																"nativeSrc": "14534:39:13",
																"nodeType": "YulFunctionCall",
																"src": "14534:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14527:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14527:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14262:317:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14337:5:13",
														"nodeType": "YulTypedName",
														"src": "14337:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14344:6:13",
														"nodeType": "YulTypedName",
														"src": "14344:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14352:3:13",
														"nodeType": "YulTypedName",
														"src": "14352:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14360:3:13",
														"nodeType": "YulTypedName",
														"src": "14360:3:13",
														"type": ""
													}
												],
												"src": "14262:317:13"
											},
											{
												"body": {
													"nativeSrc": "14741:287:13",
													"nodeType": "YulBlock",
													"src": "14741:287:13",
													"statements": [
														{
															"nativeSrc": "14751:26:13",
															"nodeType": "YulAssignment",
															"src": "14751:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14763:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14763:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14774:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14774:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14759:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14759:3:13"
																},
																"nativeSrc": "14759:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14759:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14751:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14751:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14831:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14831:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14844:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14844:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14855:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14855:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14840:3:13"
																		},
																		"nativeSrc": "14840:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14840:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14787:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14787:43:13"
																},
																"nativeSrc": "14787:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14787:71:13"
															},
															"nativeSrc": "14787:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14787:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14879:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14879:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14890:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14890:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14875:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14875:3:13"
																		},
																		"nativeSrc": "14875:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14875:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14899:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14899:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14905:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14905:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14895:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14895:3:13"
																		},
																		"nativeSrc": "14895:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14895:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14868:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14868:6:13"
																},
																"nativeSrc": "14868:48:13",
																"nodeType": "YulFunctionCall",
																"src": "14868:48:13"
															},
															"nativeSrc": "14868:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "14868:48:13"
														},
														{
															"nativeSrc": "14925:96:13",
															"nodeType": "YulAssignment",
															"src": "14925:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14999:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14999:6:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15007:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15007:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15016:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15016:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14933:65:13",
																	"nodeType": "YulIdentifier",
																	"src": "14933:65:13"
																},
																"nativeSrc": "14933:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14933:88:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14925:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14925:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14585:443:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14697:9:13",
														"nodeType": "YulTypedName",
														"src": "14697:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14709:6:13",
														"nodeType": "YulTypedName",
														"src": "14709:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14717:6:13",
														"nodeType": "YulTypedName",
														"src": "14717:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14725:6:13",
														"nodeType": "YulTypedName",
														"src": "14725:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14736:4:13",
														"nodeType": "YulTypedName",
														"src": "14736:4:13",
														"type": ""
													}
												],
												"src": "14585:443:13"
											},
											{
												"body": {
													"nativeSrc": "15140:64:13",
													"nodeType": "YulBlock",
													"src": "15140:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15162:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15162:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15170:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15170:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15158:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15158:3:13"
																		},
																		"nativeSrc": "15158:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15158:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15174:22:13",
																		"nodeType": "YulLiteral",
																		"src": "15174:22:13",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15151:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15151:6:13"
																},
																"nativeSrc": "15151:46:13",
																"nodeType": "YulFunctionCall",
																"src": "15151:46:13"
															},
															"nativeSrc": "15151:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "15151:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "15034:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15132:6:13",
														"nodeType": "YulTypedName",
														"src": "15132:6:13",
														"type": ""
													}
												],
												"src": "15034:170:13"
											},
											{
												"body": {
													"nativeSrc": "15356:220:13",
													"nodeType": "YulBlock",
													"src": "15356:220:13",
													"statements": [
														{
															"nativeSrc": "15366:74:13",
															"nodeType": "YulAssignment",
															"src": "15366:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15432:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15432:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15437:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15437:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15373:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15373:58:13"
																},
																"nativeSrc": "15373:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15373:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15366:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15366:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15538:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15538:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "15449:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15449:88:13"
																},
																"nativeSrc": "15449:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15449:93:13"
															},
															"nativeSrc": "15449:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15449:93:13"
														},
														{
															"nativeSrc": "15551:19:13",
															"nodeType": "YulAssignment",
															"src": "15551:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15562:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15562:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15567:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15567:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15558:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15558:3:13"
																},
																"nativeSrc": "15558:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15558:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15551:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15210:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15344:3:13",
														"nodeType": "YulTypedName",
														"src": "15344:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15352:3:13",
														"nodeType": "YulTypedName",
														"src": "15352:3:13",
														"type": ""
													}
												],
												"src": "15210:366:13"
											},
											{
												"body": {
													"nativeSrc": "15753:248:13",
													"nodeType": "YulBlock",
													"src": "15753:248:13",
													"statements": [
														{
															"nativeSrc": "15763:26:13",
															"nodeType": "YulAssignment",
															"src": "15763:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15775:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15775:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15786:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15786:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15771:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15771:3:13"
																},
																"nativeSrc": "15771:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15771:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15763:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15763:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15810:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15810:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15821:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15821:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15806:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15806:3:13"
																		},
																		"nativeSrc": "15806:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15806:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15829:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15829:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15835:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15835:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15825:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15825:3:13"
																		},
																		"nativeSrc": "15825:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15825:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15799:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15799:6:13"
																},
																"nativeSrc": "15799:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15799:47:13"
															},
															"nativeSrc": "15799:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15799:47:13"
														},
														{
															"nativeSrc": "15855:139:13",
															"nodeType": "YulAssignment",
															"src": "15855:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15989:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15989:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15863:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15863:124:13"
																},
																"nativeSrc": "15863:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15863:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15855:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15855:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15582:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15733:9:13",
														"nodeType": "YulTypedName",
														"src": "15733:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15748:4:13",
														"nodeType": "YulTypedName",
														"src": "15748:4:13",
														"type": ""
													}
												],
												"src": "15582:419:13"
											},
											{
												"body": {
													"nativeSrc": "16133:206:13",
													"nodeType": "YulBlock",
													"src": "16133:206:13",
													"statements": [
														{
															"nativeSrc": "16143:26:13",
															"nodeType": "YulAssignment",
															"src": "16143:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16155:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16155:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16166:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16166:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16151:3:13"
																},
																"nativeSrc": "16151:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16151:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16143:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16143:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16223:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16236:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16236:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16247:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16247:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16232:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16232:3:13"
																		},
																		"nativeSrc": "16232:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16232:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16179:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16179:43:13"
																},
																"nativeSrc": "16179:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16179:71:13"
															},
															"nativeSrc": "16179:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16179:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16304:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16304:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16317:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16317:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16328:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16328:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16313:3:13"
																		},
																		"nativeSrc": "16313:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16313:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16260:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16260:43:13"
																},
																"nativeSrc": "16260:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16260:72:13"
															},
															"nativeSrc": "16260:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16260:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16007:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16097:9:13",
														"nodeType": "YulTypedName",
														"src": "16097:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16109:6:13",
														"nodeType": "YulTypedName",
														"src": "16109:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16117:6:13",
														"nodeType": "YulTypedName",
														"src": "16117:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16128:4:13",
														"nodeType": "YulTypedName",
														"src": "16128:4:13",
														"type": ""
													}
												],
												"src": "16007:332:13"
											},
											{
												"body": {
													"nativeSrc": "16385:76:13",
													"nodeType": "YulBlock",
													"src": "16385:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16439:16:13",
																"nodeType": "YulBlock",
																"src": "16439:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16448:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16448:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16451:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16451:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16441:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16441:6:13"
																			},
																			"nativeSrc": "16441:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16441:12:13"
																		},
																		"nativeSrc": "16441:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16441:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16408:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "16408:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16430:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "16430:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16415:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "16415:14:13"
																				},
																				"nativeSrc": "16415:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16415:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16405:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "16405:2:13"
																		},
																		"nativeSrc": "16405:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16405:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16398:6:13"
																},
																"nativeSrc": "16398:40:13",
																"nodeType": "YulFunctionCall",
																"src": "16398:40:13"
															},
															"nativeSrc": "16395:60:13",
															"nodeType": "YulIf",
															"src": "16395:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16345:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16378:5:13",
														"nodeType": "YulTypedName",
														"src": "16378:5:13",
														"type": ""
													}
												],
												"src": "16345:116:13"
											},
											{
												"body": {
													"nativeSrc": "16527:77:13",
													"nodeType": "YulBlock",
													"src": "16527:77:13",
													"statements": [
														{
															"nativeSrc": "16537:22:13",
															"nodeType": "YulAssignment",
															"src": "16537:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16552:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16552:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16546:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16546:5:13"
																},
																"nativeSrc": "16546:13:13",
																"nodeType": "YulFunctionCall",
																"src": "16546:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16537:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16537:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16592:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16592:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16568:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "16568:23:13"
																},
																"nativeSrc": "16568:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16568:30:13"
															},
															"nativeSrc": "16568:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "16568:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "16467:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16505:6:13",
														"nodeType": "YulTypedName",
														"src": "16505:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16513:3:13",
														"nodeType": "YulTypedName",
														"src": "16513:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16521:5:13",
														"nodeType": "YulTypedName",
														"src": "16521:5:13",
														"type": ""
													}
												],
												"src": "16467:137:13"
											},
											{
												"body": {
													"nativeSrc": "16684:271:13",
													"nodeType": "YulBlock",
													"src": "16684:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16730:83:13",
																"nodeType": "YulBlock",
																"src": "16730:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16732:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16732:77:13"
																			},
																			"nativeSrc": "16732:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16732:79:13"
																		},
																		"nativeSrc": "16732:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16732:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16705:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16705:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16714:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16701:3:13"
																		},
																		"nativeSrc": "16701:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16701:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16726:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16726:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16697:3:13"
																},
																"nativeSrc": "16697:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16697:32:13"
															},
															"nativeSrc": "16694:119:13",
															"nodeType": "YulIf",
															"src": "16694:119:13"
														},
														{
															"nativeSrc": "16823:125:13",
															"nodeType": "YulBlock",
															"src": "16823:125:13",
															"statements": [
																{
																	"nativeSrc": "16838:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16838:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16852:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16852:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16842:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16842:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16867:71:13",
																	"nodeType": "YulAssignment",
																	"src": "16867:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16910:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16910:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16921:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16921:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16906:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16906:3:13"
																				},
																				"nativeSrc": "16906:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16906:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16930:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16930:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "16877:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "16877:28:13"
																		},
																		"nativeSrc": "16877:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16877:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16867:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16867:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "16610:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16654:9:13",
														"nodeType": "YulTypedName",
														"src": "16654:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16665:7:13",
														"nodeType": "YulTypedName",
														"src": "16665:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16677:6:13",
														"nodeType": "YulTypedName",
														"src": "16677:6:13",
														"type": ""
													}
												],
												"src": "16610:345:13"
											},
											{
												"body": {
													"nativeSrc": "17067:60:13",
													"nodeType": "YulBlock",
													"src": "17067:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17089:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17097:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17097:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17085:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17085:3:13"
																		},
																		"nativeSrc": "17085:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17085:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "17101:18:13",
																		"nodeType": "YulLiteral",
																		"src": "17101:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17078:6:13"
																},
																"nativeSrc": "17078:42:13",
																"nodeType": "YulFunctionCall",
																"src": "17078:42:13"
															},
															"nativeSrc": "17078:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "17078:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "16961:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17059:6:13",
														"nodeType": "YulTypedName",
														"src": "17059:6:13",
														"type": ""
													}
												],
												"src": "16961:166:13"
											},
											{
												"body": {
													"nativeSrc": "17279:220:13",
													"nodeType": "YulBlock",
													"src": "17279:220:13",
													"statements": [
														{
															"nativeSrc": "17289:74:13",
															"nodeType": "YulAssignment",
															"src": "17289:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17355:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17360:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17360:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17296:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17296:58:13"
																},
																"nativeSrc": "17296:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17296:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17289:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17289:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17461:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17461:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "17372:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17372:88:13"
																},
																"nativeSrc": "17372:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17372:93:13"
															},
															"nativeSrc": "17372:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17372:93:13"
														},
														{
															"nativeSrc": "17474:19:13",
															"nodeType": "YulAssignment",
															"src": "17474:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17485:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17485:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17490:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17490:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17481:3:13"
																},
																"nativeSrc": "17481:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17481:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17474:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17474:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17133:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17267:3:13",
														"nodeType": "YulTypedName",
														"src": "17267:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17275:3:13",
														"nodeType": "YulTypedName",
														"src": "17275:3:13",
														"type": ""
													}
												],
												"src": "17133:366:13"
											},
											{
												"body": {
													"nativeSrc": "17676:248:13",
													"nodeType": "YulBlock",
													"src": "17676:248:13",
													"statements": [
														{
															"nativeSrc": "17686:26:13",
															"nodeType": "YulAssignment",
															"src": "17686:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17698:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17698:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17709:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17709:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17694:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17694:3:13"
																},
																"nativeSrc": "17694:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17694:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17686:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17686:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17733:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17733:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17744:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17744:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17729:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17729:3:13"
																		},
																		"nativeSrc": "17729:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17729:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17752:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17752:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17758:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17758:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17748:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17748:3:13"
																		},
																		"nativeSrc": "17748:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17748:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17722:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17722:6:13"
																},
																"nativeSrc": "17722:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17722:47:13"
															},
															"nativeSrc": "17722:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17722:47:13"
														},
														{
															"nativeSrc": "17778:139:13",
															"nodeType": "YulAssignment",
															"src": "17778:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17912:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17912:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17786:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17786:124:13"
																},
																"nativeSrc": "17786:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17786:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17778:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17778:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17505:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17656:9:13",
														"nodeType": "YulTypedName",
														"src": "17656:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17671:4:13",
														"nodeType": "YulTypedName",
														"src": "17671:4:13",
														"type": ""
													}
												],
												"src": "17505:419:13"
											},
											{
												"body": {
													"nativeSrc": "18036:75:13",
													"nodeType": "YulBlock",
													"src": "18036:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18058:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18058:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18066:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18066:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18054:3:13"
																		},
																		"nativeSrc": "18054:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18054:14:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "18070:33:13",
																		"nodeType": "YulLiteral",
																		"src": "18070:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18047:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18047:6:13"
																},
																"nativeSrc": "18047:57:13",
																"nodeType": "YulFunctionCall",
																"src": "18047:57:13"
															},
															"nativeSrc": "18047:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "18047:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17930:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18028:6:13",
														"nodeType": "YulTypedName",
														"src": "18028:6:13",
														"type": ""
													}
												],
												"src": "17930:181:13"
											},
											{
												"body": {
													"nativeSrc": "18263:220:13",
													"nodeType": "YulBlock",
													"src": "18263:220:13",
													"statements": [
														{
															"nativeSrc": "18273:74:13",
															"nodeType": "YulAssignment",
															"src": "18273:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18339:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18339:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18344:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18344:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18280:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18280:58:13"
																},
																"nativeSrc": "18280:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18280:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18273:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18273:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18445:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18445:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "18356:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18356:88:13"
																},
																"nativeSrc": "18356:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18356:93:13"
															},
															"nativeSrc": "18356:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18356:93:13"
														},
														{
															"nativeSrc": "18458:19:13",
															"nodeType": "YulAssignment",
															"src": "18458:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18469:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18469:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18474:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18474:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18465:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18465:3:13"
																},
																"nativeSrc": "18465:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18465:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18458:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18458:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18117:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18251:3:13",
														"nodeType": "YulTypedName",
														"src": "18251:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18259:3:13",
														"nodeType": "YulTypedName",
														"src": "18259:3:13",
														"type": ""
													}
												],
												"src": "18117:366:13"
											},
											{
												"body": {
													"nativeSrc": "18660:248:13",
													"nodeType": "YulBlock",
													"src": "18660:248:13",
													"statements": [
														{
															"nativeSrc": "18670:26:13",
															"nodeType": "YulAssignment",
															"src": "18670:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18682:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18682:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18693:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18693:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18678:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18678:3:13"
																},
																"nativeSrc": "18678:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18678:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18670:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18670:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18717:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18717:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18728:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18728:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18713:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18713:3:13"
																		},
																		"nativeSrc": "18713:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18713:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18736:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18736:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18742:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18742:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18732:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18732:3:13"
																		},
																		"nativeSrc": "18732:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18732:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18706:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18706:6:13"
																},
																"nativeSrc": "18706:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18706:47:13"
															},
															"nativeSrc": "18706:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18706:47:13"
														},
														{
															"nativeSrc": "18762:139:13",
															"nodeType": "YulAssignment",
															"src": "18762:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18896:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18896:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18770:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18770:124:13"
																},
																"nativeSrc": "18770:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18770:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18762:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18762:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18489:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18640:9:13",
														"nodeType": "YulTypedName",
														"src": "18640:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18655:4:13",
														"nodeType": "YulTypedName",
														"src": "18655:4:13",
														"type": ""
													}
												],
												"src": "18489:419:13"
											},
											{
												"body": {
													"nativeSrc": "19068:288:13",
													"nodeType": "YulBlock",
													"src": "19068:288:13",
													"statements": [
														{
															"nativeSrc": "19078:26:13",
															"nodeType": "YulAssignment",
															"src": "19078:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19090:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19090:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19101:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19101:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19086:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19086:3:13"
																},
																"nativeSrc": "19086:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19086:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19078:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19078:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19158:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19158:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19171:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19171:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19182:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19182:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19167:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19167:3:13"
																		},
																		"nativeSrc": "19167:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19167:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19114:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19114:43:13"
																},
																"nativeSrc": "19114:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19114:71:13"
															},
															"nativeSrc": "19114:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19114:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19239:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19252:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19252:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19263:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19263:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19248:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19248:3:13"
																		},
																		"nativeSrc": "19248:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19248:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19195:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19195:43:13"
																},
																"nativeSrc": "19195:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19195:72:13"
															},
															"nativeSrc": "19195:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19195:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19321:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19334:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19334:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19345:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19345:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19330:3:13"
																		},
																		"nativeSrc": "19330:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19330:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19277:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19277:43:13"
																},
																"nativeSrc": "19277:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19277:72:13"
															},
															"nativeSrc": "19277:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19277:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18914:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19024:9:13",
														"nodeType": "YulTypedName",
														"src": "19024:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19036:6:13",
														"nodeType": "YulTypedName",
														"src": "19036:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19044:6:13",
														"nodeType": "YulTypedName",
														"src": "19044:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19052:6:13",
														"nodeType": "YulTypedName",
														"src": "19052:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19063:4:13",
														"nodeType": "YulTypedName",
														"src": "19063:4:13",
														"type": ""
													}
												],
												"src": "18914:442:13"
											},
											{
												"body": {
													"nativeSrc": "19488:206:13",
													"nodeType": "YulBlock",
													"src": "19488:206:13",
													"statements": [
														{
															"nativeSrc": "19498:26:13",
															"nodeType": "YulAssignment",
															"src": "19498:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19510:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19510:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19521:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19521:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19506:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19506:3:13"
																},
																"nativeSrc": "19506:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19506:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19498:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19498:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19578:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19578:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19591:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19591:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19602:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19602:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19587:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19587:3:13"
																		},
																		"nativeSrc": "19587:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19587:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19534:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19534:43:13"
																},
																"nativeSrc": "19534:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19534:71:13"
															},
															"nativeSrc": "19534:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19534:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19659:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19659:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19672:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19672:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19683:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19683:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19668:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19668:3:13"
																		},
																		"nativeSrc": "19668:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19668:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19615:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19615:43:13"
																},
																"nativeSrc": "19615:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19615:72:13"
															},
															"nativeSrc": "19615:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19615:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19362:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19452:9:13",
														"nodeType": "YulTypedName",
														"src": "19452:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19464:6:13",
														"nodeType": "YulTypedName",
														"src": "19464:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19472:6:13",
														"nodeType": "YulTypedName",
														"src": "19472:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19483:4:13",
														"nodeType": "YulTypedName",
														"src": "19483:4:13",
														"type": ""
													}
												],
												"src": "19362:332:13"
											},
											{
												"body": {
													"nativeSrc": "19728:152:13",
													"nodeType": "YulBlock",
													"src": "19728:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19745:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19745:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19748:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19748:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19738:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19738:6:13"
																},
																"nativeSrc": "19738:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19738:88:13"
															},
															"nativeSrc": "19738:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19738:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19842:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19842:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19845:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19845:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19835:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19835:6:13"
																},
																"nativeSrc": "19835:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19835:15:13"
															},
															"nativeSrc": "19835:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19835:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19866:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19866:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19869:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19869:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19859:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19859:6:13"
																},
																"nativeSrc": "19859:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19859:15:13"
															},
															"nativeSrc": "19859:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19859:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19700:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19700:180:13"
											},
											{
												"body": {
													"nativeSrc": "19930:147:13",
													"nodeType": "YulBlock",
													"src": "19930:147:13",
													"statements": [
														{
															"nativeSrc": "19940:25:13",
															"nodeType": "YulAssignment",
															"src": "19940:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19963:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19963:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19945:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19945:17:13"
																},
																"nativeSrc": "19945:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19945:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19940:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "19940:1:13"
																}
															]
														},
														{
															"nativeSrc": "19974:25:13",
															"nodeType": "YulAssignment",
															"src": "19974:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19997:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19997:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19979:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19979:17:13"
																},
																"nativeSrc": "19979:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19979:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19974:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "19974:1:13"
																}
															]
														},
														{
															"nativeSrc": "20008:16:13",
															"nodeType": "YulAssignment",
															"src": "20008:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20019:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20019:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20022:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20022:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20015:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20015:3:13"
																},
																"nativeSrc": "20015:9:13",
																"nodeType": "YulFunctionCall",
																"src": "20015:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20008:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20008:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20048:22:13",
																"nodeType": "YulBlock",
																"src": "20048:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20050:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20050:16:13"
																			},
																			"nativeSrc": "20050:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20050:18:13"
																		},
																		"nativeSrc": "20050:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20050:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20040:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20040:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20043:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20043:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20037:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "20037:2:13"
																},
																"nativeSrc": "20037:10:13",
																"nodeType": "YulFunctionCall",
																"src": "20037:10:13"
															},
															"nativeSrc": "20034:36:13",
															"nodeType": "YulIf",
															"src": "20034:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19886:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19917:1:13",
														"nodeType": "YulTypedName",
														"src": "19917:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19920:1:13",
														"nodeType": "YulTypedName",
														"src": "19920:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19926:3:13",
														"nodeType": "YulTypedName",
														"src": "19926:3:13",
														"type": ""
													}
												],
												"src": "19886:191:13"
											},
											{
												"body": {
													"nativeSrc": "20189:64:13",
													"nodeType": "YulBlock",
													"src": "20189:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20211:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20211:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20219:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20219:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20207:3:13"
																		},
																		"nativeSrc": "20207:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20207:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "20223:22:13",
																		"nodeType": "YulLiteral",
																		"src": "20223:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20200:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20200:6:13"
																},
																"nativeSrc": "20200:46:13",
																"nodeType": "YulFunctionCall",
																"src": "20200:46:13"
															},
															"nativeSrc": "20200:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "20200:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "20083:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20181:6:13",
														"nodeType": "YulTypedName",
														"src": "20181:6:13",
														"type": ""
													}
												],
												"src": "20083:170:13"
											},
											{
												"body": {
													"nativeSrc": "20405:220:13",
													"nodeType": "YulBlock",
													"src": "20405:220:13",
													"statements": [
														{
															"nativeSrc": "20415:74:13",
															"nodeType": "YulAssignment",
															"src": "20415:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20481:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20481:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20486:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20486:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20422:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20422:58:13"
																},
																"nativeSrc": "20422:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20422:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20415:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20415:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20587:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20587:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "20498:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20498:88:13"
																},
																"nativeSrc": "20498:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20498:93:13"
															},
															"nativeSrc": "20498:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20498:93:13"
														},
														{
															"nativeSrc": "20600:19:13",
															"nodeType": "YulAssignment",
															"src": "20600:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20611:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20611:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20616:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20616:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20607:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20607:3:13"
																},
																"nativeSrc": "20607:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20607:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20600:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20259:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20393:3:13",
														"nodeType": "YulTypedName",
														"src": "20393:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20401:3:13",
														"nodeType": "YulTypedName",
														"src": "20401:3:13",
														"type": ""
													}
												],
												"src": "20259:366:13"
											},
											{
												"body": {
													"nativeSrc": "20802:248:13",
													"nodeType": "YulBlock",
													"src": "20802:248:13",
													"statements": [
														{
															"nativeSrc": "20812:26:13",
															"nodeType": "YulAssignment",
															"src": "20812:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20824:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20824:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20835:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20835:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20820:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20820:3:13"
																},
																"nativeSrc": "20820:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20820:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20812:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20812:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20859:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20859:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20870:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20870:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20855:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20855:3:13"
																		},
																		"nativeSrc": "20855:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20855:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20878:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20878:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20884:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20884:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20874:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20874:3:13"
																		},
																		"nativeSrc": "20874:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20874:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20848:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20848:6:13"
																},
																"nativeSrc": "20848:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20848:47:13"
															},
															"nativeSrc": "20848:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20848:47:13"
														},
														{
															"nativeSrc": "20904:139:13",
															"nodeType": "YulAssignment",
															"src": "20904:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21038:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21038:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20912:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20912:124:13"
																},
																"nativeSrc": "20912:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20912:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20904:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20904:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20631:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20782:9:13",
														"nodeType": "YulTypedName",
														"src": "20782:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20797:4:13",
														"nodeType": "YulTypedName",
														"src": "20797:4:13",
														"type": ""
													}
												],
												"src": "20631:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient owner balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061018c575f3560e01c80635f3e849f116100dc57806395d89b4111610095578063c74952331161006f578063c74952331461045c578063d547741f1461047a578063dd62ed3e14610496578063f2fde38b146104c65761018c565b806395d89b41146103f0578063a217fddf1461040e578063a9059cbb1461042c5761018c565b80635f3e849f1461034257806370a082311461035e578063715018a61461038e5780638456cb59146103985780638da5cb5b146103a257806391d14854146103c05761018c565b8063248a9ca31161014957806336568abe1161012357806336568abe146102e25780633f4ba83a146102fe57806359563cdf146103085780635c975abb146103245761018c565b8063248a9ca3146102785780632f2ff15d146102a8578063313ce567146102c45761018c565b806301ffc9a71461019057806306fdde03146101c0578063095ea7b3146101de5780630ceb382e1461020e57806318160ddd1461022a57806323b872dd14610248575b5f5ffd5b6101aa60048036038101906101a59190611a79565b6104e2565b6040516101b79190611abe565b60405180910390f35b6101c861055b565b6040516101d59190611b47565b60405180910390f35b6101f860048036038101906101f39190611bf4565b6105eb565b6040516102059190611abe565b60405180910390f35b61022860048036038101906102239190611c93565b61060d565b005b6102326107be565b60405161023f9190611d13565b60405180910390f35b610262600480360381019061025d9190611d2c565b6107c7565b60405161026f9190611abe565b60405180910390f35b610292600480360381019061028d9190611daf565b6107f5565b60405161029f9190611de9565b60405180910390f35b6102c260048036038101906102bd9190611e02565b610812565b005b6102cc610834565b6040516102d99190611e5b565b60405180910390f35b6102fc60048036038101906102f79190611e02565b61083c565b005b6103066108b7565b005b610322600480360381019061031d9190611e74565b6108c9565b005b61032c6109cf565b6040516103399190611abe565b60405180910390f35b61035c60048036038101906103579190611d2c565b6109e4565b005b61037860048036038101906103739190611ed1565b610b84565b6040516103859190611d13565b60405180910390f35b610396610bc9565b005b6103a0610bdc565b005b6103aa610bee565b6040516103b79190611f0b565b60405180910390f35b6103da60048036038101906103d59190611e02565b610c16565b6040516103e79190611abe565b60405180910390f35b6103f8610c7a565b6040516104059190611b47565b60405180910390f35b610416610d0a565b6040516104239190611de9565b60405180910390f35b61044660048036038101906104419190611bf4565b610d10565b6040516104539190611abe565b60405180910390f35b610464610d32565b6040516104719190611de9565b60405180910390f35b610494600480360381019061048f9190611e02565b610d56565b005b6104b060048036038101906104ab9190611f24565b610d78565b6040516104bd9190611d13565b60405180910390f35b6104e060048036038101906104db9190611ed1565b610dfa565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610554575061055382610e7e565b5b9050919050565b60606003805461056a90611f8f565b80601f016020809104026020016040519081016040528092919081815260200182805461059690611f8f565b80156105e15780601f106105b8576101008083540402835291602001916105e1565b820191905f5260205f20905b8154815290600101906020018083116105c457829003601f168201915b5050505050905090565b5f5f6105f5610ee7565b9050610602818585610eee565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5361063781610f00565b61063f610f14565b610647610f5e565b845f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90612009565b60405180910390fd5b5f85116106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef90612071565b60405180910390fd5b84610709610704610bee565b610b84565b101561074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906120d9565b60405180910390fd5b61075c610755610bee565b8787610fad565b8573ffffffffffffffffffffffffffffffffffffffff167fb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d8686866040516107a693929190612131565b60405180910390a2506107b761109d565b5050505050565b5f600254905090565b5f5f6107d1610ee7565b90506107de8582856110a7565b6107e9858585610fad565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b61081b826107f5565b61082481610f00565b61082e838361113a565b50505050565b5f6012905090565b610844610ee7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108a8576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108b28282611224565b505050565b6108bf61130e565b6108c7611395565b565b6108d1610f14565b6108d9610f5e565b5f831161091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290612071565b60405180910390fd5b8261092533610b84565b1015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906121ab565b60405180910390fd5b61097033846113f6565b3373ffffffffffffffffffffffffffffffffffffffff167f1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e281137298484846040516109ba93929190612131565b60405180910390a26109ca61109d565b505050565b5f60065f9054906101000a900460ff16905090565b6109ec61130e565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290612009565b60405180910390fd5b5f8211610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490612071565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610ad89291906121c9565b6020604051808303815f875af1158015610af4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b18919061221a565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe684604051610b769190611d13565b60405180910390a350505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610bd161130e565b610bda5f611475565b565b610be461130e565b610bec611538565b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610c8990611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb590611f8f565b8015610d005780601f10610cd757610100808354040283529160200191610d00565b820191905f5260205f20905b815481529060010190602001808311610ce357829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610d1a610ee7565b9050610d27818585610fad565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5381565b610d5f826107f5565b610d6881610f00565b610d728383611224565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e0261130e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e72575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e699190611f0b565b60405180910390fd5b610e7b81611475565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610efb838383600161159a565b505050565b610f1181610f0c610ee7565b611769565b50565b610f1c6109cf565b15610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f539061228f565b60405180910390fd5b565b600260075403610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a906122f7565b60405180910390fd5b6002600781905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110149190611f0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361108d575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110849190611f0b565b60405180910390fd5b6110988383836117ba565b505050565b6001600781905550565b5f6110b28484610d78565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111345781811015611125578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161111c93929190612315565b60405180910390fd5b61113384848484035f61159a565b5b50505050565b5f6111458383610c16565b61121a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506111b7610ee7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061121e565b5f90505b92915050565b5f61122f8383610c16565b15611304575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112a1610ee7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611308565b5f90505b92915050565b611316610ee7565b73ffffffffffffffffffffffffffffffffffffffff16611334610bee565b73ffffffffffffffffffffffffffffffffffffffff161461139357611357610ee7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161138a9190611f0b565b60405180910390fd5b565b61139d6119d3565b5f60065f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113df610ee7565b6040516113ec9190611f0b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611466575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161145d9190611f0b565b60405180910390fd5b611471825f836117ba565b5050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611540610f14565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611583610ee7565b6040516115909190611f0b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361160a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116019190611f0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361167a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016116719190611f0b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611763578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161175a9190611d13565b60405180910390a35b50505050565b6117738282610c16565b6117b65780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117ad92919061234a565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361180a578060025f8282546117fe919061239e565b925050819055506118d8565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611893578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161188a93929190612315565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191f578060025f8282540392505081905550611969565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c69190611d13565b60405180910390a3505050565b6119db6109cf565b611a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a119061241b565b60405180910390fd5b565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a5881611a24565b8114611a62575f5ffd5b50565b5f81359050611a7381611a4f565b92915050565b5f60208284031215611a8e57611a8d611a1c565b5b5f611a9b84828501611a65565b91505092915050565b5f8115159050919050565b611ab881611aa4565b82525050565b5f602082019050611ad15f830184611aaf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b1982611ad7565b611b238185611ae1565b9350611b33818560208601611af1565b611b3c81611aff565b840191505092915050565b5f6020820190508181035f830152611b5f8184611b0f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b9082611b67565b9050919050565b611ba081611b86565b8114611baa575f5ffd5b50565b5f81359050611bbb81611b97565b92915050565b5f819050919050565b611bd381611bc1565b8114611bdd575f5ffd5b50565b5f81359050611bee81611bca565b92915050565b5f5f60408385031215611c0a57611c09611a1c565b5b5f611c1785828601611bad565b9250506020611c2885828601611be0565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611c5357611c52611c32565b5b8235905067ffffffffffffffff811115611c7057611c6f611c36565b5b602083019150836001820283011115611c8c57611c8b611c3a565b5b9250929050565b5f5f5f5f60608587031215611cab57611caa611a1c565b5b5f611cb887828801611bad565b9450506020611cc987828801611be0565b935050604085013567ffffffffffffffff811115611cea57611ce9611a20565b5b611cf687828801611c3e565b925092505092959194509250565b611d0d81611bc1565b82525050565b5f602082019050611d265f830184611d04565b92915050565b5f5f5f60608486031215611d4357611d42611a1c565b5b5f611d5086828701611bad565b9350506020611d6186828701611bad565b9250506040611d7286828701611be0565b9150509250925092565b5f819050919050565b611d8e81611d7c565b8114611d98575f5ffd5b50565b5f81359050611da981611d85565b92915050565b5f60208284031215611dc457611dc3611a1c565b5b5f611dd184828501611d9b565b91505092915050565b611de381611d7c565b82525050565b5f602082019050611dfc5f830184611dda565b92915050565b5f5f60408385031215611e1857611e17611a1c565b5b5f611e2585828601611d9b565b9250506020611e3685828601611bad565b9150509250929050565b5f60ff82169050919050565b611e5581611e40565b82525050565b5f602082019050611e6e5f830184611e4c565b92915050565b5f5f5f60408486031215611e8b57611e8a611a1c565b5b5f611e9886828701611be0565b935050602084013567ffffffffffffffff811115611eb957611eb8611a20565b5b611ec586828701611c3e565b92509250509250925092565b5f60208284031215611ee657611ee5611a1c565b5b5f611ef384828501611bad565b91505092915050565b611f0581611b86565b82525050565b5f602082019050611f1e5f830184611efc565b92915050565b5f5f60408385031215611f3a57611f39611a1c565b5b5f611f4785828601611bad565b9250506020611f5885828601611bad565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fa657607f821691505b602082108103611fb957611fb8611f62565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611ff3600f83611ae1565b9150611ffe82611fbf565b602082019050919050565b5f6020820190508181035f83015261202081611fe7565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61205b602083611ae1565b915061206682612027565b602082019050919050565b5f6020820190508181035f8301526120888161204f565b9050919050565b7f496e73756666696369656e74206f776e65722062616c616e63650000000000005f82015250565b5f6120c3601a83611ae1565b91506120ce8261208f565b602082019050919050565b5f6020820190508181035f8301526120f0816120b7565b9050919050565b828183375f83830152505050565b5f6121108385611ae1565b935061211d8385846120f7565b61212683611aff565b840190509392505050565b5f6040820190506121445f830186611d04565b8181036020830152612157818486612105565b9050949350505050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612195601483611ae1565b91506121a082612161565b602082019050919050565b5f6020820190508181035f8301526121c281612189565b9050919050565b5f6040820190506121dc5f830185611efc565b6121e96020830184611d04565b9392505050565b6121f981611aa4565b8114612203575f5ffd5b50565b5f81519050612214816121f0565b92915050565b5f6020828403121561222f5761222e611a1c565b5b5f61223c84828501612206565b91505092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612279601083611ae1565b915061228482612245565b602082019050919050565b5f6020820190508181035f8301526122a68161226d565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6122e1601f83611ae1565b91506122ec826122ad565b602082019050919050565b5f6020820190508181035f83015261230e816122d5565b9050919050565b5f6060820190506123285f830186611efc565b6123356020830185611d04565b6123426040830184611d04565b949350505050565b5f60408201905061235d5f830185611efc565b61236a6020830184611dda565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123a882611bc1565b91506123b383611bc1565b92508282019050808211156123cb576123ca612371565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612405601483611ae1565b9150612410826123d1565b602082019050919050565b5f6020820190508181035f830152612432816123f9565b905091905056fea26469706673582212200f78f591775794a628bee3e1cf0a7784c40da85a1e11160aff6e10aaa25e081464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3E849F GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7495233 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC7495233 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C6 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x42C JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C0 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x59563CDF EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x324 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xCEB382E EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x248 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH2 0xBC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH2 0xBDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0xDFA JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x554 JUMPI POP PUSH2 0x553 DUP3 PUSH2 0xE7E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x56A SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x596 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5F5 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x602 DUP2 DUP6 DUP6 PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 PUSH2 0x637 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x63F PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x647 PUSH2 0xF5E JUMP JUMPDEST DUP5 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x709 PUSH2 0x704 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x741 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75C PUSH2 0x755 PUSH2 0xBEE JUMP JUMPDEST DUP8 DUP8 PUSH2 0xFAD JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x7B7 PUSH2 0x109D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x7DE DUP6 DUP3 DUP6 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x7E9 DUP6 DUP6 DUP6 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x824 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x82E DUP4 DUP4 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x844 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x130E JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x1395 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xF5E JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x925 CALLER PUSH2 0xB84 JUMP JUMPDEST LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x970 CALLER DUP5 PUSH2 0x13F6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9CA PUSH2 0x109D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x130E JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x221A JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD1 PUSH2 0x130E JUMP JUMPDEST PUSH2 0xBDA PUSH0 PUSH2 0x1475 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0x130E JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x1538 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC89 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB5 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD1A PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP PUSH2 0xD27 DUP2 DUP6 DUP6 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP2 JUMP JUMPDEST PUSH2 0xD5F DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0xD72 DUP4 DUP4 PUSH2 0x1224 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE02 PUSH2 0x130E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7B DUP2 PUSH2 0x1475 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEFB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x159A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xF0C PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x1769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF1C PUSH2 0x9CF JUMP JUMPDEST ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x228F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1098 DUP4 DUP4 DUP4 PUSH2 0x17BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10B2 DUP5 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1134 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1125 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1133 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x159A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1145 DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x121A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11B7 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x121E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x122F DUP4 DUP4 PUSH2 0xC16 JUMP JUMPDEST ISZERO PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12A1 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1308 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1316 PUSH2 0xEE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1334 PUSH2 0xBEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1393 JUMPI PUSH2 0x1357 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x139D PUSH2 0x19D3 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13DF PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1466 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1471 DUP3 PUSH0 DUP4 PUSH2 0x17BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1540 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1583 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x167A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1763 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1773 DUP3 DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x17B6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AD SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x239E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1893 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1969 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x19DB PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x1A1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A11 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A58 DUP2 PUSH2 0x1A24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A73 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A8E JUMPI PUSH2 0x1A8D PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9B DUP5 DUP3 DUP6 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB8 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B19 DUP3 PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0x1B23 DUP2 DUP6 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1B3C DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5F DUP2 DUP5 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B90 DUP3 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA0 DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBB DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BEE DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C17 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C28 DUP6 DUP3 DUP7 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1C36 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x1C3A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CC9 DUP8 DUP3 DUP9 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEA JUMPI PUSH2 0x1CE9 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF6 DUP8 DUP3 DUP9 ADD PUSH2 0x1C3E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D0D DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D26 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D50 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D61 DUP7 DUP3 DUP8 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D72 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8E DUP2 PUSH2 0x1D7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1D98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DA9 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DD1 DUP5 DUP3 DUP6 ADD PUSH2 0x1D9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE3 DUP2 PUSH2 0x1D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DFC PUSH0 DUP4 ADD DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E18 JUMPI PUSH2 0x1E17 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E25 DUP6 DUP3 DUP7 ADD PUSH2 0x1D9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E36 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E98 DUP7 DUP3 DUP8 ADD PUSH2 0x1BE0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x1A20 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C3E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE6 JUMPI PUSH2 0x1EE5 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF3 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1E PUSH0 DUP4 ADD DUP5 PUSH2 0x1EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3A JUMPI PUSH2 0x1F39 PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F47 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F58 DUP6 DUP3 DUP7 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1F62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF3 PUSH1 0xF DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFE DUP3 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x205B PUSH1 0x20 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP3 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F776E65722062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C3 PUSH1 0x1A DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CE DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20F0 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2110 DUP4 DUP6 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 POP PUSH2 0x211D DUP4 DUP6 DUP5 PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x2126 DUP4 PUSH2 0x1AFF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2144 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D04 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2157 DUP2 DUP5 DUP7 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2195 PUSH1 0x14 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A0 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C2 DUP2 PUSH2 0x2189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21DC PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x21E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21F9 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2203 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2214 DUP2 PUSH2 0x21F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x1A1C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x223C DUP5 DUP3 DUP6 ADD PUSH2 0x2206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2279 PUSH1 0x10 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2284 DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A6 DUP2 PUSH2 0x226D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E1 PUSH1 0x1F DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x22EC DUP3 PUSH2 0x22AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230E DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235D PUSH0 DUP4 ADD DUP6 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x236A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23A8 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B3 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x2371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2405 PUSH1 0x14 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2410 DUP3 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2432 DUP2 PUSH2 0x23F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH25 0xF591775794A628BEE3E1CF0A7784C40DA85A1E11160AFF6E10 0xAA LOG2 MCOPY ADDMOD EQ PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "348:2689:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:434:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2940:91:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2459:65:12;;;:::i;:::-;;1864:450;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2586:299:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;2355:61:12;;;:::i;:::-;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:74:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:6:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;1383:434:12:-;491:30;2473:16:0;2484:4;2473:10;:16::i;:::-;1239:19:4::1;:17;:19::i;:::-;2261:21:5::2;:19;:21::i;:::-;1568:4:12::3;1284:1;1265:21;;:7;:21;;::::0;1257:49:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;1601:1:::4;1592:6;:10;1584:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1679:6;1657:18;1667:7;:5;:7::i;:::-;1657:9;:18::i;:::-;:28;;1649:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1727:32;1737:7;:5;:7::i;:::-;1746:4;1752:6;1727:9;:32::i;:::-;1789:4;1774:36;;;1795:6;1803;;1774:36;;;;;;;;:::i;:::-;;;;;;;;2292:1:5::3;2303:20:::2;:18;:20::i;:::-;1383:434:12::0;;;;;:::o;2803:97:6:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2940:91:12:-;2998:5;3022:2;3015:9;;2940:91;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;2459:65:12:-;1531:13:2;:11;:13::i;:::-;2507:10:12::1;:8;:10::i;:::-;2459:65::o:0;1864:450::-;1239:19:4;:17;:19::i;:::-;2261:21:5::1;:19;:21::i;:::-;2096:1:12::2;2087:6;:10;2079:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2177:6;2152:21;2162:10;2152:9;:21::i;:::-;:31;;2144:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:25;2225:10;2237:6;2219:5;:25::i;:::-;2271:10;2259:48;;;2283:6;2291:15;;2259:48;;;;;;;;:::i;:::-;;;;;;;;2303:20:5::1;:18;:20::i;:::-;1864:450:12::0;;;:::o;1615:84:4:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2586:299:12:-;1531:13:2;:11;:13::i;:::-;2716:2:12::1;1284:1;1265:21;;:7;:21;;::::0;1257:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2747:1:::2;2738:6;:10;2730:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2802:5;2795:22;;;2818:2;2822:6;2795:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2867:2;2844:34;;2860:5;2844:34;;;2871:6;2844:34;;;;;;:::i;:::-;;;;;;;;1554:1:2::1;2586:299:12::0;;;:::o;2933:116:6:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2355:61:12:-;1531:13:2;:11;:13::i;:::-;2401:8:12::1;:6;:8::i;:::-;2355:61::o:0;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:6:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3244:178:6:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;447:74:12:-;491:30;447:74;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3455:140:6:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8630:128:6:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;1767:106:4:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5297:300:6:-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;10319:476:6:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:4:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;7888:206:6:-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:4:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9605:432:6:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;5912:1107:6:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;1945:106:4:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;88:117:13:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:117::-;4205:1;4202;4195:12;4219:117;4328:1;4325;4318:12;4342:117;4451:1;4448;4441:12;4479:553;4537:8;4547:6;4597:3;4590:4;4582:6;4578:17;4574:27;4564:122;;4605:79;;:::i;:::-;4564:122;4718:6;4705:20;4695:30;;4748:18;4740:6;4737:30;4734:117;;;4770:79;;:::i;:::-;4734:117;4884:4;4876:6;4872:17;4860:29;;4938:3;4930:4;4922:6;4918:17;4908:8;4904:32;4901:41;4898:128;;;4945:79;;:::i;:::-;4898:128;4479:553;;;;;:::o;5038:819::-;5127:6;5135;5143;5151;5200:2;5188:9;5179:7;5175:23;5171:32;5168:119;;;5206:79;;:::i;:::-;5168:119;5326:1;5351:53;5396:7;5387:6;5376:9;5372:22;5351:53;:::i;:::-;5341:63;;5297:117;5453:2;5479:53;5524:7;5515:6;5504:9;5500:22;5479:53;:::i;:::-;5469:63;;5424:118;5609:2;5598:9;5594:18;5581:32;5640:18;5632:6;5629:30;5626:117;;;5662:79;;:::i;:::-;5626:117;5775:65;5832:7;5823:6;5812:9;5808:22;5775:65;:::i;:::-;5757:83;;;;5552:298;5038:819;;;;;;;:::o;5863:118::-;5950:24;5968:5;5950:24;:::i;:::-;5945:3;5938:37;5863:118;;:::o;5987:222::-;6080:4;6118:2;6107:9;6103:18;6095:26;;6131:71;6199:1;6188:9;6184:17;6175:6;6131:71;:::i;:::-;5987:222;;;;:::o;6215:619::-;6292:6;6300;6308;6357:2;6345:9;6336:7;6332:23;6328:32;6325:119;;;6363:79;;:::i;:::-;6325:119;6483:1;6508:53;6553:7;6544:6;6533:9;6529:22;6508:53;:::i;:::-;6498:63;;6454:117;6610:2;6636:53;6681:7;6672:6;6661:9;6657:22;6636:53;:::i;:::-;6626:63;;6581:118;6738:2;6764:53;6809:7;6800:6;6789:9;6785:22;6764:53;:::i;:::-;6754:63;;6709:118;6215:619;;;;;:::o;6840:77::-;6877:7;6906:5;6895:16;;6840:77;;;:::o;6923:122::-;6996:24;7014:5;6996:24;:::i;:::-;6989:5;6986:35;6976:63;;7035:1;7032;7025:12;6976:63;6923:122;:::o;7051:139::-;7097:5;7135:6;7122:20;7113:29;;7151:33;7178:5;7151:33;:::i;:::-;7051:139;;;;:::o;7196:329::-;7255:6;7304:2;7292:9;7283:7;7279:23;7275:32;7272:119;;;7310:79;;:::i;:::-;7272:119;7430:1;7455:53;7500:7;7491:6;7480:9;7476:22;7455:53;:::i;:::-;7445:63;;7401:117;7196:329;;;;:::o;7531:118::-;7618:24;7636:5;7618:24;:::i;:::-;7613:3;7606:37;7531:118;;:::o;7655:222::-;7748:4;7786:2;7775:9;7771:18;7763:26;;7799:71;7867:1;7856:9;7852:17;7843:6;7799:71;:::i;:::-;7655:222;;;;:::o;7883:474::-;7951:6;7959;8008:2;7996:9;7987:7;7983:23;7979:32;7976:119;;;8014:79;;:::i;:::-;7976:119;8134:1;8159:53;8204:7;8195:6;8184:9;8180:22;8159:53;:::i;:::-;8149:63;;8105:117;8261:2;8287:53;8332:7;8323:6;8312:9;8308:22;8287:53;:::i;:::-;8277:63;;8232:118;7883:474;;;;;:::o;8363:86::-;8398:7;8438:4;8431:5;8427:16;8416:27;;8363:86;;;:::o;8455:112::-;8538:22;8554:5;8538:22;:::i;:::-;8533:3;8526:35;8455:112;;:::o;8573:214::-;8662:4;8700:2;8689:9;8685:18;8677:26;;8713:67;8777:1;8766:9;8762:17;8753:6;8713:67;:::i;:::-;8573:214;;;;:::o;8793:674::-;8873:6;8881;8889;8938:2;8926:9;8917:7;8913:23;8909:32;8906:119;;;8944:79;;:::i;:::-;8906:119;9064:1;9089:53;9134:7;9125:6;9114:9;9110:22;9089:53;:::i;:::-;9079:63;;9035:117;9219:2;9208:9;9204:18;9191:32;9250:18;9242:6;9239:30;9236:117;;;9272:79;;:::i;:::-;9236:117;9385:65;9442:7;9433:6;9422:9;9418:22;9385:65;:::i;:::-;9367:83;;;;9162:298;8793:674;;;;;:::o;9473:329::-;9532:6;9581:2;9569:9;9560:7;9556:23;9552:32;9549:119;;;9587:79;;:::i;:::-;9549:119;9707:1;9732:53;9777:7;9768:6;9757:9;9753:22;9732:53;:::i;:::-;9722:63;;9678:117;9473:329;;;;:::o;9808:118::-;9895:24;9913:5;9895:24;:::i;:::-;9890:3;9883:37;9808:118;;:::o;9932:222::-;10025:4;10063:2;10052:9;10048:18;10040:26;;10076:71;10144:1;10133:9;10129:17;10120:6;10076:71;:::i;:::-;9932:222;;;;:::o;10160:474::-;10228:6;10236;10285:2;10273:9;10264:7;10260:23;10256:32;10253:119;;;10291:79;;:::i;:::-;10253:119;10411:1;10436:53;10481:7;10472:6;10461:9;10457:22;10436:53;:::i;:::-;10426:63;;10382:117;10538:2;10564:53;10609:7;10600:6;10589:9;10585:22;10564:53;:::i;:::-;10554:63;;10509:118;10160:474;;;;;:::o;10640:180::-;10688:77;10685:1;10678:88;10785:4;10782:1;10775:15;10809:4;10806:1;10799:15;10826:320;10870:6;10907:1;10901:4;10897:12;10887:22;;10954:1;10948:4;10944:12;10975:18;10965:81;;11031:4;11023:6;11019:17;11009:27;;10965:81;11093:2;11085:6;11082:14;11062:18;11059:38;11056:84;;11112:18;;:::i;:::-;11056:84;10877:269;10826:320;;;:::o;11152:165::-;11292:17;11288:1;11280:6;11276:14;11269:41;11152:165;:::o;11323:366::-;11465:3;11486:67;11550:2;11545:3;11486:67;:::i;:::-;11479:74;;11562:93;11651:3;11562:93;:::i;:::-;11680:2;11675:3;11671:12;11664:19;;11323:366;;;:::o;11695:419::-;11861:4;11899:2;11888:9;11884:18;11876:26;;11948:9;11942:4;11938:20;11934:1;11923:9;11919:17;11912:47;11976:131;12102:4;11976:131;:::i;:::-;11968:139;;11695:419;;;:::o;12120:182::-;12260:34;12256:1;12248:6;12244:14;12237:58;12120:182;:::o;12308:366::-;12450:3;12471:67;12535:2;12530:3;12471:67;:::i;:::-;12464:74;;12547:93;12636:3;12547:93;:::i;:::-;12665:2;12660:3;12656:12;12649:19;;12308:366;;;:::o;12680:419::-;12846:4;12884:2;12873:9;12869:18;12861:26;;12933:9;12927:4;12923:20;12919:1;12908:9;12904:17;12897:47;12961:131;13087:4;12961:131;:::i;:::-;12953:139;;12680:419;;;:::o;13105:176::-;13245:28;13241:1;13233:6;13229:14;13222:52;13105:176;:::o;13287:366::-;13429:3;13450:67;13514:2;13509:3;13450:67;:::i;:::-;13443:74;;13526:93;13615:3;13526:93;:::i;:::-;13644:2;13639:3;13635:12;13628:19;;13287:366;;;:::o;13659:419::-;13825:4;13863:2;13852:9;13848:18;13840:26;;13912:9;13906:4;13902:20;13898:1;13887:9;13883:17;13876:47;13940:131;14066:4;13940:131;:::i;:::-;13932:139;;13659:419;;;:::o;14084:148::-;14182:6;14177:3;14172;14159:30;14223:1;14214:6;14209:3;14205:16;14198:27;14084:148;;;:::o;14262:317::-;14360:3;14381:71;14445:6;14440:3;14381:71;:::i;:::-;14374:78;;14462:56;14511:6;14506:3;14499:5;14462:56;:::i;:::-;14543:29;14565:6;14543:29;:::i;:::-;14538:3;14534:39;14527:46;;14262:317;;;;;:::o;14585:443::-;14736:4;14774:2;14763:9;14759:18;14751:26;;14787:71;14855:1;14844:9;14840:17;14831:6;14787:71;:::i;:::-;14905:9;14899:4;14895:20;14890:2;14879:9;14875:18;14868:48;14933:88;15016:4;15007:6;14999;14933:88;:::i;:::-;14925:96;;14585:443;;;;;;:::o;15034:170::-;15174:22;15170:1;15162:6;15158:14;15151:46;15034:170;:::o;15210:366::-;15352:3;15373:67;15437:2;15432:3;15373:67;:::i;:::-;15366:74;;15449:93;15538:3;15449:93;:::i;:::-;15567:2;15562:3;15558:12;15551:19;;15210:366;;;:::o;15582:419::-;15748:4;15786:2;15775:9;15771:18;15763:26;;15835:9;15829:4;15825:20;15821:1;15810:9;15806:17;15799:47;15863:131;15989:4;15863:131;:::i;:::-;15855:139;;15582:419;;;:::o;16007:332::-;16128:4;16166:2;16155:9;16151:18;16143:26;;16179:71;16247:1;16236:9;16232:17;16223:6;16179:71;:::i;:::-;16260:72;16328:2;16317:9;16313:18;16304:6;16260:72;:::i;:::-;16007:332;;;;;:::o;16345:116::-;16415:21;16430:5;16415:21;:::i;:::-;16408:5;16405:32;16395:60;;16451:1;16448;16441:12;16395:60;16345:116;:::o;16467:137::-;16521:5;16552:6;16546:13;16537:22;;16568:30;16592:5;16568:30;:::i;:::-;16467:137;;;;:::o;16610:345::-;16677:6;16726:2;16714:9;16705:7;16701:23;16697:32;16694:119;;;16732:79;;:::i;:::-;16694:119;16852:1;16877:61;16930:7;16921:6;16910:9;16906:22;16877:61;:::i;:::-;16867:71;;16823:125;16610:345;;;;:::o;16961:166::-;17101:18;17097:1;17089:6;17085:14;17078:42;16961:166;:::o;17133:366::-;17275:3;17296:67;17360:2;17355:3;17296:67;:::i;:::-;17289:74;;17372:93;17461:3;17372:93;:::i;:::-;17490:2;17485:3;17481:12;17474:19;;17133:366;;;:::o;17505:419::-;17671:4;17709:2;17698:9;17694:18;17686:26;;17758:9;17752:4;17748:20;17744:1;17733:9;17729:17;17722:47;17786:131;17912:4;17786:131;:::i;:::-;17778:139;;17505:419;;;:::o;17930:181::-;18070:33;18066:1;18058:6;18054:14;18047:57;17930:181;:::o;18117:366::-;18259:3;18280:67;18344:2;18339:3;18280:67;:::i;:::-;18273:74;;18356:93;18445:3;18356:93;:::i;:::-;18474:2;18469:3;18465:12;18458:19;;18117:366;;;:::o;18489:419::-;18655:4;18693:2;18682:9;18678:18;18670:26;;18742:9;18736:4;18732:20;18728:1;18717:9;18713:17;18706:47;18770:131;18896:4;18770:131;:::i;:::-;18762:139;;18489:419;;;:::o;18914:442::-;19063:4;19101:2;19090:9;19086:18;19078:26;;19114:71;19182:1;19171:9;19167:17;19158:6;19114:71;:::i;:::-;19195:72;19263:2;19252:9;19248:18;19239:6;19195:72;:::i;:::-;19277;19345:2;19334:9;19330:18;19321:6;19277:72;:::i;:::-;18914:442;;;;;;:::o;19362:332::-;19483:4;19521:2;19510:9;19506:18;19498:26;;19534:71;19602:1;19591:9;19587:17;19578:6;19534:71;:::i;:::-;19615:72;19683:2;19672:9;19668:18;19659:6;19615:72;:::i;:::-;19362:332;;;;;:::o;19700:180::-;19748:77;19745:1;19738:88;19845:4;19842:1;19835:15;19869:4;19866:1;19859:15;19886:191;19926:3;19945:20;19963:1;19945:20;:::i;:::-;19940:25;;19979:20;19997:1;19979:20;:::i;:::-;19974:25;;20022:1;20019;20015:9;20008:16;;20043:3;20040:1;20037:10;20034:36;;;20050:18;;:::i;:::-;20034:36;19886:191;;;;:::o;20083:170::-;20223:22;20219:1;20211:6;20207:14;20200:46;20083:170;:::o;20259:366::-;20401:3;20422:67;20486:2;20481:3;20422:67;:::i;:::-;20415:74;;20498:93;20587:3;20498:93;:::i;:::-;20616:2;20611:3;20607:12;20600:19;;20259:366;;;:::o;20631:419::-;20797:4;20835:2;20824:9;20820:18;20812:26;;20884:9;20878:4;20874:20;20870:1;20859:9;20855:17;20848:47;20912:131;21038:4;20912:131;:::i;:::-;20904:139;;20631:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1865400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "396",
								"TASK_MANAGER_ROLE()": "369",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "428",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3254",
								"name()": "infinite",
								"owner()": "2626",
								"pause()": "infinite",
								"paused()": "2584",
								"recoverTokens(address,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardTokens(address,uint256,string)": "infinite",
								"spendTokens(uint256,string)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 876,
									"end": 1158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 965,
									"end": 977,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "4C6F636B6E657373546F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "4C4E540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 993,
									"end": 1044,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 999,
									"end": 1011,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1033,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1033,
									"end": 1041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1043,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1033,
									"end": 1043,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1029,
									"end": 1031,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1029,
									"end": 1043,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1029,
									"end": 1043,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1026,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "3B9ACA00"
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1013,
									"end": 1043,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1013,
									"end": 1043,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 993,
									"end": 998,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 993,
									"end": 998,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 993,
									"end": 998,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1044,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1044,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1044,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1044,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 993,
									"end": 1044,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2241,
									"end": 2245,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1065,
									"end": 1083,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1065,
									"end": 1083,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1097,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1064,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1054,
									"end": 1064,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1054,
									"end": 1064,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1098,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1098,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 491,
									"end": 521,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
								},
								{
									"begin": 1138,
									"end": 1150,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1108,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1151,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1151,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 876,
									"end": 1158,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2940,
									"end": 3031,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2940,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3003,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3022,
									"end": 3024,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3015,
									"end": 3024,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3015,
									"end": 3024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2940,
									"end": 3031,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2940,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 3037,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f78f591775794a628bee3e1cf0a7784c40da85a1e11160aff6e10aaa25e081464736f6c634300081e0033",
									".code": [
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "5F3E849F"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "C7495233"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "C7495233"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "5F3E849F"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "59563CDF"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "CEB382E"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 3037,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1383,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1383,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2940,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2940,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2459,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1864,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1864,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2586,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2586,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 2355,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 447,
											"end": 521,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 447,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 447,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 12,
											"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1572,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1285,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1272,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1257,
											"end": 1306,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1602,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1598,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1592,
											"end": 1602,
											"modifierDepth": 4,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 1584,
											"end": 1639,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1584,
											"end": 1639,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1675,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1667,
											"end": 1674,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 1667,
											"end": 1672,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1667,
											"end": 1674,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1674,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 1667,
											"end": 1674,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1666,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1657,
											"end": 1675,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1675,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1657,
											"end": 1675,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1685,
											"modifierDepth": 4,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1685,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1649,
											"end": 1716,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1649,
											"end": 1716,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1759,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1737,
											"end": 1744,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1737,
											"end": 1742,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1737,
											"end": 1744,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1744,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1737,
											"end": 1744,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1750,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1758,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1736,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1727,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1759,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1727,
											"end": 1759,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1789,
											"end": 1793,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "B969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D"
										},
										{
											"begin": 1795,
											"end": 1801,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1809,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1809,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1774,
											"end": 1810,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1774,
											"end": 1810,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 3,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 3031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2459,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2507,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 2507,
											"end": 2517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2507,
											"end": 2517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2507,
											"end": 2517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2459,
											"end": 2524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2093,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2097,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2079,
											"end": 2134,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2079,
											"end": 2134,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2183,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2173,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2162,
											"end": 2172,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2161,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2152,
											"end": 2173,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2173,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2152,
											"end": 2173,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2183,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2183,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2144,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2208,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2225,
											"end": 2235,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2243,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2224,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2219,
											"end": 2244,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2281,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729"
										},
										{
											"begin": 2283,
											"end": 2289,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2306,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2306,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2259,
											"end": 2307,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2307,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1284,
											"end": 1285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1257,
											"end": 1306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1257,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2744,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2748,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2730,
											"end": 2785,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2730,
											"end": 2785,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2807,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2817,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2818,
											"end": 2820,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2822,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2795,
											"end": 2829,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2795,
											"end": 2829,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2829,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2869,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6"
										},
										{
											"begin": 2871,
											"end": 2877,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2844,
											"end": 2878,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 2355,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2401,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2401,
											"end": 2409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2401,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 521,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 12,
											"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
										},
										{
											"begin": 447,
											"end": 521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 447,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4213,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4096,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4336,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 4219,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4330,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4459,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 4342,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4545,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 4564,
											"end": 4686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4605,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4605,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4684,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4605,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4686,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 4564,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4725,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4740,
											"end": 4746,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4737,
											"end": 4767,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4851,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 4734,
											"end": 4851,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 4770,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 4770,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4849,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 4770,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4851,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 4734,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4872,
											"end": 4889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4941,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4930,
											"end": 4934,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 4935,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 5026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 4898,
											"end": 5026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4945,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4945,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 4945,
											"end": 5024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4945,
											"end": 5024,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4945,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 5026,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 4898,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5197,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5175,
											"end": 5198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5203,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5287,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5168,
											"end": 5287,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5206,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 5206,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5285,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5206,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5287,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5168,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 5396,
											"end": 5403,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 5351,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5404,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 5351,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5297,
											"end": 5414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 5479,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5532,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5479,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5469,
											"end": 5532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5424,
											"end": 5542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5611,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5607,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5594,
											"end": 5612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5581,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5629,
											"end": 5659,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 5662,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5662,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5741,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 5662,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5832,
											"end": 5839,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 5775,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5757,
											"end": 5840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5757,
											"end": 5840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5757,
											"end": 5840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5757,
											"end": 5840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5552,
											"end": 5850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5981,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5863,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 5950,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5974,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 5950,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5863,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6080,
											"end": 6084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6095,
											"end": 6121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6197,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6181,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6131,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6202,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6131,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6359,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6360,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6444,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 6325,
											"end": 6444,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 6363,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 6363,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6442,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 6363,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6444,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 6325,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 6553,
											"end": 6560,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6542,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6529,
											"end": 6551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6508,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 6508,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6508,
											"end": 6561,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 6508,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6561,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6571,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 6681,
											"end": 6688,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6661,
											"end": 6670,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6657,
											"end": 6679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 6636,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6626,
											"end": 6689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6740,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6764,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6809,
											"end": 6816,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6764,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 6764,
											"end": 6817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6764,
											"end": 6817,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6764,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6754,
											"end": 6817,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6754,
											"end": 6817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6709,
											"end": 6827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6917,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 6840,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6877,
											"end": 6884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6911,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6917,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 6996,
											"end": 7020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 6996,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6989,
											"end": 6994,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7021,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7037,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 6976,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7122,
											"end": 7142,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7178,
											"end": 7183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 7151,
											"end": 7184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7184,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7151,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7304,
											"end": 7306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7275,
											"end": 7307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7391,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 7272,
											"end": 7391,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7310,
											"end": 7389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7391,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 7272,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 7500,
											"end": 7507,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 7455,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7508,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 7455,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7649,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 7531,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7618,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 7636,
											"end": 7641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7618,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 7618,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7618,
											"end": 7642,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 7618,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7606,
											"end": 7643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7775,
											"end": 7784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7865,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 7799,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 7799,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7655,
											"end": 7877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7951,
											"end": 7957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7996,
											"end": 8005,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7987,
											"end": 7994,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7983,
											"end": 8006,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7979,
											"end": 8011,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7976,
											"end": 8095,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7976,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 7976,
											"end": 8095,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8014,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8014,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 8014,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8014,
											"end": 8093,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8014,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7976,
											"end": 8095,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 7976,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 8204,
											"end": 8211,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8180,
											"end": 8202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 8159,
											"end": 8212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8212,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 8159,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8149,
											"end": 8212,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8149,
											"end": 8212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8105,
											"end": 8222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8263,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8287,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8332,
											"end": 8339,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8323,
											"end": 8329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8321,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8287,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8340,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8287,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8277,
											"end": 8340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8277,
											"end": 8340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 8357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8449,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8363,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8398,
											"end": 8405,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8431,
											"end": 8436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8443,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8416,
											"end": 8443,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8416,
											"end": 8443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8449,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8455,
											"end": 8567,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8455,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8538,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 8554,
											"end": 8559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8538,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8538,
											"end": 8560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8538,
											"end": 8560,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 8538,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8533,
											"end": 8536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8526,
											"end": 8561,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8455,
											"end": 8567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8455,
											"end": 8567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8455,
											"end": 8567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8689,
											"end": 8698,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8703,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8753,
											"end": 8759,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8713,
											"end": 8780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8780,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 8713,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8573,
											"end": 8787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 8879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8887,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8940,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8926,
											"end": 8935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8917,
											"end": 8924,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8913,
											"end": 8936,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8909,
											"end": 8941,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8906,
											"end": 9025,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8906,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 8906,
											"end": 9025,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 8944,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 8944,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9023,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 8944,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8906,
											"end": 9025,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 8906,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9134,
											"end": 9141,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9125,
											"end": 9131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9114,
											"end": 9123,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9110,
											"end": 9132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 9089,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9142,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9089,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9191,
											"end": 9223,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9239,
											"end": 9269,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9353,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 9236,
											"end": 9353,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9272,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 9272,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 9272,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9272,
											"end": 9351,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 9272,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9353,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 9236,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 9442,
											"end": 9449,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9433,
											"end": 9439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9422,
											"end": 9431,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9418,
											"end": 9440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 9385,
											"end": 9450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9450,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 9385,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9450,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9450,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9162,
											"end": 9460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 9467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9569,
											"end": 9578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9560,
											"end": 9567,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9556,
											"end": 9579,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9552,
											"end": 9584,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9668,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 9549,
											"end": 9668,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 9587,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 9587,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9666,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 9587,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9668,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 9549,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9707,
											"end": 9708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 9777,
											"end": 9784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9757,
											"end": 9766,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9775,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9732,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9785,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 9732,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9722,
											"end": 9785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9722,
											"end": 9785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9678,
											"end": 9795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9926,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 9808,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 9913,
											"end": 9918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9895,
											"end": 9919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9890,
											"end": 9893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10076,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10144,
											"end": 10145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10142,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10076,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 10076,
											"end": 10147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10076,
											"end": 10147,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10076,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10285,
											"end": 10287,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10273,
											"end": 10282,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10264,
											"end": 10271,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10283,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10256,
											"end": 10288,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10291,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10291,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 10291,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10291,
											"end": 10370,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10291,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 10253,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 10481,
											"end": 10488,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10461,
											"end": 10470,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10457,
											"end": 10479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 10436,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10489,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 10436,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10489,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10382,
											"end": 10499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10564,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10609,
											"end": 10616,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10598,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10585,
											"end": 10607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 10564,
											"end": 10617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10617,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10564,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10640,
											"end": 10820,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 10640,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10765,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10685,
											"end": 10686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10678,
											"end": 10766,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10789,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10782,
											"end": 10783,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10775,
											"end": 10790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10813,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10806,
											"end": 10807,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10814,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11146,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 10826,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10870,
											"end": 10876,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10901,
											"end": 10905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10897,
											"end": 10909,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 10955,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10948,
											"end": 10952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10944,
											"end": 10956,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10975,
											"end": 10993,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 10965,
											"end": 11046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11035,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 11023,
											"end": 11029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11036,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11009,
											"end": 11036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11009,
											"end": 11036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 11046,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 10965,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11085,
											"end": 11091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11096,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11097,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11056,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11056,
											"end": 11140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 11112,
											"end": 11130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11056,
											"end": 11140,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11056,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 11146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10826,
											"end": 11146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11317,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11152,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11309,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 11288,
											"end": 11289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11310,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11550,
											"end": 11552,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 11486,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11651,
											"end": 11654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11562,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11675,
											"end": 11678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11664,
											"end": 11683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11664,
											"end": 11683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11861,
											"end": 11865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11901,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11888,
											"end": 11897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11876,
											"end": 11902,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11876,
											"end": 11902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11948,
											"end": 11957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11942,
											"end": 11946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11958,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11934,
											"end": 11935,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11919,
											"end": 11936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 11959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 12102,
											"end": 12106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 11976,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 12107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 12107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11695,
											"end": 12114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12120,
											"end": 12302,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 12120,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12260,
											"end": 12294,
											"name": "PUSH",
											"source": 13,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12244,
											"end": 12258,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12237,
											"end": 12295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12120,
											"end": 12302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12120,
											"end": 12302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12674,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12308,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12450,
											"end": 12453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12471,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12535,
											"end": 12537,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12533,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 12471,
											"end": 12538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12538,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12471,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12636,
											"end": 12639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 12547,
											"end": 12640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12640,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12547,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12665,
											"end": 12667,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12660,
											"end": 12663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12668,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12649,
											"end": 12668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12649,
											"end": 12668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 13099,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 12680,
											"end": 13099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12846,
											"end": 12850,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12933,
											"end": 12942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12923,
											"end": 12943,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12919,
											"end": 12920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12904,
											"end": 12921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12897,
											"end": 12944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 13092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 13087,
											"end": 13091,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 13092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12961,
											"end": 13092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 13092,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12961,
											"end": 13092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12953,
											"end": 13092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12953,
											"end": 13092,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 13099,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 13099,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 13099,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 13099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13281,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 13105,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13273,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E74206F776E65722062616C616E6365000000000000"
										},
										{
											"begin": 13241,
											"end": 13242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13239,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13274,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13653,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 13287,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13429,
											"end": 13432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13514,
											"end": 13516,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 13509,
											"end": 13512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13450,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 13450,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13450,
											"end": 13517,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13450,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13443,
											"end": 13517,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13443,
											"end": 13517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 13615,
											"end": 13618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 13526,
											"end": 13619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13639,
											"end": 13642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13635,
											"end": 13647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14078,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 13659,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 13865,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13852,
											"end": 13861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13840,
											"end": 13866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13840,
											"end": 13866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13912,
											"end": 13921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13906,
											"end": 13910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13902,
											"end": 13922,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13896,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 13900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13876,
											"end": 13923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 14066,
											"end": 14070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 13940,
											"end": 14071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 14071,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13940,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14071,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14078,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14232,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 14084,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14175,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14189,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 14223,
											"end": 14224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14209,
											"end": 14212,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14205,
											"end": 14221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14084,
											"end": 14232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14360,
											"end": 14363,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 14445,
											"end": 14451,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14440,
											"end": 14443,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14381,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14381,
											"end": 14452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14381,
											"end": 14452,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 14381,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14374,
											"end": 14452,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14374,
											"end": 14452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 14511,
											"end": 14517,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14499,
											"end": 14504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 14462,
											"end": 14518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 14462,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 14565,
											"end": 14571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14543,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14572,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 14543,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14538,
											"end": 14541,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14534,
											"end": 14573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14736,
											"end": 14740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14774,
											"end": 14776,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14759,
											"end": 14777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14855,
											"end": 14856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14853,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14840,
											"end": 14857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14837,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 14787,
											"end": 14858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14858,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14787,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14899,
											"end": 14903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14895,
											"end": 14915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 14892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14879,
											"end": 14888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14875,
											"end": 14893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14868,
											"end": 14916,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 15016,
											"end": 15020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15005,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 14933,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 15021,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 14933,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 15021,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 15021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 15028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15204,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 15034,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 15170,
											"end": 15171,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15162,
											"end": 15168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15158,
											"end": 15172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15151,
											"end": 15197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15576,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 15210,
											"end": 15576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15352,
											"end": 15355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15373,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15437,
											"end": 15439,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 15432,
											"end": 15435,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15373,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 15373,
											"end": 15440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15373,
											"end": 15440,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15373,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15366,
											"end": 15440,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15366,
											"end": 15440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15449,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 15538,
											"end": 15541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15449,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 15449,
											"end": 15542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15449,
											"end": 15542,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 15449,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15567,
											"end": 15569,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15562,
											"end": 15565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15558,
											"end": 15570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15551,
											"end": 15570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15551,
											"end": 15570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15576,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 16001,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 15582,
											"end": 16001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15748,
											"end": 15752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15786,
											"end": 15788,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15775,
											"end": 15784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15771,
											"end": 15789,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15763,
											"end": 15789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15763,
											"end": 15789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15835,
											"end": 15844,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15829,
											"end": 15833,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15810,
											"end": 15819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15806,
											"end": 15823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15799,
											"end": 15846,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15863,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 15989,
											"end": 15993,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15863,
											"end": 15994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 15863,
											"end": 15994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15863,
											"end": 15994,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 15863,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 16001,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 16001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 16001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 16001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16128,
											"end": 16132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16166,
											"end": 16168,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16155,
											"end": 16164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16151,
											"end": 16169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16143,
											"end": 16169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16143,
											"end": 16169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16179,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 16247,
											"end": 16248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16245,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16232,
											"end": 16249,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16223,
											"end": 16229,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16179,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 16179,
											"end": 16250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16179,
											"end": 16250,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 16179,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16260,
											"end": 16332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 16328,
											"end": 16330,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16313,
											"end": 16331,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16310,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16260,
											"end": 16332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 16260,
											"end": 16332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16260,
											"end": 16332,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 16260,
											"end": 16332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16345,
											"end": 16461,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 16345,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 16430,
											"end": 16435,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 16415,
											"end": 16436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16415,
											"end": 16436,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 16415,
											"end": 16436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16408,
											"end": 16413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16405,
											"end": 16437,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 16395,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 16395,
											"end": 16455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16451,
											"end": 16452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16448,
											"end": 16449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16441,
											"end": 16453,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16395,
											"end": 16455,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 16395,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16345,
											"end": 16461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16345,
											"end": 16461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16521,
											"end": 16526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16546,
											"end": 16559,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16537,
											"end": 16559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16537,
											"end": 16559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 16592,
											"end": 16597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 16568,
											"end": 16598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16467,
											"end": 16604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16677,
											"end": 16683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 16712,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16701,
											"end": 16724,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16697,
											"end": 16729,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 16732,
											"end": 16811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 16930,
											"end": 16937,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16921,
											"end": 16927,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16910,
											"end": 16919,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16906,
											"end": 16928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 16877,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16823,
											"end": 16948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16610,
											"end": 16955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16961,
											"end": 17127,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 16961,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17101,
											"end": 17119,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 17097,
											"end": 17098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17089,
											"end": 17095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17120,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16961,
											"end": 17127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16961,
											"end": 17127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17499,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 17133,
											"end": 17499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17296,
											"end": 17363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 17360,
											"end": 17362,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 17355,
											"end": 17358,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17296,
											"end": 17363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 17296,
											"end": 17363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17296,
											"end": 17363,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 17296,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17289,
											"end": 17363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17289,
											"end": 17363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17372,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 17461,
											"end": 17464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17372,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 17372,
											"end": 17465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17372,
											"end": 17465,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 17372,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17490,
											"end": 17492,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17485,
											"end": 17488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17481,
											"end": 17493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17474,
											"end": 17493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17474,
											"end": 17493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17505,
											"end": 17924,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 17505,
											"end": 17924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17671,
											"end": 17675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17709,
											"end": 17711,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17698,
											"end": 17707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17694,
											"end": 17712,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17686,
											"end": 17712,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17686,
											"end": 17712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17758,
											"end": 17767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17752,
											"end": 17756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17748,
											"end": 17768,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17744,
											"end": 17745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17733,
											"end": 17742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17729,
											"end": 17746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17722,
											"end": 17769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17786,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 17912,
											"end": 17916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17786,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 17786,
											"end": 17917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17786,
											"end": 17917,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 17786,
											"end": 17917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17778,
											"end": 17917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17778,
											"end": 17917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17505,
											"end": 17924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17505,
											"end": 17924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17505,
											"end": 17924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17505,
											"end": 17924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17930,
											"end": 18111,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 17930,
											"end": 18111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18070,
											"end": 18103,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 18066,
											"end": 18067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18058,
											"end": 18064,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18054,
											"end": 18068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18047,
											"end": 18104,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17930,
											"end": 18111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17930,
											"end": 18111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18117,
											"end": 18483,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 18117,
											"end": 18483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18259,
											"end": 18262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 18344,
											"end": 18346,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 18339,
											"end": 18342,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 18280,
											"end": 18347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18347,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 18280,
											"end": 18347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 18445,
											"end": 18448,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 18356,
											"end": 18449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18474,
											"end": 18476,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18469,
											"end": 18472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18465,
											"end": 18477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18458,
											"end": 18477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18458,
											"end": 18477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18117,
											"end": 18483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18117,
											"end": 18483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18117,
											"end": 18483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18117,
											"end": 18483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18908,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 18489,
											"end": 18908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18693,
											"end": 18695,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18682,
											"end": 18691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18678,
											"end": 18696,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18670,
											"end": 18696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18670,
											"end": 18696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18742,
											"end": 18751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18732,
											"end": 18752,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18728,
											"end": 18729,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18717,
											"end": 18726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18713,
											"end": 18730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18706,
											"end": 18753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18770,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 18896,
											"end": 18900,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18770,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 18770,
											"end": 18901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18770,
											"end": 18901,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 18770,
											"end": 18901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18762,
											"end": 18901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18762,
											"end": 18901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19063,
											"end": 19067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19103,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19090,
											"end": 19099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19086,
											"end": 19104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 19182,
											"end": 19183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19171,
											"end": 19180,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19167,
											"end": 19184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19158,
											"end": 19164,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 19114,
											"end": 19185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19185,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 19114,
											"end": 19185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19195,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 19263,
											"end": 19265,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19261,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19248,
											"end": 19266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19239,
											"end": 19245,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19195,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 19195,
											"end": 19267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19195,
											"end": 19267,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 19195,
											"end": 19267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19277,
											"end": 19349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 19345,
											"end": 19347,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19334,
											"end": 19343,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19330,
											"end": 19348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19321,
											"end": 19327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19277,
											"end": 19349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 19277,
											"end": 19349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19277,
											"end": 19349,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 19277,
											"end": 19349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 19356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19483,
											"end": 19487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19521,
											"end": 19523,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19510,
											"end": 19519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19506,
											"end": 19524,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 19524,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 19524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19534,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 19602,
											"end": 19603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19591,
											"end": 19600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19587,
											"end": 19604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19578,
											"end": 19584,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19534,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 19534,
											"end": 19605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19534,
											"end": 19605,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 19534,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19615,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 19683,
											"end": 19685,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19672,
											"end": 19681,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19668,
											"end": 19686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19615,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 19615,
											"end": 19687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19615,
											"end": 19687,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 19615,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19362,
											"end": 19694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19700,
											"end": 19880,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 19700,
											"end": 19880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19748,
											"end": 19825,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19745,
											"end": 19746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19738,
											"end": 19826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19845,
											"end": 19849,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 19842,
											"end": 19843,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19835,
											"end": 19850,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19869,
											"end": 19873,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19866,
											"end": 19867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19859,
											"end": 19874,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19926,
											"end": 19929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19945,
											"end": 19965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 19963,
											"end": 19964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19945,
											"end": 19965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 19945,
											"end": 19965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19945,
											"end": 19965,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 19945,
											"end": 19965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19965,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19979,
											"end": 19999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 19997,
											"end": 19998,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19979,
											"end": 19999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 19979,
											"end": 19999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19979,
											"end": 19999,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 19979,
											"end": 19999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19974,
											"end": 19999,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19974,
											"end": 19999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20022,
											"end": 20023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20019,
											"end": 20020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20015,
											"end": 20024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20043,
											"end": 20046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20040,
											"end": 20041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20037,
											"end": 20047,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 20034,
											"end": 20070,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20034,
											"end": 20070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 20034,
											"end": 20070,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20050,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 20050,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 20050,
											"end": 20068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20050,
											"end": 20068,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 20050,
											"end": 20068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20034,
											"end": 20070,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 20034,
											"end": 20070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 20077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20253,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 20083,
											"end": 20253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20223,
											"end": 20245,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 20219,
											"end": 20220,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20211,
											"end": 20217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20207,
											"end": 20221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20200,
											"end": 20246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20259,
											"end": 20625,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 20259,
											"end": 20625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20401,
											"end": 20404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20422,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 20486,
											"end": 20488,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 20481,
											"end": 20484,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20422,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 20422,
											"end": 20489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20422,
											"end": 20489,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 20422,
											"end": 20489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20415,
											"end": 20489,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20415,
											"end": 20489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20498,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 20587,
											"end": 20590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20498,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 20498,
											"end": 20591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20498,
											"end": 20591,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 20498,
											"end": 20591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20616,
											"end": 20618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20611,
											"end": 20614,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20607,
											"end": 20619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20600,
											"end": 20619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20600,
											"end": 20619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20259,
											"end": 20625,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20259,
											"end": 20625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20259,
											"end": 20625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20259,
											"end": 20625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 21050,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 20631,
											"end": 21050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20797,
											"end": 20801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20835,
											"end": 20837,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20824,
											"end": 20833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20812,
											"end": 20838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20812,
											"end": 20838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20884,
											"end": 20893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 20882,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20874,
											"end": 20894,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20870,
											"end": 20871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20855,
											"end": 20872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20912,
											"end": 21043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 21038,
											"end": 21042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20912,
											"end": 21043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 20912,
											"end": 21043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20912,
											"end": 21043,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 20912,
											"end": 21043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20904,
											"end": 21043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20904,
											"end": 21043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 21050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 21050,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 21050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 21050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Lockness/contract/LNT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"TASK_MANAGER_ROLE()": "c7495233",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"recoverTokens(address,address,uint256)": "5f3e849f",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardTokens(address,uint256,string)": "0ceb382e",
							"spendTokens(uint256,string)": "59563cdf",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"taskId\",\"type\":\"string\"}],\"name\":\"TokensRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemOrServiceId\",\"type\":\"string\"}],\"name\":\"TokensSpent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TASK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"taskId\",\"type\":\"string\"}],\"name\":\"rewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"itemOrServiceId\",\"type\":\"string\"}],\"name\":\"spendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Lockness/contract/LNT.sol\":\"LNT\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"Lockness/contract/LNT.sol\":{\"keccak256\":\"0x7ca7ad0a1c5e7b83a682428d4626f254d78cc995d3678787e9835ecb24bec8ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3245994df3863b0c9e27226a621178cb8ad33d54a628b2d0082226d2f7e9a5b5\",\"dweb:/ipfs/QmQxUYz2c4BMBaTc2z1Uwm2bcGVbSr6hPSHRLHZbzpaMna\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 866,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 868,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 870,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 872,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 682,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 783,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_status",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 388,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "Lockness/contract/LNT.sol:LNT",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "Lockness/contract/LNT.sol:LNT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1486
						],
						"ERC165": [
							1510
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1522
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1511,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1522,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1510,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1510,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1510,
								1522,
								379,
								1486
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							527
						]
					},
					"id": 528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 528,
							"sourceUnit": 1487,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 385,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "692:7:2"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 384,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 527,
							"linearizedBaseContracts": [
								527,
								1486
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 527,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 387,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 393,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 398,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 404,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 417,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 416,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 422,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 430,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 527,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 433,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 436,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 438,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 527,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 451,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 453,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 457,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 456,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 460,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 527,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 470,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 467,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 527,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 487,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 493,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 492,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 498,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 501,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 483,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 527,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"id": 514,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 521,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 527,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 528,
							"src": "663:2438:2",
							"usedErrors": [
								393,
								398
							],
							"usedEvents": [
								404
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							664
						],
						"IERC20Errors": [
							569
						],
						"IERC721Errors": [
							617
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 530,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 539,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 544,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 549,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 558,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 563,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 568,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 665,
							"src": "280:1764:3",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 575,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 580,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 589,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 594,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 599,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 606,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 611,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 616,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 665,
							"src": "2190:2092:3",
							"usedErrors": [
								575,
								580,
								589,
								594,
								599,
								606,
								611,
								616
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 629,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 634,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 639,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 646,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 651,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 656,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 663,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 665,
							"src": "4430:2107:3",
							"usedErrors": [
								629,
								634,
								639,
								646,
								651,
								656,
								663
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Pausable": [
							772
						]
					},
					"id": 773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 773,
							"sourceUnit": 1487,
							"src": "130:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "Context",
										"nameLocations": [
											"632:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "632:7:4"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								1486
							],
							"name": "Pausable",
							"nameLocation": "620:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 675,
									"name": "Paused",
									"nameLocation": "730:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "737:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:4"
									},
									"src": "724:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 680,
									"name": "Unpaused",
									"nameLocation": "841:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "850:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:4"
									},
									"src": "835:32:4"
								},
								{
									"constant": false,
									"id": 682,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "873:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 681,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "986:32:4",
										"statements": [
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 686,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "996:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "996:15:4"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 691,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:4"
									},
									"scope": 772,
									"src": "972:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1229:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1239:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:4"
											},
											{
												"id": 697,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:4"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 699,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:4"
									},
									"src": "1204:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1476:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 702,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "1486:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:4"
											},
											{
												"id": 705,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 707,
									"name": "whenPaused",
									"nameLocation": "1463:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:4"
									},
									"src": "1454:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "1668:31:4",
										"statements": [
											{
												"expression": {
													"id": 713,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "1685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 712,
												"id": 714,
												"nodeType": "Return",
												"src": "1678:14:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1662:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:4"
									},
									"scope": 772,
									"src": "1615:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1818:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:4",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 721,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1837:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:4"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 772,
									"src": "1767:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "1993:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 733,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2011:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:4"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:4"
									},
									"scope": 772,
									"src": "1945:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "2235:66:4",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2245:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 750,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "2281:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 749,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "2274:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "2269:25:4"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 743,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 742,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2221:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:4"
									},
									"scope": 772,
									"src": "2186:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "2481:69:4",
										"statements": [
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2491:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 766,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "2530:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 765,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2521:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "EmitStatement",
												"src": "2516:27:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 758,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 707,
												"src": "2470:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:4"
									},
									"scope": 772,
									"src": "2433:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 773,
							"src": "602:1950:4",
							"usedErrors": [],
							"usedEvents": [
								675,
								680
							]
						}
					],
					"src": "105:2448:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							837
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 775,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 778,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 776,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 781,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 783,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 786,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 787,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 837,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 794,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 797,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 798,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 802,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 807,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 813,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 837,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 821,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 837,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 832,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 830,
												"id": 834,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 837,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 838,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC20": [
							1352
						],
						"IERC20": [
							1430
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1456
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1431,
							"src": "131:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 840,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1457,
							"src": "168:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 842,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "176:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1487,
							"src": "232:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 844,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "240:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 665,
							"src": "281:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 846,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 569,
										"src": "289:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Context",
										"nameLocations": [
											"1133:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "1133:7:6"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:6"
								},
								{
									"baseName": {
										"id": 851,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "1142:6:6"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:6"
								},
								{
									"baseName": {
										"id": 853,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "1150:14:6"
									},
									"id": 854,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:6"
								},
								{
									"baseName": {
										"id": 855,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 569,
										"src": "1166:12:6"
									},
									"id": 856,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:6",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								569,
								1456,
								1430,
								1486
							],
							"name": "ERC20",
							"nameLocation": "1124:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 860,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1185:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 859,
										"keyName": "account",
										"keyNameLocation": "1201:7:6",
										"keyType": {
											"id": 857,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 858,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1245:83:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 865,
										"keyName": "account",
										"keyNameLocation": "1261:7:6",
										"keyType": {
											"id": 861,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 864,
											"keyName": "spender",
											"keyNameLocation": "1288:7:6",
											"keyType": {
												"id": 862,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1335:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 870,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1370:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 869,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1396:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 871,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "1638:57:6",
										"statements": [
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1648:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 881,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1656:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:6"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 885,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1681:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:6"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:6",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 889,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1594:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 874,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1615:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:6"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:6"
									},
									"scope": 1352,
									"src": "1582:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1820:29:6",
										"statements": [
											{
												"expression": {
													"id": 895,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 870,
													"src": "1837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 894,
												"id": 896,
												"nodeType": "Return",
												"src": "1830:12:6"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1805:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:6"
									},
									"scope": 1352,
									"src": "1760:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1449
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2024:31:6",
										"statements": [
											{
												"expression": {
													"id": 904,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 903,
												"id": 905,
												"nodeType": "Return",
												"src": "2034:14:6"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:6"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2009:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 901,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:6"
									},
									"scope": 1352,
									"src": "1962:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2744:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 912,
												"id": 914,
												"nodeType": "Return",
												"src": "2754:9:6"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:6"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2737:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 910,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:6"
									},
									"scope": 1352,
									"src": "2688:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1379
									],
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "2864:36:6",
										"statements": [
											{
												"expression": {
													"id": 922,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 868,
													"src": "2881:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 923,
												"nodeType": "Return",
												"src": "2874:19:6"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2855:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:6"
									},
									"scope": 1352,
									"src": "2803:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3007:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 933,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3024:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 935,
													"indexExpression": {
														"id": 934,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3034:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 936,
												"nodeType": "Return",
												"src": "3017:25:6"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2952:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2998:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:6"
									},
									"scope": 1352,
									"src": "2933:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3319:103:6",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "3329:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 948,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3345:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "3377:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3384:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3388:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3367:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 947,
												"id": 960,
												"nodeType": "Return",
												"src": "3404:11:6"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3262:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3274:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3313:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:6"
									},
									"scope": 1352,
									"src": "3244:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "3544:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 972,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "3561:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3573:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "3580:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 971,
												"id": 977,
												"nodeType": "Return",
												"src": "3554:34:6"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3474:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3489:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:6"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3535:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:6"
									},
									"scope": 1352,
									"src": "3455:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "3981:107:6",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "3991:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "4007:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4038:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "4045:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4054:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1243,
															1303
														],
														"referencedDeclaration": 1243,
														"src": "4029:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "4070:11:6"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:6",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3919:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3936:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3975:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:6"
									},
									"scope": 1352,
									"src": "3902:186:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "4773:151:6",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "4783:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "4801:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4839:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4845:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4854:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "4823:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4880:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4886:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4890:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4870:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "4906:11:6"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:6",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4702:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4716:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4728:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4767:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:6"
									},
									"scope": 1352,
									"src": "4680:244:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5366:231:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "5380:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "5376:86:6",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "5400:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "5421:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "5414:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "5475:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "5471:86:6",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "5493:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "5514:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "5507:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "5580:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "5584:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5566:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:6"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:6"
									},
									"scope": 1352,
									"src": "5297:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "5987:1032:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "6001:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "6175:362:6",
													"statements": [
														{
															"assignments": [
																1104
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1104,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1129,
																	"src": "6189:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1108,
															"initialValue": {
																"baseExpression": {
																	"id": 1105,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "6211:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1107,
																"indexExpression": {
																	"id": 1106,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "6221:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1109,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "6244:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "6258:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "6240:115:6",
															"trueBody": {
																"id": 1118,
																"nodeType": "Block",
																"src": "6265:90:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1113,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "6315:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1114,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "6321:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1115,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "6334:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1112,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "6290:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1117,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:6"
																	}
																]
															}
														},
														{
															"id": 1128,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:6",
															"statements": [
																{
																	"expression": {
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1120,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "6475:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1122,
																			"indexExpression": {
																				"id": 1121,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "6485:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1123,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "6493:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1124,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "6507:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1127,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:6"
																}
															]
														}
													]
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "5997:540:6",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "6021:148:6",
													"statements": [
														{
															"expression": {
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1098,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "6137:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "6153:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1131,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "6551:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1132,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "6766:206:6",
													"statements": [
														{
															"id": 1149,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:6",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1143,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "6925:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1145,
																			"indexExpression": {
																				"id": 1144,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "6935:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "6942:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:6"
																}
															]
														}
													]
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "6547:425:6",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "6569:191:6",
													"statements": [
														{
															"id": 1141,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:6",
															"statements": [
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "6714:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1138,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "6730:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:6"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1153,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "6996:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "7002:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "7006:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1152,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "6987:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "6982:30:6"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:6",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5929:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5943:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5955:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:6"
									},
									"scope": 1352,
									"src": "5912:1107:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "7418:152:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7432:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1168,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "7428:91:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "7455:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1174,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1173,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "7476:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1179,
															"nodeType": "RevertStatement",
															"src": "7469:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "7548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "7557:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "7528:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:6"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:6",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7377:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7394:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:6"
									},
									"scope": 1352,
									"src": "7362:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "7944:150:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "7958:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "7954:89:6",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "7981:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1207,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1206,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "8002:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "7995:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "8060:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8081:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "8052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:6"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "7903:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "7920:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:6"
									},
									"scope": 1352,
									"src": "7888:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "8704:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "8723:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "8730:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "8739:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1235,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1243,
															1303
														],
														"referencedDeclaration": 1303,
														"src": "8714:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:6"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:6",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8648:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8663:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8680:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:6"
									},
									"scope": 1352,
									"src": "8630:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "9703:334:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "9717:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "9713:89:6",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "9738:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1262,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1261,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "9759:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1267,
															"nodeType": "RevertStatement",
															"src": "9752:39:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "9815:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "9811:90:6",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "9838:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1277,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1276,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "9859:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "9852:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1285,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "9910:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1288,
															"indexExpression": {
																"id": 1286,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "9922:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1289,
														"indexExpression": {
															"id": 1287,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "9929:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1290,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "9940:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:6"
											},
											{
												"condition": {
													"id": 1293,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1252,
													"src": "9959:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "9955:76:6",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "9970:61:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "9998:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "10005:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "10014:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1294,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "9989:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "EmitStatement",
															"src": "9984:36:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:6",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9623:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9638:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:6"
									},
									"scope": 1352,
									"src": "9605:432:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "10408:387:6",
										"statements": [
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "10418:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"id": 1316,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "10455:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "10462:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1315,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "10445:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1320,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "10484:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1321,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "IfStatement",
												"src": "10480:309:6",
												"trueBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "10522:267:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1327,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "10540:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "10559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1337,
															"nodeType": "IfStatement",
															"src": "10536:130:6",
															"trueBody": {
																"id": 1336,
																"nodeType": "Block",
																"src": "10566:100:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1331,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1308,
																					"src": "10618:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1332,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "10627:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1333,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "10645:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1330,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "10591:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1335,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:6"
																	}
																]
															}
														},
														{
															"id": 1347,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1339,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "10716:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1340,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "10723:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1341,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "10732:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1342,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "10751:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1338,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1243,
																				1303
																			],
																			"referencedDeclaration": 1303,
																			"src": "10707:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1346,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:6",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10359:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10376:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:6"
									},
									"scope": 1352,
									"src": "10319:476:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1353,
							"src": "1106:9691:6",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "105:10693:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1430
						]
					},
					"id": 1431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1364,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1373,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 1430,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 1430,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 1430,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 1430,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 1430,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 1430,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1430
						],
						"IERC20Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1431,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1433,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1436,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "306:6:8"
									},
									"id": 1437,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1435,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1430
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 1456,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 1456,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1452,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 1456,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1486,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1486,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1486,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1510
						],
						"IERC165": [
							1522
						]
					},
					"id": 1511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 1523,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1522,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1492,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1522,
										"src": "688:7:10"
									},
									"id": 1493,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1491,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1510,
							"linearizedBaseContracts": [
								1510,
								1522
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1507,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1510,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1511,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1522
						]
					},
					"id": 1523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1512,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1513,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1522,
							"linearizedBaseContracts": [
								1522
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1522,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1523,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"Lockness/contract/LNT.sol": {
				"ast": {
					"absolutePath": "Lockness/contract/LNT.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1486
						],
						"ERC165": [
							1510
						],
						"ERC20": [
							1352
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1522
						],
						"IERC20": [
							1430
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1456
						],
						"LNT": [
							1773
						],
						"Ownable": [
							527
						],
						"Pausable": [
							772
						],
						"ReentrancyGuard": [
							837
						]
					},
					"id": 1774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 1353,
							"src": "58:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 297,
							"src": "114:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 773,
							"src": "173:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 838,
							"src": "229:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 528,
							"src": "292:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1530,
										"name": "ERC20",
										"nameLocations": [
											"364:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1352,
										"src": "364:5:12"
									},
									"id": 1531,
									"nodeType": "InheritanceSpecifier",
									"src": "364:5:12"
								},
								{
									"baseName": {
										"id": 1532,
										"name": "AccessControl",
										"nameLocations": [
											"371:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "371:13:12"
									},
									"id": 1533,
									"nodeType": "InheritanceSpecifier",
									"src": "371:13:12"
								},
								{
									"baseName": {
										"id": 1534,
										"name": "Pausable",
										"nameLocations": [
											"386:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "386:8:12"
									},
									"id": 1535,
									"nodeType": "InheritanceSpecifier",
									"src": "386:8:12"
								},
								{
									"baseName": {
										"id": 1536,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"396:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "396:15:12"
									},
									"id": 1537,
									"nodeType": "InheritanceSpecifier",
									"src": "396:15:12"
								},
								{
									"baseName": {
										"id": 1538,
										"name": "Ownable",
										"nameLocations": [
											"413:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 527,
										"src": "413:7:12"
									},
									"id": 1539,
									"nodeType": "InheritanceSpecifier",
									"src": "413:7:12"
								}
							],
							"canonicalName": "LNT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1773,
							"linearizedBaseContracts": [
								1773,
								527,
								837,
								772,
								296,
								1510,
								1522,
								379,
								1352,
								569,
								1456,
								1430,
								1486
							],
							"name": "LNT",
							"nameLocation": "357:3:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "c7495233",
									"id": 1544,
									"mutability": "constant",
									"name": "TASK_MANAGER_ROLE",
									"nameLocation": "471:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "447:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1540,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "447:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5441534b5f4d414e414745525f524f4c45",
												"id": 1542,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "501:19:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53",
													"typeString": "literal_string \"TASK_MANAGER_ROLE\""
												},
												"value": "TASK_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53",
													"typeString": "literal_string \"TASK_MANAGER_ROLE\""
												}
											],
											"id": 1541,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "491:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "491:30:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d",
									"id": 1552,
									"name": "TokensRewarded",
									"nameLocation": "572:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "603:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "587:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "617:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "609:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "632:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "625:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "625:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:53:12"
									},
									"src": "566:74:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729",
									"id": 1560,
									"name": "TokensSpent",
									"nameLocation": "651:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "679:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "663:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "693:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "685:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemOrServiceId",
												"nameLocation": "708:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "701:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "701:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:62:12"
									},
									"src": "645:80:12"
								},
								{
									"anonymous": false,
									"eventSelector": "401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe6",
									"id": 1568,
									"name": "TokensRecovered",
									"nameLocation": "736:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "768:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "752:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "791:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "775:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "803:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "795:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:59:12"
									},
									"src": "730:81:12"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "983:175:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "999:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f303030",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1013:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1029:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1584,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1772
																		],
																		"referencedDeclaration": 1772,
																		"src": "1033:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1033:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1029:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1013:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "993:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "993:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "993:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1065:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1592,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "1085:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1590,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1054:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "1054:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1596,
															"name": "TASK_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "1119:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1597,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "1138:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1595,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1108:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "1108:43:12"
											}
										]
									},
									"id": 1601,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6f636b6e657373546f6b656e",
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "925:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7ed22a159305d379d8bc3d43fb09f988c9cb5f6732918e5441d0bbb370acbab0",
														"typeString": "literal_string \"LocknessToken\""
													},
													"value": "LocknessToken"
												},
												{
													"hexValue": "4c4e54",
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "942:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_378b09d8c96f945801f373cba5eae42e4ebb9ca31dfdcd1ad3c809a856a7c75e",
														"typeString": "literal_string \"LNT\""
													},
													"value": "LNT"
												}
											],
											"id": 1575,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1572,
												"name": "ERC20",
												"nameLocations": [
													"919:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1352,
												"src": "919:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:29:12"
										},
										{
											"arguments": [
												{
													"id": 1577,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "965:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1578,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1576,
												"name": "Ownable",
												"nameLocations": [
													"957:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 527,
												"src": "957:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "957:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "896:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "888:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:22:12"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:0:12"
									},
									"scope": 1773,
									"src": "876:282:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "1247:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "1265:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1284:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1276:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1276:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1276:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1265:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1288:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1257:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "1257:49:12"
											},
											{
												"id": 1615,
												"nodeType": "PlaceholderStatement",
												"src": "1316:1:12"
											}
										]
									},
									"id": 1617,
									"name": "nonZeroAddress",
									"nameLocation": "1215:14:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1230:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:12"
									},
									"src": "1206:118:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "1574:243:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "1592:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1592:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1604:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1584:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "1584:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1645,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "1667:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1667:7:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1644,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "1657:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1657:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1648,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "1679:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1657:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f776e65722062616c616e6365",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460",
																"typeString": "literal_string \"Insufficient owner balance\""
															},
															"value": "Insufficient owner balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40cc4649fe6fb138ad597547b0fe09199d2296bc0330173b1026ba4c1966e460",
																"typeString": "literal_string \"Insufficient owner balance\""
															}
														],
														"id": 1643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "1649:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1654,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "1737:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1737:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "1746:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "1752:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "1727:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "1727:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1661,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "1789:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "1795:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1663,
															"name": "taskId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "1803:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1660,
														"name": "TokensRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "1774:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "EmitStatement",
												"src": "1769:41:12"
											}
										]
									},
									"functionSelector": "0ceb382e",
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1626,
													"name": "TASK_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1544,
													"src": "1507:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1625,
												"name": "onlyRole",
												"nameLocations": [
													"1498:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1498:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1498:27:12"
										},
										{
											"id": 1629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1628,
												"name": "whenNotPaused",
												"nameLocations": [
													"1526:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "1526:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1526:13:12"
										},
										{
											"id": 1631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1630,
												"name": "nonReentrant",
												"nameLocations": [
													"1540:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "1540:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1540:12:12"
										},
										{
											"arguments": [
												{
													"id": 1633,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1619,
													"src": "1568:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1634,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1632,
												"name": "nonZeroAddress",
												"nameLocations": [
													"1553:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "1553:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1553:20:12"
										}
									],
									"name": "rewardTokens",
									"nameLocation": "1392:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1422:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1414:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1444:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1436:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "1476:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1460:22:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1460:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:84:12"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:12"
									},
									"scope": 1773,
									"src": "1383:434:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "1992:322:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1679,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "2087:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2096:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2087:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2099:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2079:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "2079:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1687,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2162:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2166:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2162:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1686,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "2152:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2152:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1690,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "2177:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2152:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2185:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2144:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:64:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "2144:64:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2225:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2229:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2225:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "2237:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1695,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "2219:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "2219:25:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1702,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2271:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2275:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2271:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "2283:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1705,
															"name": "itemOrServiceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "2291:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1701,
														"name": "TokensSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "2259:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "EmitStatement",
												"src": "2254:53:12"
											}
										]
									},
									"functionSelector": "59563cdf",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1673,
												"name": "whenNotPaused",
												"nameLocations": [
													"1965:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "1965:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1965:13:12"
										},
										{
											"id": 1676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1675,
												"name": "nonReentrant",
												"nameLocations": [
													"1979:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "1979:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1979:12:12"
										}
									],
									"name": "spendTokens",
									"nameLocation": "1873:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1902:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1894:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "itemOrServiceId",
												"nameLocation": "1934:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1918:31:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1918:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:71:12"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1992:0:12"
									},
									"scope": 1773,
									"src": "1864:450:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "2391:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1714,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "2401:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "2401:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1712,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1711,
												"name": "onlyOwner",
												"nameLocations": [
													"2381:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2381:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:12"
										}
									],
									"name": "pause",
									"nameLocation": "2364:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2369:2:12"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:12"
									},
									"scope": 1773,
									"src": "2355:61:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "2497:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1723,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "2507:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2507:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "2507:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1720,
												"name": "onlyOwner",
												"nameLocations": [
													"2487:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2487:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2487:9:12"
										}
									],
									"name": "unpause",
									"nameLocation": "2468:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2475:2:12"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2497:0:12"
									},
									"scope": 1773,
									"src": "2459:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "2720:165:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1742,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2738:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2747:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2738:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2750:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2730:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2730:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "2730:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1752,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2818:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1753,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2822:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1749,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "2802:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1748,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "2795:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1430_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2795:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1430",
																"typeString": "contract IERC20"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2809:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "2795:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "2795:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1757,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "2860:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1758,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2867:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2871:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1756,
														"name": "TokensRecovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "2844:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "EmitStatement",
												"src": "2839:39:12"
											}
										]
									},
									"functionSelector": "5f3e849f",
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1735,
												"name": "onlyOwner",
												"nameLocations": [
													"2691:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2691:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2691:9:12"
										},
										{
											"arguments": [
												{
													"id": 1738,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1731,
													"src": "2716:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1737,
												"name": "nonZeroAddress",
												"nameLocations": [
													"2701:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "2701:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2701:18:12"
										}
									],
									"name": "recoverTokens",
									"nameLocation": "2595:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2626:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2618:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2649:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2641:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2669:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2661:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:73:12"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2720:0:12"
									},
									"scope": 1773,
									"src": "2586:299:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "3005:26:12",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3022:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1768,
												"id": 1770,
												"nodeType": "Return",
												"src": "3015:9:12"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2949:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2980:8:12"
									},
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2957:2:12"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2998:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1766,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2998:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:7:12"
									},
									"scope": 1773,
									"src": "2940:91:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1774,
							"src": "348:2689:12",
							"usedErrors": [
								306,
								309,
								393,
								398,
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": [
								318,
								327,
								336,
								404,
								675,
								680,
								1364,
								1373,
								1552,
								1560,
								1568
							]
						}
					],
					"src": "32:3005:12"
				},
				"id": 12
			}
		}
	}
}