{
	"id": "ecc0a1ec254b7817beb2be79def5bf61",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Lockness/contract/LNT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {\n    // Define roles\n    bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\");\n\n    // Addresses for reward pool and treasury\n    address public rewardPool = 0x66130818dB6c33CC9d8ef14845548Ef08E6118AD;\n    address public treasury= 0x149f9c20480A4DC264DAEdC1396a0E06a3848724;\n\n    // Define events for transparency\n    event TokensRewarded(address indexed user, uint256 amount, string taskId);\n    event TokensSpent(address indexed user, uint256 amount, string itemOrServiceId);\n    event TokensRecovered(address indexed token, address indexed to, uint256 amount);\n    event RewardPoolSet(address indexed rewardPool);\n    event TreasurySet(address indexed treasury);\n\n    // Constructor: Initialize token with 1 billion supply\n    constructor(address initialOwner) \n        ERC20(\"LocknessToken\", \"LNT\")\n        Ownable(initialOwner)\n    {\n        _mint(initialOwner, 1_000_000_000 * 10**decimals());\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\n        _grantRole(TASK_MANAGER_ROLE, initialOwner);\n    }\n\n    // Modifier to check non-zero address\n    modifier nonZeroAddress(address account) {\n        require(account != address(0), \"Invalid address\");\n        _;\n    }\n\n    // Set reward pool address (only owner)\n    function setRewardPool(address _rewardPool) external onlyOwner nonZeroAddress(_rewardPool) {\n        rewardPool = _rewardPool;\n        emit RewardPoolSet(_rewardPool);\n    }\n\n    // Set treasury address (only owner)\n    function setTreasury(address _treasury) external onlyOwner nonZeroAddress(_treasury) {\n        treasury = _treasury;\n        emit TreasurySet(_treasury);\n    }\n\n    // Reward tokens to a user for completing a task\n    function rewardTokens(\n        address user,\n        uint256 amount,\n        string calldata taskId\n    ) external onlyRole(TASK_MANAGER_ROLE) whenNotPaused nonReentrant nonZeroAddress(user) {\n        require(rewardPool != address(0), \"Reward pool not set\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(balanceOf(rewardPool) >= amount, \"Insufficient reward pool balance\");\n\n        _transfer(rewardPool, user, amount);\n        emit TokensRewarded(user, amount, taskId);\n    }\n\n    // Spend tokens on items or services\n    function spendTokens(\n        uint256 amount,\n        string calldata itemOrServiceId\n    ) external whenNotPaused nonReentrant {\n        require(treasury != address(0), \"Treasury not set\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n\n        _transfer(msg.sender, treasury, amount);\n        emit TokensSpent(msg.sender, amount, itemOrServiceId);\n    }\n\n    // Pause contract (only owner)\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    // Unpause contract (only owner)\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // Recover tokens accidentally sent to the contract\n    function recoverTokens(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner nonZeroAddress(to) {\n        require(token != address(this), \"Cannot recover LNT tokens\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        IERC20(token).transfer(to, amount);\n        emit TokensRecovered(token, to, amount);\n    }\n\n    // Override decimals to ensure compatibility\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n}\n\n\n// pragma solidity ^0.8.20;\n\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"@openzeppelin/contracts/access/AccessControl.sol\";\n// import \"@openzeppelin/contracts/security/Pausable.sol\";\n// import \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n\n// contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {\n//     // Define roles\n//     bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\");\n\n//     // Define events for transparency\n//     event TokensRewarded(address indexed user, uint256 amount, string taskId);\n//     event TokensSpent(address indexed user, uint256 amount, string itemOrServiceId);\n//     event TokensRecovered(address indexed token, address indexed to, uint256 amount);\n\n//     // Constructor: Initialize token with 1 billion supply\n//     constructor(address initialOwner) \n//         ERC20(\"LocknessToken\", \"LNT\")\n//         Ownable(initialOwner)\n//     {\n//         _mint(initialOwner, 1_000_000_000 * 10**decimals());\n//         _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\n//         _grantRole(TASK_MANAGER_ROLE, initialOwner);\n//     }\n\n//     // Modifier to check non-zero address\n//     modifier nonZeroAddress(address account) {\n//         require(account != address(0), \"Invalid address\");\n//         _;\n//     }\n\n//     // Reward tokens to a user for completing a task\n//     function rewardTokens(\n//         address user,\n//         uint256 amount,\n//         string calldata taskId\n//     ) external onlyRole(TASK_MANAGER_ROLE) whenNotPaused nonReentrant nonZeroAddress(user) {\n//         require(amount > 0, \"Amount must be greater than zero\");\n//         require(balanceOf(owner()) >= amount, \"Insufficient owner balance\");\n\n//         _transfer(owner(), user, amount);\n//         emit TokensRewarded(user, amount, taskId);\n//     }\n\n//     // Spend tokens on items or services\n//     function spendTokens(\n//         uint256 amount,\n//         string calldata itemOrServiceId\n//     ) external whenNotPaused nonReentrant {\n//         // Ascertain that the amount is valid and the user has enough tokens\n//         require(amount > 0, \"Amount must be greater than zero\");\n//         require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n\n//         _burn(msg.sender, amount);\n//         emit TokensSpent(msg.sender, amount, itemOrServiceId);\n//     }\n\n//     // Pause contract (only owner)\n//     function pause() external onlyOwner {\n//         _pause();\n//     }\n\n//     // Unpause contract (only owner)\n//     function unpause() external onlyOwner {\n//         _unpause();\n//     }\n\n//     // Recover tokens accidentally sent to the contract\n//     function recoverTokens(\n//         address token,\n//         address to,\n//         uint256 amount\n//     ) external onlyOwner nonZeroAddress(to) {\n//         require(amount > 0, \"Amount must be greater than zero\");\n//         IERC20(token).transfer(to, amount);\n//         emit TokensRecovered(token, to, amount);\n//     }\n\n//     // Override decimals to ensure compatibility\n//     function decimals() public view virtual override returns (uint8) {\n//         return 18;\n//     }\n\n  \n// }"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 682,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 866,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 868,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 870,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 872,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Lockness/contract/LNT.sol": {
				"LNT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewardPool",
									"type": "address"
								}
							],
							"name": "RewardPoolSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "taskId",
									"type": "string"
								}
							],
							"name": "TokensRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemOrServiceId",
									"type": "string"
								}
							],
							"name": "TokensSpent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								}
							],
							"name": "TreasurySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TASK_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "taskId",
									"type": "string"
								}
							],
							"name": "rewardTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardPool",
									"type": "address"
								}
							],
							"name": "setRewardPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "itemOrServiceId",
									"type": "string"
								}
							],
							"name": "spendTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Lockness/contract/LNT.sol\":403:3961  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Lockness/contract/LNT.sol\":657:699  0x66130818dB6c33CC9d8ef14845548Ef08E6118AD */\n  0x66130818db6c33cc9d8ef14845548ef08e6118ad\n    /* \"Lockness/contract/LNT.sol\":629:699  address public rewardPool = 0x66130818dB6c33CC9d8ef14845548Ef08E6118AD */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Lockness/contract/LNT.sol\":730:772  0x149f9c20480A4DC264DAEdC1396a0E06a3848724 */\n  0x149f9c20480a4dc264daedc1396a0e06a3848724\n    /* \"Lockness/contract/LNT.sol\":705:772  address public treasury= 0x149f9c20480A4DC264DAEdC1396a0E06a3848724 */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Lockness/contract/LNT.sol\":1229:1511  constructor(address initialOwner) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Lockness/contract/LNT.sol\":1318:1330  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6f636b6e657373546f6b656e00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4c4e540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x07\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Lockness/contract/LNT.sol\":1346:1397  _mint(initialOwner, 1_000_000_000 * 10**decimals()) */\n  tag_22\n    /* \"Lockness/contract/LNT.sol\":1352:1364  initialOwner */\n  dup2\n    /* \"Lockness/contract/LNT.sol\":1386:1396  decimals() */\n  tag_23\n    /* \"Lockness/contract/LNT.sol\":1386:1394  decimals */\n  shl(0x20, tag_24)\n    /* \"Lockness/contract/LNT.sol\":1386:1396  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"Lockness/contract/LNT.sol\":1382:1384  10 */\n  0x0a\n    /* \"Lockness/contract/LNT.sol\":1382:1396  10**decimals() */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"Lockness/contract/LNT.sol\":1366:1379  1_000_000_000 */\n  0x3b9aca00\n    /* \"Lockness/contract/LNT.sol\":1366:1396  1_000_000_000 * 10**decimals() */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"Lockness/contract/LNT.sol\":1346:1351  _mint */\n  shl(0x20, tag_29)\n    /* \"Lockness/contract/LNT.sol\":1346:1397  _mint(initialOwner, 1_000_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"Lockness/contract/LNT.sol\":1407:1451  _grantRole(DEFAULT_ADMIN_ROLE, initialOwner) */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"Lockness/contract/LNT.sol\":1418:1436  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"Lockness/contract/LNT.sol\":1438:1450  initialOwner */\n  dup3\n    /* \"Lockness/contract/LNT.sol\":1407:1417  _grantRole */\n  shl(0x20, tag_31)\n    /* \"Lockness/contract/LNT.sol\":1407:1451  _grantRole(DEFAULT_ADMIN_ROLE, initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n  pop\n    /* \"Lockness/contract/LNT.sol\":1461:1504  _grantRole(TASK_MANAGER_ROLE, initialOwner) */\n  tag_32\n    /* \"Lockness/contract/LNT.sol\":546:576  keccak256(\"TASK_MANAGER_ROLE\") */\n  0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n    /* \"Lockness/contract/LNT.sol\":1491:1503  initialOwner */\n  dup3\n    /* \"Lockness/contract/LNT.sol\":1461:1471  _grantRole */\n  shl(0x20, tag_31)\n    /* \"Lockness/contract/LNT.sol\":1461:1504  _grantRole(TASK_MANAGER_ROLE, initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n  pop\n    /* \"Lockness/contract/LNT.sol\":1229:1511  constructor(address initialOwner) ... */\n  pop\n    /* \"Lockness/contract/LNT.sol\":403:3961  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x08\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Lockness/contract/LNT.sol\":3868:3959  function decimals() public view virtual override returns (uint8) {... */\ntag_24:\n    /* \"Lockness/contract/LNT.sol\":3926:3931  uint8 */\n  0x00\n    /* \"Lockness/contract/LNT.sol\":3950:3952  18 */\n  0x12\n    /* \"Lockness/contract/LNT.sol\":3943:3952  return 18 */\n  swap1\n  pop\n    /* \"Lockness/contract/LNT.sol\":3868:3959  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_45\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_41:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_52)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_54\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_57)\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_63:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_65:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_66:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_102\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_65\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_67:\n    /* \"#utility.yul\":641:665   */\n  tag_104\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_66\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_105:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_68:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_107\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_67\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_110\n  tag_63\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":932:1051   */\ntag_109:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_111\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_68\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_69:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_70:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_71:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_72:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_116:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_118\n  tag_71\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1909:1993   */\ntag_117:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_73:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_74:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_75:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_76:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_123\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2624:2663   */\n  tag_124\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_75\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_77:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_78:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_79:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_128\n    /* \"#utility.yul\":3013:3047   */\n  tag_129\n    /* \"#utility.yul\":3022:3046   */\n  tag_130\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_77\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3013:3047   */\n  tag_78\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2995:3048   */\n  tag_77\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_80:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_81:\n    /* \"#utility.yul\":3251:3290   */\n  tag_133\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_79\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3312:3403   */\n  tag_134\n    /* \"#utility.yul\":3361:3402   */\n  tag_135\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_80\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_76\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_82:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_83:\n    /* \"#utility.yul\":3572:3604   */\n  tag_138\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3613:3678   */\n  tag_139\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_81\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_84:\n    /* \"#utility.yul\":3750:3870   */\ntag_141:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_144\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_83\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_85:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_147\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_73\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4101:4130   */\n  tag_148\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_74\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_149:\n    /* \"#utility.yul\":4328:4408   */\n  tag_150\n    /* \"#utility.yul\":4384:4406   */\n  tag_151\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_74\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_84\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_146:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_86:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_87:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_154\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_86\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_88:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_156\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_87\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_158\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_69\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_160\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5233:5289   */\ntag_159:\n    /* \"#utility.yul\":5313:5351   */\n  tag_161\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5398:5465   */\n  tag_162\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_85\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_165:\n    /* \"#utility.yul\":6339:6406   */\n  tag_166\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_88\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_163)\n    /* \"#utility.yul\":5560:6178   */\ntag_164:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_167\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_73\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_168:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_172\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_87\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_171:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_163:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_89:\n    /* \"#utility.yul\":6516:6540   */\n  tag_174\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_66\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_18:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_176\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_89\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_90:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_91:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_92:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_180:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_184\n  tag_90\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7300:7350   */\ntag_183:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_185:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_186\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_91\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_180)\ntag_182:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_93:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_187)\n    /* \"#utility.yul\":8164:8204   */\ntag_188:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_187)\n    /* \"#utility.yul\":8213:8249   */\ntag_189:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_190)\n    /* \"#utility.yul\":8352:8379   */\ntag_191:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_187)\n    /* \"#utility.yul\":8388:8579   */\ntag_192:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_194\n  tag_90\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8417:8460   */\ntag_193:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_196\n  tag_90\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8511:8551   */\ntag_195:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_187)\n    /* \"#utility.yul\":8302:8579   */\ntag_190:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_199\n  tag_90\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8766:8806   */\ntag_198:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_187)\n    /* \"#utility.yul\":8588:8834   */\ntag_197:\n    /* \"#utility.yul\":8859:8901   */\n  tag_200\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_92\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_202\n  tag_90\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8911:8962   */\ntag_201:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_187:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_94:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_26:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_205\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_77\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_206\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_94\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_207\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_93\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_28:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_209\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_77\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_210\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_77\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_211\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_77\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_212\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_213\n  tag_90\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9651:9790   */\ntag_212:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_51:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_215\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_77\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_216\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_77\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_218\n  tag_90\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9951:9987   */\ntag_217:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_95:\n    /* \"#utility.yul\":10087:10111   */\n  tag_220\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_77\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_55:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_222\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_89\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10405:10477   */\n  tag_223\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_95\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10487:10559   */\n  tag_224\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_95\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_59:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_226\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_95\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Lockness/contract/LNT.sol\":403:3961  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Lockness/contract/LNT.sol\":403:3961  contract LNT is ERC20, AccessControl, Pausable, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66666aa9\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc7495233\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x78238c37\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x78238c37\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x66666aa9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x59563cdf\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x59563cdf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5f3e849f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x0ceb382e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x0ceb382e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":2165:2677  function rewardTokens(... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Lockness/contract/LNT.sol\":3868:3959  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Lockness/contract/LNT.sol\":3317:3382  function unpause() external onlyOwner {... */\n    tag_13:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"Lockness/contract/LNT.sol\":2724:3172  function spendTokens(... */\n    tag_14:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":3444:3813  function recoverTokens(... */\n    tag_16:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"Lockness/contract/LNT.sol\":705:772  address public treasury= 0x149f9c20480A4DC264DAEdC1396a0E06a3848724 */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":629:699  address public rewardPool = 0x66130818dB6c33CC9d8ef14845548Ef08E6118AD */\n    tag_18:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"Lockness/contract/LNT.sol\":1727:1900  function setRewardPool(address _rewardPool) external onlyOwner nonZeroAddress(_rewardPool) {... */\n    tag_21:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"Lockness/contract/LNT.sol\":3213:3274  function pause() external onlyOwner {... */\n    tag_22:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_24:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_26:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":502:576  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n    tag_28:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_30:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Lockness/contract/LNT.sol\":1947:2106  function setTreasury(address _treasury) external onlyOwner nonZeroAddress(_treasury) {... */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_156\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2165:2677  function rewardTokens(... */\n    tag_58:\n        /* \"Lockness/contract/LNT.sol\":546:576  keccak256(\"TASK_MANAGER_ROLE\") */\n      0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_170\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_171\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_173:\n        /* \"Lockness/contract/LNT.sol\":2350:2354  user */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":1637:1638  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1618:1625  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1610:1659  require(account != address(0), \"Invalid address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"Lockness/contract/LNT.sol\":2396:2397  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2374:2398  rewardPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2374:2384  rewardPool */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2374:2398  rewardPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":2366:2422  require(rewardPool != address(0), \"Reward pool not set\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"Lockness/contract/LNT.sol\":2449:2450  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2440:2446  amount */\n      dup6\n        /* \"Lockness/contract/LNT.sol\":2440:2450  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":2432:2487  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"Lockness/contract/LNT.sol\":2530:2536  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":2505:2526  balanceOf(rewardPool) */\n      tag_186\n        /* \"Lockness/contract/LNT.sol\":2515:2525  rewardPool */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2505:2514  balanceOf */\n      tag_107\n        /* \"Lockness/contract/LNT.sol\":2505:2526  balanceOf(rewardPool) */\n      jump\t// in\n    tag_186:\n        /* \"Lockness/contract/LNT.sol\":2505:2536  balanceOf(rewardPool) >= amount */\n      lt\n      iszero\n        /* \"Lockness/contract/LNT.sol\":2497:2573  require(balanceOf(rewardPool) >= amount, \"Insufficient reward pool balance\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"Lockness/contract/LNT.sol\":2584:2619  _transfer(rewardPool, user, amount) */\n      tag_190\n        /* \"Lockness/contract/LNT.sol\":2594:2604  rewardPool */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2606:2610  user */\n      dup8\n        /* \"Lockness/contract/LNT.sol\":2612:2618  amount */\n      dup8\n        /* \"Lockness/contract/LNT.sol\":2584:2593  _transfer */\n      tag_191\n        /* \"Lockness/contract/LNT.sol\":2584:2619  _transfer(rewardPool, user, amount) */\n      jump\t// in\n    tag_190:\n        /* \"Lockness/contract/LNT.sol\":2649:2653  user */\n      dup6\n        /* \"Lockness/contract/LNT.sol\":2634:2670  TokensRewarded(user, amount, taskId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d\n        /* \"Lockness/contract/LNT.sol\":2655:2661  amount */\n      dup7\n        /* \"Lockness/contract/LNT.sol\":2663:2669  taskId */\n      dup7\n      dup7\n        /* \"Lockness/contract/LNT.sol\":2634:2670  TokensRewarded(user, amount, taskId) */\n      mload(0x40)\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_195\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_194:\n        /* \"Lockness/contract/LNT.sol\":2165:2677  function rewardTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_207:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":3868:3959  function decimals() public view virtual override returns (uint8) {... */\n    tag_79:\n        /* \"Lockness/contract/LNT.sol\":3926:3931  uint8 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":3950:3952  18 */\n      0x12\n        /* \"Lockness/contract/LNT.sol\":3943:3952  return 18 */\n      swap1\n      pop\n        /* \"Lockness/contract/LNT.sol\":3868:3959  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":3317:3382  function unpause() external onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"Lockness/contract/LNT.sol\":3365:3375  _unpause() */\n      tag_219\n        /* \"Lockness/contract/LNT.sol\":3365:3373  _unpause */\n      tag_220\n        /* \"Lockness/contract/LNT.sol\":3365:3375  _unpause() */\n      jump\t// in\n    tag_219:\n        /* \"Lockness/contract/LNT.sol\":3317:3382  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":2724:3172  function spendTokens(... */\n    tag_90:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_222\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_171\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_224\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_224:\n        /* \"Lockness/contract/LNT.sol\":2890:2891  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2870:2892  treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2870:2878  treasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":2870:2892  treasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":2862:2913  require(treasury != address(0), \"Treasury not set\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"Lockness/contract/LNT.sol\":2940:2941  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2931:2937  amount */\n      dup4\n        /* \"Lockness/contract/LNT.sol\":2931:2941  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":2923:2978  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_185\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"Lockness/contract/LNT.sol\":3021:3027  amount */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":2996:3017  balanceOf(msg.sender) */\n      tag_231\n        /* \"Lockness/contract/LNT.sol\":3006:3016  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":2996:3005  balanceOf */\n      tag_107\n        /* \"Lockness/contract/LNT.sol\":2996:3017  balanceOf(msg.sender) */\n      jump\t// in\n    tag_231:\n        /* \"Lockness/contract/LNT.sol\":2996:3027  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Lockness/contract/LNT.sol\":2988:3052  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"Lockness/contract/LNT.sol\":3063:3102  _transfer(msg.sender, treasury, amount) */\n      tag_235\n        /* \"Lockness/contract/LNT.sol\":3073:3083  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":3085:3093  treasury */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":3095:3101  amount */\n      dup6\n        /* \"Lockness/contract/LNT.sol\":3063:3072  _transfer */\n      tag_191\n        /* \"Lockness/contract/LNT.sol\":3063:3102  _transfer(msg.sender, treasury, amount) */\n      jump\t// in\n    tag_235:\n        /* \"Lockness/contract/LNT.sol\":3129:3139  msg.sender */\n      caller\n        /* \"Lockness/contract/LNT.sol\":3117:3165  TokensSpent(msg.sender, amount, itemOrServiceId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729\n        /* \"Lockness/contract/LNT.sol\":3141:3147  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3149:3164  itemOrServiceId */\n      dup5\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3117:3165  TokensSpent(msg.sender, amount, itemOrServiceId) */\n      mload(0x40)\n      tag_236\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_195\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_237:\n        /* \"Lockness/contract/LNT.sol\":2724:3172  function spendTokens(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":3444:3813  function recoverTokens(... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"Lockness/contract/LNT.sol\":3574:3576  to */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1637:1638  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1618:1625  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1610:1659  require(account != address(0), \"Invalid address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_178\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"Lockness/contract/LNT.sol\":3613:3617  this */\n      address\n        /* \"Lockness/contract/LNT.sol\":3596:3618  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":3596:3601  token */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3596:3618  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":3588:3648  require(token != address(this), \"Cannot recover LNT tokens\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"Lockness/contract/LNT.sol\":3675:3676  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":3666:3672  amount */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":3666:3676  amount > 0 */\n      gt\n        /* \"Lockness/contract/LNT.sol\":3658:3713  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_185\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"Lockness/contract/LNT.sol\":3730:3735  token */\n      dup4\n        /* \"Lockness/contract/LNT.sol\":3723:3745  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Lockness/contract/LNT.sol\":3746:3748  to */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3750:3756  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3723:3757  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      pop\n        /* \"Lockness/contract/LNT.sol\":3795:3797  to */\n      dup3\n        /* \"Lockness/contract/LNT.sol\":3772:3806  TokensRecovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":3788:3793  token */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3772:3806  TokensRecovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe6\n        /* \"Lockness/contract/LNT.sol\":3799:3805  amount */\n      dup5\n        /* \"Lockness/contract/LNT.sol\":3772:3806  TokensRecovered(token, to, amount) */\n      mload(0x40)\n      tag_256\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Lockness/contract/LNT.sol\":3444:3813  function recoverTokens(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":705:772  address public treasury= 0x149f9c20480A4DC264DAEdC1396a0E06a3848724 */\n    tag_98:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":629:699  address public rewardPool = 0x66130818dB6c33CC9d8ef14845548Ef08E6118AD */\n    tag_102:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":1727:1900  function setRewardPool(address _rewardPool) external onlyOwner nonZeroAddress(_rewardPool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"Lockness/contract/LNT.sol\":1805:1816  _rewardPool */\n      dup1\n        /* \"Lockness/contract/LNT.sol\":1637:1638  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1618:1625  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1610:1659  require(account != address(0), \"Invalid address\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_178\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"Lockness/contract/LNT.sol\":1841:1852  _rewardPool */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1828:1838  rewardPool */\n      0x09\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1828:1852  rewardPool = _rewardPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Lockness/contract/LNT.sol\":1881:1892  _rewardPool */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1867:1893  RewardPoolSet(_rewardPool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6033b33396350ae21a9bb61962b3be199ccf9c12465a993f6f67e703954e6ecc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Lockness/contract/LNT.sol\":1727:1900  function setRewardPool(address _rewardPool) external onlyOwner nonZeroAddress(_rewardPool) {... */\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":3213:3274  function pause() external onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_270:\n        /* \"Lockness/contract/LNT.sol\":3259:3267  _pause() */\n      tag_272\n        /* \"Lockness/contract/LNT.sol\":3259:3265  _pause */\n      tag_273\n        /* \"Lockness/contract/LNT.sol\":3259:3267  _pause() */\n      jump\t// in\n    tag_272:\n        /* \"Lockness/contract/LNT.sol\":3213:3274  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_277\n      swap1\n      tag_156\n      jump\t// in\n    tag_277:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_278\n      swap1\n      tag_156\n      jump\t// in\n    tag_278:\n      dup1\n      iszero\n      tag_279\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_280\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_279)\n    tag_280:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_281:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_281\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":502:576  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n    tag_134:\n        /* \"Lockness/contract/LNT.sol\":546:576  keccak256(\"TASK_MANAGER_ROLE\") */\n      0x77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53\n        /* \"Lockness/contract/LNT.sol\":502:576  bytes32 public constant TASK_MANAGER_ROLE = keccak256(\"TASK_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_287\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_289:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Lockness/contract/LNT.sol\":1947:2106  function setTreasury(address _treasury) external onlyOwner nonZeroAddress(_treasury) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"Lockness/contract/LNT.sol\":2021:2030  _treasury */\n      dup1\n        /* \"Lockness/contract/LNT.sol\":1637:1638  0 */\n      0x00\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Lockness/contract/LNT.sol\":1618:1625  account */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":1618:1639  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Lockness/contract/LNT.sol\":1610:1659  require(account != address(0), \"Invalid address\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_178\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"Lockness/contract/LNT.sol\":2053:2062  _treasury */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":2042:2050  treasury */\n      0x0a\n      0x00\n        /* \"Lockness/contract/LNT.sol\":2042:2062  treasury = _treasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Lockness/contract/LNT.sol\":2089:2098  _treasury */\n      dup2\n        /* \"Lockness/contract/LNT.sol\":2077:2099  TreasurySet(_treasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Lockness/contract/LNT.sol\":1947:2106  function setTreasury(address _treasury) external onlyOwner nonZeroAddress(_treasury) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_309\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_310\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_311\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_313\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_92\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x07)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x07\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_337\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_336)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_336:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_342\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_341)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_341:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_347\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_348\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_353\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_354\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_356\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_357\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x08\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_360\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_171\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_362\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_363\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_370\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_372\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_380)\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_384)\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_385\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_387\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_92\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_388:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_392:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_393:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_394:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_395:\n        /* \"#utility.yul\":561:584   */\n      tag_455\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_394\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_456:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_396:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_458\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_395\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_42:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_461\n      tag_392\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":833:952   */\n    tag_460:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_462\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_396\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_397:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_398:\n        /* \"#utility.yul\":1268:1289   */\n      tag_465\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_397\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_45:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_467\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_398\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_399:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_400:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_401:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_471:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_471)\n    tag_473:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_402:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_403:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_476\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_399\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2329:2400   */\n      tag_477\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_400\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_478\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_401\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2499:2528   */\n      tag_479\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_402\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_49:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_481\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_403\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_404:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_405:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_484\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_404\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_406:\n        /* \"#utility.yul\":3167:3191   */\n      tag_486\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_405\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_487:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_407:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_489\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_406\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_408:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_409:\n        /* \"#utility.yul\":3523:3547   */\n      tag_492\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_408\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_493:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_410:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_495\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_409\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_52:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_498\n      tag_392\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":3816:3935   */\n    tag_497:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_499\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_407\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_500\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_410\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4320   */\n    tag_411:\n        /* \"#utility.yul\":4312:4313   */\n      0x00\n        /* \"#utility.yul\":4309:4310   */\n      dup1\n        /* \"#utility.yul\":4302:4314   */\n      revert\n        /* \"#utility.yul\":4326:4443   */\n    tag_412:\n        /* \"#utility.yul\":4435:4436   */\n      0x00\n        /* \"#utility.yul\":4432:4433   */\n      dup1\n        /* \"#utility.yul\":4425:4437   */\n      revert\n        /* \"#utility.yul\":4449:4566   */\n    tag_413:\n        /* \"#utility.yul\":4558:4559   */\n      0x00\n        /* \"#utility.yul\":4555:4556   */\n      dup1\n        /* \"#utility.yul\":4548:4560   */\n      revert\n        /* \"#utility.yul\":4586:5139   */\n    tag_414:\n        /* \"#utility.yul\":4644:4652   */\n      0x00\n        /* \"#utility.yul\":4654:4660   */\n      dup1\n        /* \"#utility.yul\":4704:4707   */\n      dup4\n        /* \"#utility.yul\":4697:4701   */\n      0x1f\n        /* \"#utility.yul\":4689:4695   */\n      dup5\n        /* \"#utility.yul\":4685:4702   */\n      add\n        /* \"#utility.yul\":4681:4708   */\n      slt\n        /* \"#utility.yul\":4671:4793   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":4712:4791   */\n      tag_506\n      tag_411\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4671:4793   */\n    tag_505:\n        /* \"#utility.yul\":4825:4831   */\n      dup3\n        /* \"#utility.yul\":4812:4832   */\n      calldataload\n        /* \"#utility.yul\":4802:4832   */\n      swap1\n      pop\n        /* \"#utility.yul\":4855:4873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4847:4853   */\n      dup2\n        /* \"#utility.yul\":4844:4874   */\n      gt\n        /* \"#utility.yul\":4841:4958   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":4877:4956   */\n      tag_508\n      tag_412\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4841:4958   */\n    tag_507:\n        /* \"#utility.yul\":4991:4995   */\n      0x20\n        /* \"#utility.yul\":4983:4989   */\n      dup4\n        /* \"#utility.yul\":4979:4996   */\n      add\n        /* \"#utility.yul\":4967:4996   */\n      swap2\n      pop\n        /* \"#utility.yul\":5045:5048   */\n      dup4\n        /* \"#utility.yul\":5037:5041   */\n      0x01\n        /* \"#utility.yul\":5029:5035   */\n      dup3\n        /* \"#utility.yul\":5025:5042   */\n      mul\n        /* \"#utility.yul\":5015:5023   */\n      dup4\n        /* \"#utility.yul\":5011:5043   */\n      add\n        /* \"#utility.yul\":5008:5049   */\n      gt\n        /* \"#utility.yul\":5005:5133   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":5052:5131   */\n      tag_510\n      tag_413\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5005:5133   */\n    tag_509:\n        /* \"#utility.yul\":4586:5139   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5145:5964   */\n    tag_57:\n        /* \"#utility.yul\":5234:5240   */\n      0x00\n        /* \"#utility.yul\":5242:5248   */\n      dup1\n        /* \"#utility.yul\":5250:5256   */\n      0x00\n        /* \"#utility.yul\":5258:5264   */\n      dup1\n        /* \"#utility.yul\":5307:5309   */\n      0x60\n        /* \"#utility.yul\":5295:5304   */\n      dup6\n        /* \"#utility.yul\":5286:5293   */\n      dup8\n        /* \"#utility.yul\":5282:5305   */\n      sub\n        /* \"#utility.yul\":5278:5310   */\n      slt\n        /* \"#utility.yul\":5275:5394   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":5313:5392   */\n      tag_513\n      tag_392\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5275:5394   */\n    tag_512:\n        /* \"#utility.yul\":5433:5434   */\n      0x00\n        /* \"#utility.yul\":5458:5511   */\n      tag_514\n        /* \"#utility.yul\":5503:5510   */\n      dup8\n        /* \"#utility.yul\":5494:5500   */\n      dup3\n        /* \"#utility.yul\":5483:5492   */\n      dup9\n        /* \"#utility.yul\":5479:5501   */\n      add\n        /* \"#utility.yul\":5458:5511   */\n      tag_407\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5448:5511   */\n      swap5\n      pop\n        /* \"#utility.yul\":5404:5521   */\n      pop\n        /* \"#utility.yul\":5560:5562   */\n      0x20\n        /* \"#utility.yul\":5586:5639   */\n      tag_515\n        /* \"#utility.yul\":5631:5638   */\n      dup8\n        /* \"#utility.yul\":5622:5628   */\n      dup3\n        /* \"#utility.yul\":5611:5620   */\n      dup9\n        /* \"#utility.yul\":5607:5629   */\n      add\n        /* \"#utility.yul\":5586:5639   */\n      tag_410\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5576:5639   */\n      swap4\n      pop\n        /* \"#utility.yul\":5531:5649   */\n      pop\n        /* \"#utility.yul\":5716:5718   */\n      0x40\n        /* \"#utility.yul\":5705:5714   */\n      dup6\n        /* \"#utility.yul\":5701:5719   */\n      add\n        /* \"#utility.yul\":5688:5720   */\n      calldataload\n        /* \"#utility.yul\":5747:5765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5739:5745   */\n      dup2\n        /* \"#utility.yul\":5736:5766   */\n      gt\n        /* \"#utility.yul\":5733:5850   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":5769:5848   */\n      tag_517\n      tag_393\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5733:5850   */\n    tag_516:\n        /* \"#utility.yul\":5882:5947   */\n      tag_518\n        /* \"#utility.yul\":5939:5946   */\n      dup8\n        /* \"#utility.yul\":5930:5936   */\n      dup3\n        /* \"#utility.yul\":5919:5928   */\n      dup9\n        /* \"#utility.yul\":5915:5937   */\n      add\n        /* \"#utility.yul\":5882:5947   */\n      tag_414\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5864:5947   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5659:5957   */\n      pop\n        /* \"#utility.yul\":5145:5964   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6088   */\n    tag_415:\n        /* \"#utility.yul\":6057:6081   */\n      tag_520\n        /* \"#utility.yul\":6075:6080   */\n      dup2\n        /* \"#utility.yul\":6057:6081   */\n      tag_408\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6052:6055   */\n      dup3\n        /* \"#utility.yul\":6045:6082   */\n      mstore\n        /* \"#utility.yul\":5970:6088   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6094:6316   */\n    tag_62:\n        /* \"#utility.yul\":6187:6191   */\n      0x00\n        /* \"#utility.yul\":6225:6227   */\n      0x20\n        /* \"#utility.yul\":6214:6223   */\n      dup3\n        /* \"#utility.yul\":6210:6228   */\n      add\n        /* \"#utility.yul\":6202:6228   */\n      swap1\n      pop\n        /* \"#utility.yul\":6238:6309   */\n      tag_522\n        /* \"#utility.yul\":6306:6307   */\n      0x00\n        /* \"#utility.yul\":6295:6304   */\n      dup4\n        /* \"#utility.yul\":6291:6308   */\n      add\n        /* \"#utility.yul\":6282:6288   */\n      dup5\n        /* \"#utility.yul\":6238:6309   */\n      tag_415\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6094:6316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6322:6941   */\n    tag_65:\n        /* \"#utility.yul\":6399:6405   */\n      0x00\n        /* \"#utility.yul\":6407:6413   */\n      dup1\n        /* \"#utility.yul\":6415:6421   */\n      0x00\n        /* \"#utility.yul\":6464:6466   */\n      0x60\n        /* \"#utility.yul\":6452:6461   */\n      dup5\n        /* \"#utility.yul\":6443:6450   */\n      dup7\n        /* \"#utility.yul\":6439:6462   */\n      sub\n        /* \"#utility.yul\":6435:6467   */\n      slt\n        /* \"#utility.yul\":6432:6551   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":6470:6549   */\n      tag_525\n      tag_392\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6432:6551   */\n    tag_524:\n        /* \"#utility.yul\":6590:6591   */\n      0x00\n        /* \"#utility.yul\":6615:6668   */\n      tag_526\n        /* \"#utility.yul\":6660:6667   */\n      dup7\n        /* \"#utility.yul\":6651:6657   */\n      dup3\n        /* \"#utility.yul\":6640:6649   */\n      dup8\n        /* \"#utility.yul\":6636:6658   */\n      add\n        /* \"#utility.yul\":6615:6668   */\n      tag_407\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6605:6668   */\n      swap4\n      pop\n        /* \"#utility.yul\":6561:6678   */\n      pop\n        /* \"#utility.yul\":6717:6719   */\n      0x20\n        /* \"#utility.yul\":6743:6796   */\n      tag_527\n        /* \"#utility.yul\":6788:6795   */\n      dup7\n        /* \"#utility.yul\":6779:6785   */\n      dup3\n        /* \"#utility.yul\":6768:6777   */\n      dup8\n        /* \"#utility.yul\":6764:6786   */\n      add\n        /* \"#utility.yul\":6743:6796   */\n      tag_407\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6733:6796   */\n      swap3\n      pop\n        /* \"#utility.yul\":6688:6806   */\n      pop\n        /* \"#utility.yul\":6845:6847   */\n      0x40\n        /* \"#utility.yul\":6871:6924   */\n      tag_528\n        /* \"#utility.yul\":6916:6923   */\n      dup7\n        /* \"#utility.yul\":6907:6913   */\n      dup3\n        /* \"#utility.yul\":6896:6905   */\n      dup8\n        /* \"#utility.yul\":6892:6914   */\n      add\n        /* \"#utility.yul\":6871:6924   */\n      tag_410\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6861:6924   */\n      swap2\n      pop\n        /* \"#utility.yul\":6816:6934   */\n      pop\n        /* \"#utility.yul\":6322:6941   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6947:7024   */\n    tag_416:\n        /* \"#utility.yul\":6984:6991   */\n      0x00\n        /* \"#utility.yul\":7013:7018   */\n      dup2\n        /* \"#utility.yul\":7002:7018   */\n      swap1\n      pop\n        /* \"#utility.yul\":6947:7024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7030:7152   */\n    tag_417:\n        /* \"#utility.yul\":7103:7127   */\n      tag_531\n        /* \"#utility.yul\":7121:7126   */\n      dup2\n        /* \"#utility.yul\":7103:7127   */\n      tag_416\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7096:7101   */\n      dup2\n        /* \"#utility.yul\":7093:7128   */\n      eq\n        /* \"#utility.yul\":7083:7146   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":7142:7143   */\n      0x00\n        /* \"#utility.yul\":7139:7140   */\n      dup1\n        /* \"#utility.yul\":7132:7144   */\n      revert\n        /* \"#utility.yul\":7083:7146   */\n    tag_532:\n        /* \"#utility.yul\":7030:7152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7158:7297   */\n    tag_418:\n        /* \"#utility.yul\":7204:7209   */\n      0x00\n        /* \"#utility.yul\":7242:7248   */\n      dup2\n        /* \"#utility.yul\":7229:7249   */\n      calldataload\n        /* \"#utility.yul\":7220:7249   */\n      swap1\n      pop\n        /* \"#utility.yul\":7258:7291   */\n      tag_534\n        /* \"#utility.yul\":7285:7290   */\n      dup2\n        /* \"#utility.yul\":7258:7291   */\n      tag_417\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7158:7297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7632   */\n    tag_70:\n        /* \"#utility.yul\":7362:7368   */\n      0x00\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"#utility.yul\":7399:7408   */\n      dup3\n        /* \"#utility.yul\":7390:7397   */\n      dup5\n        /* \"#utility.yul\":7386:7409   */\n      sub\n        /* \"#utility.yul\":7382:7414   */\n      slt\n        /* \"#utility.yul\":7379:7498   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":7417:7496   */\n      tag_537\n      tag_392\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7379:7498   */\n    tag_536:\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7562:7615   */\n      tag_538\n        /* \"#utility.yul\":7607:7614   */\n      dup5\n        /* \"#utility.yul\":7598:7604   */\n      dup3\n        /* \"#utility.yul\":7587:7596   */\n      dup6\n        /* \"#utility.yul\":7583:7605   */\n      add\n        /* \"#utility.yul\":7562:7615   */\n      tag_418\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7552:7615   */\n      swap2\n      pop\n        /* \"#utility.yul\":7508:7625   */\n      pop\n        /* \"#utility.yul\":7303:7632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7638:7756   */\n    tag_419:\n        /* \"#utility.yul\":7725:7749   */\n      tag_540\n        /* \"#utility.yul\":7743:7748   */\n      dup2\n        /* \"#utility.yul\":7725:7749   */\n      tag_416\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7720:7723   */\n      dup3\n        /* \"#utility.yul\":7713:7750   */\n      mstore\n        /* \"#utility.yul\":7638:7756   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:7984   */\n    tag_73:\n        /* \"#utility.yul\":7855:7859   */\n      0x00\n        /* \"#utility.yul\":7893:7895   */\n      0x20\n        /* \"#utility.yul\":7882:7891   */\n      dup3\n        /* \"#utility.yul\":7878:7896   */\n      add\n        /* \"#utility.yul\":7870:7896   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:7977   */\n      tag_542\n        /* \"#utility.yul\":7974:7975   */\n      0x00\n        /* \"#utility.yul\":7963:7972   */\n      dup4\n        /* \"#utility.yul\":7959:7976   */\n      add\n        /* \"#utility.yul\":7950:7956   */\n      dup5\n        /* \"#utility.yul\":7906:7977   */\n      tag_419\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":7762:7984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7990:8464   */\n    tag_76:\n        /* \"#utility.yul\":8058:8064   */\n      0x00\n        /* \"#utility.yul\":8066:8072   */\n      dup1\n        /* \"#utility.yul\":8115:8117   */\n      0x40\n        /* \"#utility.yul\":8103:8112   */\n      dup4\n        /* \"#utility.yul\":8094:8101   */\n      dup6\n        /* \"#utility.yul\":8090:8113   */\n      sub\n        /* \"#utility.yul\":8086:8118   */\n      slt\n        /* \"#utility.yul\":8083:8202   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":8121:8200   */\n      tag_545\n      tag_392\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":8083:8202   */\n    tag_544:\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8266:8319   */\n      tag_546\n        /* \"#utility.yul\":8311:8318   */\n      dup6\n        /* \"#utility.yul\":8302:8308   */\n      dup3\n        /* \"#utility.yul\":8291:8300   */\n      dup7\n        /* \"#utility.yul\":8287:8309   */\n      add\n        /* \"#utility.yul\":8266:8319   */\n      tag_418\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8256:8319   */\n      swap3\n      pop\n        /* \"#utility.yul\":8212:8329   */\n      pop\n        /* \"#utility.yul\":8368:8370   */\n      0x20\n        /* \"#utility.yul\":8394:8447   */\n      tag_547\n        /* \"#utility.yul\":8439:8446   */\n      dup6\n        /* \"#utility.yul\":8430:8436   */\n      dup3\n        /* \"#utility.yul\":8419:8428   */\n      dup7\n        /* \"#utility.yul\":8415:8437   */\n      add\n        /* \"#utility.yul\":8394:8447   */\n      tag_407\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8384:8447   */\n      swap2\n      pop\n        /* \"#utility.yul\":8339:8457   */\n      pop\n        /* \"#utility.yul\":7990:8464   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8470:8556   */\n    tag_420:\n        /* \"#utility.yul\":8505:8512   */\n      0x00\n        /* \"#utility.yul\":8545:8549   */\n      0xff\n        /* \"#utility.yul\":8538:8543   */\n      dup3\n        /* \"#utility.yul\":8534:8550   */\n      and\n        /* \"#utility.yul\":8523:8550   */\n      swap1\n      pop\n        /* \"#utility.yul\":8470:8556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8562:8674   */\n    tag_421:\n        /* \"#utility.yul\":8645:8667   */\n      tag_550\n        /* \"#utility.yul\":8661:8666   */\n      dup2\n        /* \"#utility.yul\":8645:8667   */\n      tag_420\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":8640:8643   */\n      dup3\n        /* \"#utility.yul\":8633:8668   */\n      mstore\n        /* \"#utility.yul\":8562:8674   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8680:8894   */\n    tag_81:\n        /* \"#utility.yul\":8769:8773   */\n      0x00\n        /* \"#utility.yul\":8807:8809   */\n      0x20\n        /* \"#utility.yul\":8796:8805   */\n      dup3\n        /* \"#utility.yul\":8792:8810   */\n      add\n        /* \"#utility.yul\":8784:8810   */\n      swap1\n      pop\n        /* \"#utility.yul\":8820:8887   */\n      tag_552\n        /* \"#utility.yul\":8884:8885   */\n      0x00\n        /* \"#utility.yul\":8873:8882   */\n      dup4\n        /* \"#utility.yul\":8869:8886   */\n      add\n        /* \"#utility.yul\":8860:8866   */\n      dup5\n        /* \"#utility.yul\":8820:8887   */\n      tag_421\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8680:8894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8900:9574   */\n    tag_89:\n        /* \"#utility.yul\":8980:8986   */\n      0x00\n        /* \"#utility.yul\":8988:8994   */\n      dup1\n        /* \"#utility.yul\":8996:9002   */\n      0x00\n        /* \"#utility.yul\":9045:9047   */\n      0x40\n        /* \"#utility.yul\":9033:9042   */\n      dup5\n        /* \"#utility.yul\":9024:9031   */\n      dup7\n        /* \"#utility.yul\":9020:9043   */\n      sub\n        /* \"#utility.yul\":9016:9048   */\n      slt\n        /* \"#utility.yul\":9013:9132   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":9051:9130   */\n      tag_555\n      tag_392\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9013:9132   */\n    tag_554:\n        /* \"#utility.yul\":9171:9172   */\n      0x00\n        /* \"#utility.yul\":9196:9249   */\n      tag_556\n        /* \"#utility.yul\":9241:9248   */\n      dup7\n        /* \"#utility.yul\":9232:9238   */\n      dup3\n        /* \"#utility.yul\":9221:9230   */\n      dup8\n        /* \"#utility.yul\":9217:9239   */\n      add\n        /* \"#utility.yul\":9196:9249   */\n      tag_410\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9186:9249   */\n      swap4\n      pop\n        /* \"#utility.yul\":9142:9259   */\n      pop\n        /* \"#utility.yul\":9326:9328   */\n      0x20\n        /* \"#utility.yul\":9315:9324   */\n      dup5\n        /* \"#utility.yul\":9311:9329   */\n      add\n        /* \"#utility.yul\":9298:9330   */\n      calldataload\n        /* \"#utility.yul\":9357:9375   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9349:9355   */\n      dup2\n        /* \"#utility.yul\":9346:9376   */\n      gt\n        /* \"#utility.yul\":9343:9460   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":9379:9458   */\n      tag_558\n      tag_393\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9343:9460   */\n    tag_557:\n        /* \"#utility.yul\":9492:9557   */\n      tag_559\n        /* \"#utility.yul\":9549:9556   */\n      dup7\n        /* \"#utility.yul\":9540:9546   */\n      dup3\n        /* \"#utility.yul\":9529:9538   */\n      dup8\n        /* \"#utility.yul\":9525:9547   */\n      add\n        /* \"#utility.yul\":9492:9557   */\n      tag_414\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":9474:9557   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9269:9567   */\n      pop\n        /* \"#utility.yul\":8900:9574   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9580:9698   */\n    tag_422:\n        /* \"#utility.yul\":9667:9691   */\n      tag_561\n        /* \"#utility.yul\":9685:9690   */\n      dup2\n        /* \"#utility.yul\":9667:9691   */\n      tag_405\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9662:9665   */\n      dup3\n        /* \"#utility.yul\":9655:9692   */\n      mstore\n        /* \"#utility.yul\":9580:9698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:9926   */\n    tag_100:\n        /* \"#utility.yul\":9797:9801   */\n      0x00\n        /* \"#utility.yul\":9835:9837   */\n      0x20\n        /* \"#utility.yul\":9824:9833   */\n      dup3\n        /* \"#utility.yul\":9820:9838   */\n      add\n        /* \"#utility.yul\":9812:9838   */\n      swap1\n      pop\n        /* \"#utility.yul\":9848:9919   */\n      tag_563\n        /* \"#utility.yul\":9916:9917   */\n      0x00\n        /* \"#utility.yul\":9905:9914   */\n      dup4\n        /* \"#utility.yul\":9901:9918   */\n      add\n        /* \"#utility.yul\":9892:9898   */\n      dup5\n        /* \"#utility.yul\":9848:9919   */\n      tag_422\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9704:9926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10261   */\n    tag_106:\n        /* \"#utility.yul\":9991:9997   */\n      0x00\n        /* \"#utility.yul\":10040:10042   */\n      0x20\n        /* \"#utility.yul\":10028:10037   */\n      dup3\n        /* \"#utility.yul\":10019:10026   */\n      dup5\n        /* \"#utility.yul\":10015:10038   */\n      sub\n        /* \"#utility.yul\":10011:10043   */\n      slt\n        /* \"#utility.yul\":10008:10127   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":10046:10125   */\n      tag_566\n      tag_392\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10008:10127   */\n    tag_565:\n        /* \"#utility.yul\":10166:10167   */\n      0x00\n        /* \"#utility.yul\":10191:10244   */\n      tag_567\n        /* \"#utility.yul\":10236:10243   */\n      dup5\n        /* \"#utility.yul\":10227:10233   */\n      dup3\n        /* \"#utility.yul\":10216:10225   */\n      dup6\n        /* \"#utility.yul\":10212:10234   */\n      add\n        /* \"#utility.yul\":10191:10244   */\n      tag_407\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10181:10244   */\n      swap2\n      pop\n        /* \"#utility.yul\":10137:10254   */\n      pop\n        /* \"#utility.yul\":9932:10261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10267:10741   */\n    tag_141:\n        /* \"#utility.yul\":10335:10341   */\n      0x00\n        /* \"#utility.yul\":10343:10349   */\n      dup1\n        /* \"#utility.yul\":10392:10394   */\n      0x40\n        /* \"#utility.yul\":10380:10389   */\n      dup4\n        /* \"#utility.yul\":10371:10378   */\n      dup6\n        /* \"#utility.yul\":10367:10390   */\n      sub\n        /* \"#utility.yul\":10363:10395   */\n      slt\n        /* \"#utility.yul\":10360:10479   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":10398:10477   */\n      tag_570\n      tag_392\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10360:10479   */\n    tag_569:\n        /* \"#utility.yul\":10518:10519   */\n      0x00\n        /* \"#utility.yul\":10543:10596   */\n      tag_571\n        /* \"#utility.yul\":10588:10595   */\n      dup6\n        /* \"#utility.yul\":10579:10585   */\n      dup3\n        /* \"#utility.yul\":10568:10577   */\n      dup7\n        /* \"#utility.yul\":10564:10586   */\n      add\n        /* \"#utility.yul\":10543:10596   */\n      tag_407\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10533:10596   */\n      swap3\n      pop\n        /* \"#utility.yul\":10489:10606   */\n      pop\n        /* \"#utility.yul\":10645:10647   */\n      0x20\n        /* \"#utility.yul\":10671:10724   */\n      tag_572\n        /* \"#utility.yul\":10716:10723   */\n      dup6\n        /* \"#utility.yul\":10707:10713   */\n      dup3\n        /* \"#utility.yul\":10696:10705   */\n      dup7\n        /* \"#utility.yul\":10692:10714   */\n      add\n        /* \"#utility.yul\":10671:10724   */\n      tag_407\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":10661:10724   */\n      swap2\n      pop\n        /* \"#utility.yul\":10616:10734   */\n      pop\n        /* \"#utility.yul\":10267:10741   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10747:10927   */\n    tag_423:\n        /* \"#utility.yul\":10795:10872   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10792:10793   */\n      0x00\n        /* \"#utility.yul\":10785:10873   */\n      mstore\n        /* \"#utility.yul\":10892:10896   */\n      0x22\n        /* \"#utility.yul\":10889:10890   */\n      0x04\n        /* \"#utility.yul\":10882:10897   */\n      mstore\n        /* \"#utility.yul\":10916:10920   */\n      0x24\n        /* \"#utility.yul\":10913:10914   */\n      0x00\n        /* \"#utility.yul\":10906:10921   */\n      revert\n        /* \"#utility.yul\":10933:11253   */\n    tag_156:\n        /* \"#utility.yul\":10977:10983   */\n      0x00\n        /* \"#utility.yul\":11014:11015   */\n      0x02\n        /* \"#utility.yul\":11008:11012   */\n      dup3\n        /* \"#utility.yul\":11004:11016   */\n      div\n        /* \"#utility.yul\":10994:11016   */\n      swap1\n      pop\n        /* \"#utility.yul\":11061:11062   */\n      0x01\n        /* \"#utility.yul\":11055:11059   */\n      dup3\n        /* \"#utility.yul\":11051:11063   */\n      and\n        /* \"#utility.yul\":11082:11100   */\n      dup1\n        /* \"#utility.yul\":11072:11153   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":11138:11142   */\n      0x7f\n        /* \"#utility.yul\":11130:11136   */\n      dup3\n        /* \"#utility.yul\":11126:11143   */\n      and\n        /* \"#utility.yul\":11116:11143   */\n      swap2\n      pop\n        /* \"#utility.yul\":11072:11153   */\n    tag_575:\n        /* \"#utility.yul\":11200:11202   */\n      0x20\n        /* \"#utility.yul\":11192:11198   */\n      dup3\n        /* \"#utility.yul\":11189:11203   */\n      lt\n        /* \"#utility.yul\":11169:11187   */\n      dup2\n        /* \"#utility.yul\":11166:11204   */\n      sub\n        /* \"#utility.yul\":11163:11247   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":11219:11237   */\n      tag_577\n      tag_423\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":11163:11247   */\n    tag_576:\n        /* \"#utility.yul\":10984:11253   */\n      pop\n        /* \"#utility.yul\":10933:11253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11259:11424   */\n    tag_424:\n        /* \"#utility.yul\":11399:11416   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":11395:11396   */\n      0x00\n        /* \"#utility.yul\":11387:11393   */\n      dup3\n        /* \"#utility.yul\":11383:11397   */\n      add\n        /* \"#utility.yul\":11376:11417   */\n      mstore\n        /* \"#utility.yul\":11259:11424   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11430:11796   */\n    tag_425:\n        /* \"#utility.yul\":11572:11575   */\n      0x00\n        /* \"#utility.yul\":11593:11660   */\n      tag_580\n        /* \"#utility.yul\":11657:11659   */\n      0x0f\n        /* \"#utility.yul\":11652:11655   */\n      dup4\n        /* \"#utility.yul\":11593:11660   */\n      tag_400\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11586:11660   */\n      swap2\n      pop\n        /* \"#utility.yul\":11669:11762   */\n      tag_581\n        /* \"#utility.yul\":11758:11761   */\n      dup3\n        /* \"#utility.yul\":11669:11762   */\n      tag_424\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":11787:11789   */\n      0x20\n        /* \"#utility.yul\":11782:11785   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      add\n        /* \"#utility.yul\":11771:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11430:11796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11802:12221   */\n    tag_178:\n        /* \"#utility.yul\":11968:11972   */\n      0x00\n        /* \"#utility.yul\":12006:12008   */\n      0x20\n        /* \"#utility.yul\":11995:12004   */\n      dup3\n        /* \"#utility.yul\":11991:12009   */\n      add\n        /* \"#utility.yul\":11983:12009   */\n      swap1\n      pop\n        /* \"#utility.yul\":12055:12064   */\n      dup2\n        /* \"#utility.yul\":12049:12053   */\n      dup2\n        /* \"#utility.yul\":12045:12065   */\n      sub\n        /* \"#utility.yul\":12041:12042   */\n      0x00\n        /* \"#utility.yul\":12030:12039   */\n      dup4\n        /* \"#utility.yul\":12026:12043   */\n      add\n        /* \"#utility.yul\":12019:12066   */\n      mstore\n        /* \"#utility.yul\":12083:12214   */\n      tag_583\n        /* \"#utility.yul\":12209:12213   */\n      dup2\n        /* \"#utility.yul\":12083:12214   */\n      tag_425\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12075:12214   */\n      swap1\n      pop\n        /* \"#utility.yul\":11802:12221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12227:12396   */\n    tag_426:\n        /* \"#utility.yul\":12367:12388   */\n      0x52657761726420706f6f6c206e6f742073657400000000000000000000000000\n        /* \"#utility.yul\":12363:12364   */\n      0x00\n        /* \"#utility.yul\":12355:12361   */\n      dup3\n        /* \"#utility.yul\":12351:12365   */\n      add\n        /* \"#utility.yul\":12344:12389   */\n      mstore\n        /* \"#utility.yul\":12227:12396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12402:12768   */\n    tag_427:\n        /* \"#utility.yul\":12544:12547   */\n      0x00\n        /* \"#utility.yul\":12565:12632   */\n      tag_586\n        /* \"#utility.yul\":12629:12631   */\n      0x13\n        /* \"#utility.yul\":12624:12627   */\n      dup4\n        /* \"#utility.yul\":12565:12632   */\n      tag_400\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12558:12632   */\n      swap2\n      pop\n        /* \"#utility.yul\":12641:12734   */\n      tag_587\n        /* \"#utility.yul\":12730:12733   */\n      dup3\n        /* \"#utility.yul\":12641:12734   */\n      tag_426\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":12759:12761   */\n      0x20\n        /* \"#utility.yul\":12754:12757   */\n      dup3\n        /* \"#utility.yul\":12750:12762   */\n      add\n        /* \"#utility.yul\":12743:12762   */\n      swap1\n      pop\n        /* \"#utility.yul\":12402:12768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12774:13193   */\n    tag_182:\n        /* \"#utility.yul\":12940:12944   */\n      0x00\n        /* \"#utility.yul\":12978:12980   */\n      0x20\n        /* \"#utility.yul\":12967:12976   */\n      dup3\n        /* \"#utility.yul\":12963:12981   */\n      add\n        /* \"#utility.yul\":12955:12981   */\n      swap1\n      pop\n        /* \"#utility.yul\":13027:13036   */\n      dup2\n        /* \"#utility.yul\":13021:13025   */\n      dup2\n        /* \"#utility.yul\":13017:13037   */\n      sub\n        /* \"#utility.yul\":13013:13014   */\n      0x00\n        /* \"#utility.yul\":13002:13011   */\n      dup4\n        /* \"#utility.yul\":12998:13015   */\n      add\n        /* \"#utility.yul\":12991:13038   */\n      mstore\n        /* \"#utility.yul\":13055:13186   */\n      tag_589\n        /* \"#utility.yul\":13181:13185   */\n      dup2\n        /* \"#utility.yul\":13055:13186   */\n      tag_427\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13047:13186   */\n      swap1\n      pop\n        /* \"#utility.yul\":12774:13193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13199:13381   */\n    tag_428:\n        /* \"#utility.yul\":13339:13373   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13327:13333   */\n      dup3\n        /* \"#utility.yul\":13323:13337   */\n      add\n        /* \"#utility.yul\":13316:13374   */\n      mstore\n        /* \"#utility.yul\":13199:13381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13387:13753   */\n    tag_429:\n        /* \"#utility.yul\":13529:13532   */\n      0x00\n        /* \"#utility.yul\":13550:13617   */\n      tag_592\n        /* \"#utility.yul\":13614:13616   */\n      0x20\n        /* \"#utility.yul\":13609:13612   */\n      dup4\n        /* \"#utility.yul\":13550:13617   */\n      tag_400\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":13543:13617   */\n      swap2\n      pop\n        /* \"#utility.yul\":13626:13719   */\n      tag_593\n        /* \"#utility.yul\":13715:13718   */\n      dup3\n        /* \"#utility.yul\":13626:13719   */\n      tag_428\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":13744:13746   */\n      0x20\n        /* \"#utility.yul\":13739:13742   */\n      dup3\n        /* \"#utility.yul\":13735:13747   */\n      add\n        /* \"#utility.yul\":13728:13747   */\n      swap1\n      pop\n        /* \"#utility.yul\":13387:13753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13759:14178   */\n    tag_185:\n        /* \"#utility.yul\":13925:13929   */\n      0x00\n        /* \"#utility.yul\":13963:13965   */\n      0x20\n        /* \"#utility.yul\":13952:13961   */\n      dup3\n        /* \"#utility.yul\":13948:13966   */\n      add\n        /* \"#utility.yul\":13940:13966   */\n      swap1\n      pop\n        /* \"#utility.yul\":14012:14021   */\n      dup2\n        /* \"#utility.yul\":14006:14010   */\n      dup2\n        /* \"#utility.yul\":14002:14022   */\n      sub\n        /* \"#utility.yul\":13998:13999   */\n      0x00\n        /* \"#utility.yul\":13987:13996   */\n      dup4\n        /* \"#utility.yul\":13983:14000   */\n      add\n        /* \"#utility.yul\":13976:14023   */\n      mstore\n        /* \"#utility.yul\":14040:14171   */\n      tag_595\n        /* \"#utility.yul\":14166:14170   */\n      dup2\n        /* \"#utility.yul\":14040:14171   */\n      tag_429\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":14032:14171   */\n      swap1\n      pop\n        /* \"#utility.yul\":13759:14178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14184:14366   */\n    tag_430:\n        /* \"#utility.yul\":14324:14358   */\n      0x496e73756666696369656e742072657761726420706f6f6c2062616c616e6365\n        /* \"#utility.yul\":14320:14321   */\n      0x00\n        /* \"#utility.yul\":14312:14318   */\n      dup3\n        /* \"#utility.yul\":14308:14322   */\n      add\n        /* \"#utility.yul\":14301:14359   */\n      mstore\n        /* \"#utility.yul\":14184:14366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14372:14738   */\n    tag_431:\n        /* \"#utility.yul\":14514:14517   */\n      0x00\n        /* \"#utility.yul\":14535:14602   */\n      tag_598\n        /* \"#utility.yul\":14599:14601   */\n      0x20\n        /* \"#utility.yul\":14594:14597   */\n      dup4\n        /* \"#utility.yul\":14535:14602   */\n      tag_400\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":14528:14602   */\n      swap2\n      pop\n        /* \"#utility.yul\":14611:14704   */\n      tag_599\n        /* \"#utility.yul\":14700:14703   */\n      dup3\n        /* \"#utility.yul\":14611:14704   */\n      tag_430\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":14729:14731   */\n      0x20\n        /* \"#utility.yul\":14724:14727   */\n      dup3\n        /* \"#utility.yul\":14720:14732   */\n      add\n        /* \"#utility.yul\":14713:14732   */\n      swap1\n      pop\n        /* \"#utility.yul\":14372:14738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14744:15163   */\n    tag_189:\n        /* \"#utility.yul\":14910:14914   */\n      0x00\n        /* \"#utility.yul\":14948:14950   */\n      0x20\n        /* \"#utility.yul\":14937:14946   */\n      dup3\n        /* \"#utility.yul\":14933:14951   */\n      add\n        /* \"#utility.yul\":14925:14951   */\n      swap1\n      pop\n        /* \"#utility.yul\":14997:15006   */\n      dup2\n        /* \"#utility.yul\":14991:14995   */\n      dup2\n        /* \"#utility.yul\":14987:15007   */\n      sub\n        /* \"#utility.yul\":14983:14984   */\n      0x00\n        /* \"#utility.yul\":14972:14981   */\n      dup4\n        /* \"#utility.yul\":14968:14985   */\n      add\n        /* \"#utility.yul\":14961:15008   */\n      mstore\n        /* \"#utility.yul\":15025:15156   */\n      tag_601\n        /* \"#utility.yul\":15151:15155   */\n      dup2\n        /* \"#utility.yul\":15025:15156   */\n      tag_431\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":15017:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":14744:15163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15169:15315   */\n    tag_432:\n        /* \"#utility.yul\":15266:15272   */\n      dup3\n        /* \"#utility.yul\":15261:15264   */\n      dup2\n        /* \"#utility.yul\":15256:15259   */\n      dup4\n        /* \"#utility.yul\":15243:15273   */\n      calldatacopy\n        /* \"#utility.yul\":15307:15308   */\n      0x00\n        /* \"#utility.yul\":15298:15304   */\n      dup4\n        /* \"#utility.yul\":15293:15296   */\n      dup4\n        /* \"#utility.yul\":15289:15305   */\n      add\n        /* \"#utility.yul\":15282:15309   */\n      mstore\n        /* \"#utility.yul\":15169:15315   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15345:15662   */\n    tag_433:\n        /* \"#utility.yul\":15443:15446   */\n      0x00\n        /* \"#utility.yul\":15464:15535   */\n      tag_604\n        /* \"#utility.yul\":15528:15534   */\n      dup4\n        /* \"#utility.yul\":15523:15526   */\n      dup6\n        /* \"#utility.yul\":15464:15535   */\n      tag_400\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15457:15535   */\n      swap4\n      pop\n        /* \"#utility.yul\":15545:15601   */\n      tag_605\n        /* \"#utility.yul\":15594:15600   */\n      dup4\n        /* \"#utility.yul\":15589:15592   */\n      dup6\n        /* \"#utility.yul\":15582:15587   */\n      dup5\n        /* \"#utility.yul\":15545:15601   */\n      tag_432\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15626:15655   */\n      tag_606\n        /* \"#utility.yul\":15648:15654   */\n      dup4\n        /* \"#utility.yul\":15626:15655   */\n      tag_402\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15621:15624   */\n      dup5\n        /* \"#utility.yul\":15617:15656   */\n      add\n        /* \"#utility.yul\":15610:15656   */\n      swap1\n      pop\n        /* \"#utility.yul\":15345:15662   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15668:16111   */\n    tag_193:\n        /* \"#utility.yul\":15819:15823   */\n      0x00\n        /* \"#utility.yul\":15857:15859   */\n      0x40\n        /* \"#utility.yul\":15846:15855   */\n      dup3\n        /* \"#utility.yul\":15842:15860   */\n      add\n        /* \"#utility.yul\":15834:15860   */\n      swap1\n      pop\n        /* \"#utility.yul\":15870:15941   */\n      tag_608\n        /* \"#utility.yul\":15938:15939   */\n      0x00\n        /* \"#utility.yul\":15927:15936   */\n      dup4\n        /* \"#utility.yul\":15923:15940   */\n      add\n        /* \"#utility.yul\":15914:15920   */\n      dup7\n        /* \"#utility.yul\":15870:15941   */\n      tag_415\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":15988:15997   */\n      dup2\n        /* \"#utility.yul\":15982:15986   */\n      dup2\n        /* \"#utility.yul\":15978:15998   */\n      sub\n        /* \"#utility.yul\":15973:15975   */\n      0x20\n        /* \"#utility.yul\":15962:15971   */\n      dup4\n        /* \"#utility.yul\":15958:15976   */\n      add\n        /* \"#utility.yul\":15951:15999   */\n      mstore\n        /* \"#utility.yul\":16016:16104   */\n      tag_609\n        /* \"#utility.yul\":16099:16103   */\n      dup2\n        /* \"#utility.yul\":16090:16096   */\n      dup5\n        /* \"#utility.yul\":16082:16088   */\n      dup7\n        /* \"#utility.yul\":16016:16104   */\n      tag_433\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16008:16104   */\n      swap1\n      pop\n        /* \"#utility.yul\":15668:16111   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16117:16283   */\n    tag_434:\n        /* \"#utility.yul\":16257:16275   */\n      0x5472656173757279206e6f742073657400000000000000000000000000000000\n        /* \"#utility.yul\":16253:16254   */\n      0x00\n        /* \"#utility.yul\":16245:16251   */\n      dup3\n        /* \"#utility.yul\":16241:16255   */\n      add\n        /* \"#utility.yul\":16234:16276   */\n      mstore\n        /* \"#utility.yul\":16117:16283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16289:16655   */\n    tag_435:\n        /* \"#utility.yul\":16431:16434   */\n      0x00\n        /* \"#utility.yul\":16452:16519   */\n      tag_612\n        /* \"#utility.yul\":16516:16518   */\n      0x10\n        /* \"#utility.yul\":16511:16514   */\n      dup4\n        /* \"#utility.yul\":16452:16519   */\n      tag_400\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16445:16519   */\n      swap2\n      pop\n        /* \"#utility.yul\":16528:16621   */\n      tag_613\n        /* \"#utility.yul\":16617:16620   */\n      dup3\n        /* \"#utility.yul\":16528:16621   */\n      tag_434\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16646:16648   */\n      0x20\n        /* \"#utility.yul\":16641:16644   */\n      dup3\n        /* \"#utility.yul\":16637:16649   */\n      add\n        /* \"#utility.yul\":16630:16649   */\n      swap1\n      pop\n        /* \"#utility.yul\":16289:16655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16661:17080   */\n    tag_228:\n        /* \"#utility.yul\":16827:16831   */\n      0x00\n        /* \"#utility.yul\":16865:16867   */\n      0x20\n        /* \"#utility.yul\":16854:16863   */\n      dup3\n        /* \"#utility.yul\":16850:16868   */\n      add\n        /* \"#utility.yul\":16842:16868   */\n      swap1\n      pop\n        /* \"#utility.yul\":16914:16923   */\n      dup2\n        /* \"#utility.yul\":16908:16912   */\n      dup2\n        /* \"#utility.yul\":16904:16924   */\n      sub\n        /* \"#utility.yul\":16900:16901   */\n      0x00\n        /* \"#utility.yul\":16889:16898   */\n      dup4\n        /* \"#utility.yul\":16885:16902   */\n      add\n        /* \"#utility.yul\":16878:16925   */\n      mstore\n        /* \"#utility.yul\":16942:17073   */\n      tag_615\n        /* \"#utility.yul\":17068:17072   */\n      dup2\n        /* \"#utility.yul\":16942:17073   */\n      tag_435\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":16934:17073   */\n      swap1\n      pop\n        /* \"#utility.yul\":16661:17080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17086:17256   */\n    tag_436:\n        /* \"#utility.yul\":17226:17248   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":17222:17223   */\n      0x00\n        /* \"#utility.yul\":17214:17220   */\n      dup3\n        /* \"#utility.yul\":17210:17224   */\n      add\n        /* \"#utility.yul\":17203:17249   */\n      mstore\n        /* \"#utility.yul\":17086:17256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17262:17628   */\n    tag_437:\n        /* \"#utility.yul\":17404:17407   */\n      0x00\n        /* \"#utility.yul\":17425:17492   */\n      tag_618\n        /* \"#utility.yul\":17489:17491   */\n      0x14\n        /* \"#utility.yul\":17484:17487   */\n      dup4\n        /* \"#utility.yul\":17425:17492   */\n      tag_400\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":17418:17492   */\n      swap2\n      pop\n        /* \"#utility.yul\":17501:17594   */\n      tag_619\n        /* \"#utility.yul\":17590:17593   */\n      dup3\n        /* \"#utility.yul\":17501:17594   */\n      tag_436\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17619:17621   */\n      0x20\n        /* \"#utility.yul\":17614:17617   */\n      dup3\n        /* \"#utility.yul\":17610:17622   */\n      add\n        /* \"#utility.yul\":17603:17622   */\n      swap1\n      pop\n        /* \"#utility.yul\":17262:17628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17634:18053   */\n    tag_234:\n        /* \"#utility.yul\":17800:17804   */\n      0x00\n        /* \"#utility.yul\":17838:17840   */\n      0x20\n        /* \"#utility.yul\":17827:17836   */\n      dup3\n        /* \"#utility.yul\":17823:17841   */\n      add\n        /* \"#utility.yul\":17815:17841   */\n      swap1\n      pop\n        /* \"#utility.yul\":17887:17896   */\n      dup2\n        /* \"#utility.yul\":17881:17885   */\n      dup2\n        /* \"#utility.yul\":17877:17897   */\n      sub\n        /* \"#utility.yul\":17873:17874   */\n      0x00\n        /* \"#utility.yul\":17862:17871   */\n      dup4\n        /* \"#utility.yul\":17858:17875   */\n      add\n        /* \"#utility.yul\":17851:17898   */\n      mstore\n        /* \"#utility.yul\":17915:18046   */\n      tag_621\n        /* \"#utility.yul\":18041:18045   */\n      dup2\n        /* \"#utility.yul\":17915:18046   */\n      tag_437\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":17907:18046   */\n      swap1\n      pop\n        /* \"#utility.yul\":17634:18053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18059:18234   */\n    tag_438:\n        /* \"#utility.yul\":18199:18226   */\n      0x43616e6e6f74207265636f766572204c4e5420746f6b656e7300000000000000\n        /* \"#utility.yul\":18195:18196   */\n      0x00\n        /* \"#utility.yul\":18187:18193   */\n      dup3\n        /* \"#utility.yul\":18183:18197   */\n      add\n        /* \"#utility.yul\":18176:18227   */\n      mstore\n        /* \"#utility.yul\":18059:18234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18240:18606   */\n    tag_439:\n        /* \"#utility.yul\":18382:18385   */\n      0x00\n        /* \"#utility.yul\":18403:18470   */\n      tag_624\n        /* \"#utility.yul\":18467:18469   */\n      0x19\n        /* \"#utility.yul\":18462:18465   */\n      dup4\n        /* \"#utility.yul\":18403:18470   */\n      tag_400\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":18396:18470   */\n      swap2\n      pop\n        /* \"#utility.yul\":18479:18572   */\n      tag_625\n        /* \"#utility.yul\":18568:18571   */\n      dup3\n        /* \"#utility.yul\":18479:18572   */\n      tag_438\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":18597:18599   */\n      0x20\n        /* \"#utility.yul\":18592:18595   */\n      dup3\n        /* \"#utility.yul\":18588:18600   */\n      add\n        /* \"#utility.yul\":18581:18600   */\n      swap1\n      pop\n        /* \"#utility.yul\":18240:18606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18612:19031   */\n    tag_247:\n        /* \"#utility.yul\":18778:18782   */\n      0x00\n        /* \"#utility.yul\":18816:18818   */\n      0x20\n        /* \"#utility.yul\":18805:18814   */\n      dup3\n        /* \"#utility.yul\":18801:18819   */\n      add\n        /* \"#utility.yul\":18793:18819   */\n      swap1\n      pop\n        /* \"#utility.yul\":18865:18874   */\n      dup2\n        /* \"#utility.yul\":18859:18863   */\n      dup2\n        /* \"#utility.yul\":18855:18875   */\n      sub\n        /* \"#utility.yul\":18851:18852   */\n      0x00\n        /* \"#utility.yul\":18840:18849   */\n      dup4\n        /* \"#utility.yul\":18836:18853   */\n      add\n        /* \"#utility.yul\":18829:18876   */\n      mstore\n        /* \"#utility.yul\":18893:19024   */\n      tag_627\n        /* \"#utility.yul\":19019:19023   */\n      dup2\n        /* \"#utility.yul\":18893:19024   */\n      tag_439\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":18885:19024   */\n      swap1\n      pop\n        /* \"#utility.yul\":18612:19031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19037:19369   */\n    tag_251:\n        /* \"#utility.yul\":19158:19162   */\n      0x00\n        /* \"#utility.yul\":19196:19198   */\n      0x40\n        /* \"#utility.yul\":19185:19194   */\n      dup3\n        /* \"#utility.yul\":19181:19199   */\n      add\n        /* \"#utility.yul\":19173:19199   */\n      swap1\n      pop\n        /* \"#utility.yul\":19209:19280   */\n      tag_629\n        /* \"#utility.yul\":19277:19278   */\n      0x00\n        /* \"#utility.yul\":19266:19275   */\n      dup4\n        /* \"#utility.yul\":19262:19279   */\n      add\n        /* \"#utility.yul\":19253:19259   */\n      dup6\n        /* \"#utility.yul\":19209:19280   */\n      tag_422\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":19290:19362   */\n      tag_630\n        /* \"#utility.yul\":19358:19360   */\n      0x20\n        /* \"#utility.yul\":19347:19356   */\n      dup4\n        /* \"#utility.yul\":19343:19361   */\n      add\n        /* \"#utility.yul\":19334:19340   */\n      dup5\n        /* \"#utility.yul\":19290:19362   */\n      tag_415\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":19037:19369   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19375:19491   */\n    tag_440:\n        /* \"#utility.yul\":19445:19466   */\n      tag_632\n        /* \"#utility.yul\":19460:19465   */\n      dup2\n        /* \"#utility.yul\":19445:19466   */\n      tag_397\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":19438:19443   */\n      dup2\n        /* \"#utility.yul\":19435:19467   */\n      eq\n        /* \"#utility.yul\":19425:19485   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":19481:19482   */\n      0x00\n        /* \"#utility.yul\":19478:19479   */\n      dup1\n        /* \"#utility.yul\":19471:19483   */\n      revert\n        /* \"#utility.yul\":19425:19485   */\n    tag_633:\n        /* \"#utility.yul\":19375:19491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19497:19634   */\n    tag_441:\n        /* \"#utility.yul\":19551:19556   */\n      0x00\n        /* \"#utility.yul\":19582:19588   */\n      dup2\n        /* \"#utility.yul\":19576:19589   */\n      mload\n        /* \"#utility.yul\":19567:19589   */\n      swap1\n      pop\n        /* \"#utility.yul\":19598:19628   */\n      tag_635\n        /* \"#utility.yul\":19622:19627   */\n      dup2\n        /* \"#utility.yul\":19598:19628   */\n      tag_440\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19497:19634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19640:19985   */\n    tag_255:\n        /* \"#utility.yul\":19707:19713   */\n      0x00\n        /* \"#utility.yul\":19756:19758   */\n      0x20\n        /* \"#utility.yul\":19744:19753   */\n      dup3\n        /* \"#utility.yul\":19735:19742   */\n      dup5\n        /* \"#utility.yul\":19731:19754   */\n      sub\n        /* \"#utility.yul\":19727:19759   */\n      slt\n        /* \"#utility.yul\":19724:19843   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":19762:19841   */\n      tag_638\n      tag_392\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":19724:19843   */\n    tag_637:\n        /* \"#utility.yul\":19882:19883   */\n      0x00\n        /* \"#utility.yul\":19907:19968   */\n      tag_639\n        /* \"#utility.yul\":19960:19967   */\n      dup5\n        /* \"#utility.yul\":19951:19957   */\n      dup3\n        /* \"#utility.yul\":19940:19949   */\n      dup6\n        /* \"#utility.yul\":19936:19958   */\n      add\n        /* \"#utility.yul\":19907:19968   */\n      tag_441\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":19897:19968   */\n      swap2\n      pop\n        /* \"#utility.yul\":19853:19978   */\n      pop\n        /* \"#utility.yul\":19640:19985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19991:20157   */\n    tag_442:\n        /* \"#utility.yul\":20131:20149   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":20127:20128   */\n      0x00\n        /* \"#utility.yul\":20119:20125   */\n      dup3\n        /* \"#utility.yul\":20115:20129   */\n      add\n        /* \"#utility.yul\":20108:20150   */\n      mstore\n        /* \"#utility.yul\":19991:20157   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20163:20529   */\n    tag_443:\n        /* \"#utility.yul\":20305:20308   */\n      0x00\n        /* \"#utility.yul\":20326:20393   */\n      tag_642\n        /* \"#utility.yul\":20390:20392   */\n      0x10\n        /* \"#utility.yul\":20385:20388   */\n      dup4\n        /* \"#utility.yul\":20326:20393   */\n      tag_400\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":20319:20393   */\n      swap2\n      pop\n        /* \"#utility.yul\":20402:20495   */\n      tag_643\n        /* \"#utility.yul\":20491:20494   */\n      dup3\n        /* \"#utility.yul\":20402:20495   */\n      tag_442\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":20520:20522   */\n      0x20\n        /* \"#utility.yul\":20515:20518   */\n      dup3\n        /* \"#utility.yul\":20511:20523   */\n      add\n        /* \"#utility.yul\":20504:20523   */\n      swap1\n      pop\n        /* \"#utility.yul\":20163:20529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20535:20954   */\n    tag_316:\n        /* \"#utility.yul\":20701:20705   */\n      0x00\n        /* \"#utility.yul\":20739:20741   */\n      0x20\n        /* \"#utility.yul\":20728:20737   */\n      dup3\n        /* \"#utility.yul\":20724:20742   */\n      add\n        /* \"#utility.yul\":20716:20742   */\n      swap1\n      pop\n        /* \"#utility.yul\":20788:20797   */\n      dup2\n        /* \"#utility.yul\":20782:20786   */\n      dup2\n        /* \"#utility.yul\":20778:20798   */\n      sub\n        /* \"#utility.yul\":20774:20775   */\n      0x00\n        /* \"#utility.yul\":20763:20772   */\n      dup4\n        /* \"#utility.yul\":20759:20776   */\n      add\n        /* \"#utility.yul\":20752:20799   */\n      mstore\n        /* \"#utility.yul\":20816:20947   */\n      tag_645\n        /* \"#utility.yul\":20942:20946   */\n      dup2\n        /* \"#utility.yul\":20816:20947   */\n      tag_443\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":20808:20947   */\n      swap1\n      pop\n        /* \"#utility.yul\":20535:20954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20960:21141   */\n    tag_444:\n        /* \"#utility.yul\":21100:21133   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":21096:21097   */\n      0x00\n        /* \"#utility.yul\":21088:21094   */\n      dup3\n        /* \"#utility.yul\":21084:21098   */\n      add\n        /* \"#utility.yul\":21077:21134   */\n      mstore\n        /* \"#utility.yul\":20960:21141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21147:21513   */\n    tag_445:\n        /* \"#utility.yul\":21289:21292   */\n      0x00\n        /* \"#utility.yul\":21310:21377   */\n      tag_648\n        /* \"#utility.yul\":21374:21376   */\n      0x1f\n        /* \"#utility.yul\":21369:21372   */\n      dup4\n        /* \"#utility.yul\":21310:21377   */\n      tag_400\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":21303:21377   */\n      swap2\n      pop\n        /* \"#utility.yul\":21386:21479   */\n      tag_649\n        /* \"#utility.yul\":21475:21478   */\n      dup3\n        /* \"#utility.yul\":21386:21479   */\n      tag_444\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":21504:21506   */\n      0x20\n        /* \"#utility.yul\":21499:21502   */\n      dup3\n        /* \"#utility.yul\":21495:21507   */\n      add\n        /* \"#utility.yul\":21488:21507   */\n      swap1\n      pop\n        /* \"#utility.yul\":21147:21513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21519:21938   */\n    tag_320:\n        /* \"#utility.yul\":21685:21689   */\n      0x00\n        /* \"#utility.yul\":21723:21725   */\n      0x20\n        /* \"#utility.yul\":21712:21721   */\n      dup3\n        /* \"#utility.yul\":21708:21726   */\n      add\n        /* \"#utility.yul\":21700:21726   */\n      swap1\n      pop\n        /* \"#utility.yul\":21772:21781   */\n      dup2\n        /* \"#utility.yul\":21766:21770   */\n      dup2\n        /* \"#utility.yul\":21762:21782   */\n      sub\n        /* \"#utility.yul\":21758:21759   */\n      0x00\n        /* \"#utility.yul\":21747:21756   */\n      dup4\n        /* \"#utility.yul\":21743:21760   */\n      add\n        /* \"#utility.yul\":21736:21783   */\n      mstore\n        /* \"#utility.yul\":21800:21931   */\n      tag_651\n        /* \"#utility.yul\":21926:21930   */\n      dup2\n        /* \"#utility.yul\":21800:21931   */\n      tag_445\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21792:21931   */\n      swap1\n      pop\n        /* \"#utility.yul\":21519:21938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21944:22386   */\n    tag_334:\n        /* \"#utility.yul\":22093:22097   */\n      0x00\n        /* \"#utility.yul\":22131:22133   */\n      0x60\n        /* \"#utility.yul\":22120:22129   */\n      dup3\n        /* \"#utility.yul\":22116:22134   */\n      add\n        /* \"#utility.yul\":22108:22134   */\n      swap1\n      pop\n        /* \"#utility.yul\":22144:22215   */\n      tag_653\n        /* \"#utility.yul\":22212:22213   */\n      0x00\n        /* \"#utility.yul\":22201:22210   */\n      dup4\n        /* \"#utility.yul\":22197:22214   */\n      add\n        /* \"#utility.yul\":22188:22194   */\n      dup7\n        /* \"#utility.yul\":22144:22215   */\n      tag_422\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":22225:22297   */\n      tag_654\n        /* \"#utility.yul\":22293:22295   */\n      0x20\n        /* \"#utility.yul\":22282:22291   */\n      dup4\n        /* \"#utility.yul\":22278:22296   */\n      add\n        /* \"#utility.yul\":22269:22275   */\n      dup6\n        /* \"#utility.yul\":22225:22297   */\n      tag_415\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":22307:22379   */\n      tag_655\n        /* \"#utility.yul\":22375:22377   */\n      0x40\n        /* \"#utility.yul\":22364:22373   */\n      dup4\n        /* \"#utility.yul\":22360:22378   */\n      add\n        /* \"#utility.yul\":22351:22357   */\n      dup5\n        /* \"#utility.yul\":22307:22379   */\n      tag_415\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":21944:22386   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22392:22724   */\n    tag_375:\n        /* \"#utility.yul\":22513:22517   */\n      0x00\n        /* \"#utility.yul\":22551:22553   */\n      0x40\n        /* \"#utility.yul\":22540:22549   */\n      dup3\n        /* \"#utility.yul\":22536:22554   */\n      add\n        /* \"#utility.yul\":22528:22554   */\n      swap1\n      pop\n        /* \"#utility.yul\":22564:22635   */\n      tag_657\n        /* \"#utility.yul\":22632:22633   */\n      0x00\n        /* \"#utility.yul\":22621:22630   */\n      dup4\n        /* \"#utility.yul\":22617:22634   */\n      add\n        /* \"#utility.yul\":22608:22614   */\n      dup6\n        /* \"#utility.yul\":22564:22635   */\n      tag_422\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":22645:22717   */\n      tag_658\n        /* \"#utility.yul\":22713:22715   */\n      0x20\n        /* \"#utility.yul\":22702:22711   */\n      dup4\n        /* \"#utility.yul\":22698:22716   */\n      add\n        /* \"#utility.yul\":22689:22695   */\n      dup5\n        /* \"#utility.yul\":22645:22717   */\n      tag_419\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":22392:22724   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22730:22910   */\n    tag_446:\n        /* \"#utility.yul\":22778:22855   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22775:22776   */\n      0x00\n        /* \"#utility.yul\":22768:22856   */\n      mstore\n        /* \"#utility.yul\":22875:22879   */\n      0x11\n        /* \"#utility.yul\":22872:22873   */\n      0x04\n        /* \"#utility.yul\":22865:22880   */\n      mstore\n        /* \"#utility.yul\":22899:22903   */\n      0x24\n        /* \"#utility.yul\":22896:22897   */\n      0x00\n        /* \"#utility.yul\":22889:22904   */\n      revert\n        /* \"#utility.yul\":22916:23107   */\n    tag_379:\n        /* \"#utility.yul\":22956:22959   */\n      0x00\n        /* \"#utility.yul\":22975:22995   */\n      tag_661\n        /* \"#utility.yul\":22993:22994   */\n      dup3\n        /* \"#utility.yul\":22975:22995   */\n      tag_408\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":22970:22995   */\n      swap2\n      pop\n        /* \"#utility.yul\":23009:23029   */\n      tag_662\n        /* \"#utility.yul\":23027:23028   */\n      dup4\n        /* \"#utility.yul\":23009:23029   */\n      tag_408\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":23004:23029   */\n      swap3\n      pop\n        /* \"#utility.yul\":23052:23053   */\n      dup3\n        /* \"#utility.yul\":23049:23050   */\n      dup3\n        /* \"#utility.yul\":23045:23054   */\n      add\n        /* \"#utility.yul\":23038:23054   */\n      swap1\n      pop\n        /* \"#utility.yul\":23073:23076   */\n      dup1\n        /* \"#utility.yul\":23070:23071   */\n      dup3\n        /* \"#utility.yul\":23067:23077   */\n      gt\n        /* \"#utility.yul\":23064:23100   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":23080:23098   */\n      tag_664\n      tag_446\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":23064:23100   */\n    tag_663:\n        /* \"#utility.yul\":22916:23107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23113:23283   */\n    tag_447:\n        /* \"#utility.yul\":23253:23275   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":23249:23250   */\n      0x00\n        /* \"#utility.yul\":23241:23247   */\n      dup3\n        /* \"#utility.yul\":23237:23251   */\n      add\n        /* \"#utility.yul\":23230:23276   */\n      mstore\n        /* \"#utility.yul\":23113:23283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23289:23655   */\n    tag_448:\n        /* \"#utility.yul\":23431:23434   */\n      0x00\n        /* \"#utility.yul\":23452:23519   */\n      tag_667\n        /* \"#utility.yul\":23516:23518   */\n      0x14\n        /* \"#utility.yul\":23511:23514   */\n      dup4\n        /* \"#utility.yul\":23452:23519   */\n      tag_400\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":23445:23519   */\n      swap2\n      pop\n        /* \"#utility.yul\":23528:23621   */\n      tag_668\n        /* \"#utility.yul\":23617:23620   */\n      dup3\n        /* \"#utility.yul\":23528:23621   */\n      tag_447\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":23646:23648   */\n      0x20\n        /* \"#utility.yul\":23641:23644   */\n      dup3\n        /* \"#utility.yul\":23637:23649   */\n      add\n        /* \"#utility.yul\":23630:23649   */\n      swap1\n      pop\n        /* \"#utility.yul\":23289:23655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23661:24080   */\n    tag_390:\n        /* \"#utility.yul\":23827:23831   */\n      0x00\n        /* \"#utility.yul\":23865:23867   */\n      0x20\n        /* \"#utility.yul\":23854:23863   */\n      dup3\n        /* \"#utility.yul\":23850:23868   */\n      add\n        /* \"#utility.yul\":23842:23868   */\n      swap1\n      pop\n        /* \"#utility.yul\":23914:23923   */\n      dup2\n        /* \"#utility.yul\":23908:23912   */\n      dup2\n        /* \"#utility.yul\":23904:23924   */\n      sub\n        /* \"#utility.yul\":23900:23901   */\n      0x00\n        /* \"#utility.yul\":23889:23898   */\n      dup4\n        /* \"#utility.yul\":23885:23902   */\n      add\n        /* \"#utility.yul\":23878:23925   */\n      mstore\n        /* \"#utility.yul\":23942:24073   */\n      tag_670\n        /* \"#utility.yul\":24068:24072   */\n      dup2\n        /* \"#utility.yul\":23942:24073   */\n      tag_448\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":23934:24073   */\n      swap1\n      pop\n        /* \"#utility.yul\":23661:24080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207c78689c4a88594a8d58d7e7e4f1165fa54ff68396bf944b4ec72292ed96148b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1616": {
									"entryPoint": null,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_430": {
									"entryPoint": null,
									"id": 430,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 1019,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1192": {
									"entryPoint": 881,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1468": {
									"entryPoint": 1919,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_526": {
									"entryPoint": 678,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1159": {
									"entryPoint": 1271,
									"id": 1159,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_1854": {
									"entryPoint": 873,
									"id": 1854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 1819,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10797:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:13",
														"type": ""
													}
												],
												"src": "1202:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:13"
															},
															"nodeType": "YulIf",
															"src": "1818:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:13"
															},
															"nodeType": "YulIf",
															"src": "1909:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													}
												],
												"src": "1679:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "2005:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2152:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:13",
														"type": ""
													}
												],
												"src": "2251:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:13",
														"type": ""
													}
												],
												"src": "2364:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:13",
														"type": ""
													}
												],
												"src": "2763:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:13",
														"type": ""
													}
												],
												"src": "2846:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:13",
														"type": ""
													}
												],
												"src": "2912:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:13",
														"type": ""
													}
												],
												"src": "3060:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:13",
														"type": ""
													}
												],
												"src": "3141:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:13",
														"type": ""
													}
												],
												"src": "3416:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:13",
														"type": ""
													}
												],
												"src": "3495:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:13",
																"statements": []
															},
															"src": "3750:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:13",
														"type": ""
													}
												],
												"src": "3690:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:13"
															},
															"nodeType": "YulIf",
															"src": "3972:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:13",
														"type": ""
													}
												],
												"src": "3882:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:13",
														"type": ""
													}
												],
												"src": "4431:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:13",
														"type": ""
													}
												],
												"src": "4554:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:13",
														"type": ""
													}
												],
												"src": "4728:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:13"
															},
															"nodeType": "YulIf",
															"src": "5233:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:13",
																					"statements": []
																				},
																				"src": "5719:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"src": "5028:1395:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6809:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6940:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7028:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6999:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7009:8:13",
														"type": ""
													}
												],
												"src": "6967:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7148:775:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7158:15:13",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "7167:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7182:14:13",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "7191:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7240:677:13",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7328:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:13"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:13"
																		},
																		"nodeType": "YulIf",
																		"src": "7300:50:13"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7395:419:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7775:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:13"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:13"
																		},
																		"nodeType": "YulIf",
																		"src": "7363:451:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7827:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:13"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7863:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7229:2:13",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7209:3:13",
																"statements": []
															},
															"src": "7205:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "7103:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "7111:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7118:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7128:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7136:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7143:4:13",
														"type": ""
													}
												],
												"src": "7075:848:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7989:1013:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8184:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8186:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8197:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:16:13"
															},
															"nodeType": "YulIf",
															"src": "8164:40:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8229:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8231:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8242:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8216:12:13"
															},
															"nodeType": "YulIf",
															"src": "8213:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8359:20:13",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8361:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:13"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8372:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8352:27:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8403:176:13",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8438:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8417:43:13"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8473:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8529:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:13"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8511:40:13"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8564:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8388:191:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "8309:4:13"
															},
															"nodeType": "YulSwitch",
															"src": "8302:277:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8711:123:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8725:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:13"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8784:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:13"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:13"
																		},
																		"nodeType": "YulIf",
																		"src": "8766:40:13"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8819:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:111:13"
															},
															"nodeType": "YulIf",
															"src": "8588:246:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8844:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:13"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:13"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8940:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:13"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:25:13"
															},
															"nodeType": "YulIf",
															"src": "8911:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8971:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:13"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8980:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7959:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7965:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7975:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7983:5:13",
														"type": ""
													}
												],
												"src": "7929:1073:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9051:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9061:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9072:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9033:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9043:7:13",
														"type": ""
													}
												],
												"src": "9008:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9164:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9174:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9182:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9214:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9261:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9270:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9139:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9145:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9158:5:13",
														"type": ""
													}
												],
												"src": "9100:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9435:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9445:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9479:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9550:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9561:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9768:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9654:113:13"
															},
															"nodeType": "YulIf",
															"src": "9651:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9418:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9421:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9427:7:13",
														"type": ""
													}
												],
												"src": "9387:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9847:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9857:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9891:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9925:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9965:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:10:13"
															},
															"nodeType": "YulIf",
															"src": "9951:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9834:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9837:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9843:3:13",
														"type": ""
													}
												],
												"src": "9803:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10065:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10053:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10060:3:13",
														"type": ""
													}
												],
												"src": "10000:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10278:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10288:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10487:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10234:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10246:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10254:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10262:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10273:4:13",
														"type": ""
													}
												],
												"src": "10124:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10680:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10654:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10665:4:13",
														"type": ""
													}
												],
												"src": "10572:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527366130818db6c33cc9d8ef14845548ef08e6118ad60095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073149f9c20480a4dc264daedc1396a0e06a3848724600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000b8575f80fd5b506040516200388b3803806200388b8339818101604052810190620000de9190620007eb565b806040518060400160405280600d81526020017f4c6f636b6e657373546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4e54000000000000000000000000000000000000000000000000000000000081525081600390816200015c919062000a7f565b5080600490816200016e919062000a7f565b5050505f60065f6101000a81548160ff02191690831515021790555060016007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000205575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001fc919062000b74565b60405180910390fd5b6200021681620002a660201b60201c565b5062000257816200022c6200036960201b60201c565b600a6200023a919062000d18565b633b9aca006200024b919062000d68565b6200037160201b60201c565b6200026b5f801b82620003fb60201b60201c565b506200029e7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5382620003fb60201b60201c565b505062000e53565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003e4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003db919062000b74565b60405180910390fd5b620003f75f8383620004f760201b60201c565b5050565b5f6200040e83836200071b60201b60201c565b620004ed57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620004896200077f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620004f1565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200054b578060025f8282546200053e919062000db2565b925050819055506200061c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620005d7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620005ce9392919062000dfd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000665578060025f8282540392505081905550620006af565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200070e919062000e38565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620007b5826200078a565b9050919050565b620007c781620007a9565b8114620007d2575f80fd5b50565b5f81519050620007e581620007bc565b92915050565b5f6020828403121562000803576200080262000786565b5b5f6200081284828501620007d5565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200089757607f821691505b602082108103620008ad57620008ac62000852565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008d4565b6200091d8683620008d4565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000967620009616200095b8462000935565b6200093e565b62000935565b9050919050565b5f819050919050565b620009828362000947565b6200099a62000991826200096e565b848454620008e0565b825550505050565b5f90565b620009b0620009a2565b620009bd81848462000977565b505050565b5b81811015620009e457620009d85f82620009a6565b600181019050620009c3565b5050565b601f82111562000a3357620009fd81620008b3565b62000a0884620008c5565b8101602085101562000a18578190505b62000a3062000a2785620008c5565b830182620009c2565b50505b505050565b5f82821c905092915050565b5f62000a555f198460080262000a38565b1980831691505092915050565b5f62000a6f838362000a44565b9150826002028217905092915050565b62000a8a826200081b565b67ffffffffffffffff81111562000aa65762000aa562000825565b5b62000ab282546200087f565b62000abf828285620009e8565b5f60209050601f83116001811462000af5575f841562000ae0578287015190505b62000aec858262000a62565b86555062000b5b565b601f19841662000b0586620008b3565b5f5b8281101562000b2e5784890151825560018201915060208501945060208101905062000b07565b8683101562000b4e578489015162000b4a601f89168262000a44565b8355505b6001600288020188555050505b505050505050565b62000b6e81620007a9565b82525050565b5f60208201905062000b895f83018462000b63565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000c195780860481111562000bf15762000bf062000b8f565b5b600185161562000c015780820291505b808102905062000c118562000bbc565b945062000bd1565b94509492505050565b5f8262000c33576001905062000d05565b8162000c42575f905062000d05565b816001811462000c5b576002811462000c665762000c9c565b600191505062000d05565b60ff84111562000c7b5762000c7a62000b8f565b5b8360020a91508482111562000c955762000c9462000b8f565b5b5062000d05565b5060208310610133831016604e8410600b841016171562000cd65782820a90508381111562000cd05762000ccf62000b8f565b5b62000d05565b62000ce5848484600162000bc8565b9250905081840481111562000cff5762000cfe62000b8f565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000d248262000935565b915062000d318362000d0c565b925062000d607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000c22565b905092915050565b5f62000d748262000935565b915062000d818362000935565b925082820262000d918162000935565b9150828204841483151762000dab5762000daa62000b8f565b5b5092915050565b5f62000dbe8262000935565b915062000dcb8362000935565b925082820190508082111562000de65762000de562000b8f565b5b92915050565b62000df78162000935565b82525050565b5f60608201905062000e125f83018662000b63565b62000e21602083018562000dec565b62000e30604083018462000dec565b949350505050565b5f60208201905062000e4d5f83018462000dec565b92915050565b612a2a8062000e615f395ff3fe608060405234801561000f575f80fd5b50600436106101d8575f3560e01c806366666aa91161010257806395d89b41116100a0578063d547741f1161006f578063d547741f1461051e578063dd62ed3e1461053a578063f0f442601461056a578063f2fde38b14610586576101d8565b806395d89b4114610494578063a217fddf146104b2578063a9059cbb146104d0578063c749523314610500576101d8565b806378238c37116100dc57806378238c37146104205780638456cb591461043c5780638da5cb5b1461044657806391d1485414610464576101d8565b806366666aa9146103c857806370a08231146103e6578063715018a614610416576101d8565b80632f2ff15d1161017a57806359563cdf1161014957806359563cdf146103545780635c975abb146103705780635f3e849f1461038e57806361d027b3146103aa576101d8565b80632f2ff15d146102f4578063313ce5671461031057806336568abe1461032e5780633f4ba83a1461034a576101d8565b80630ceb382e116101b65780630ceb382e1461025a57806318160ddd1461027657806323b872dd14610294578063248a9ca3146102c4576101d8565b806301ffc9a7146101dc57806306fdde031461020c578063095ea7b31461022a575b5f80fd5b6101f660048036038101906101f19190611ee2565b6105a2565b6040516102039190611f27565b60405180910390f35b61021461061b565b6040516102219190611fca565b60405180910390f35b610244600480360381019061023f9190612077565b6106ab565b6040516102519190611f27565b60405180910390f35b610274600480360381019061026f9190612116565b6106cd565b005b61027e610941565b60405161028b9190612196565b60405180910390f35b6102ae60048036038101906102a991906121af565b61094a565b6040516102bb9190611f27565b60405180910390f35b6102de60048036038101906102d99190612232565b610978565b6040516102eb919061226c565b60405180910390f35b61030e60048036038101906103099190612285565b610995565b005b6103186109b7565b60405161032591906122de565b60405180910390f35b61034860048036038101906103439190612285565b6109bf565b005b610352610a3a565b005b61036e600480360381019061036991906122f7565b610a4c565b005b610378610c03565b6040516103859190611f27565b60405180910390f35b6103a860048036038101906103a391906121af565b610c18565b005b6103b2610e26565b6040516103bf9190612363565b60405180910390f35b6103d0610e4b565b6040516103dd9190612363565b60405180910390f35b61040060048036038101906103fb919061237c565b610e70565b60405161040d9190612196565b60405180910390f35b61041e610eb5565b005b61043a6004803603810190610435919061237c565b610ec8565b005b610444610fc6565b005b61044e610fd8565b60405161045b9190612363565b60405180910390f35b61047e60048036038101906104799190612285565b611000565b60405161048b9190611f27565b60405180910390f35b61049c611064565b6040516104a99190611fca565b60405180910390f35b6104ba6110f4565b6040516104c7919061226c565b60405180910390f35b6104ea60048036038101906104e59190612077565b6110fa565b6040516104f79190611f27565b60405180910390f35b61050861111c565b604051610515919061226c565b60405180910390f35b61053860048036038101906105339190612285565b611140565b005b610554600480360381019061054f91906123a7565b611162565b6040516105619190612196565b60405180910390f35b610584600480360381019061057f919061237c565b6111e4565b005b6105a0600480360381019061059b919061237c565b6112e2565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610614575061061382611366565b5b9050919050565b60606003805461062a90612412565b80601f016020809104026020016040519081016040528092919081815260200182805461065690612412565b80156106a15780601f10610678576101008083540402835291602001916106a1565b820191905f5260205f20905b81548152906001019060200180831161068457829003601f168201915b5050505050905090565b5f806106b56113cf565b90506106c28185856113d6565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b536106f7816113e8565b6106ff6113fc565b610707611446565b845f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061248c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc906124f4565b60405180910390fd5b5f8511610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e9061255c565b60405180910390fd5b8461087260095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e70565b10156108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906125c4565b60405180910390fd5b6108df60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168787611495565b8573ffffffffffffffffffffffffffffffffffffffff167fb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d8686866040516109299392919061261c565b60405180910390a25061093a611585565b5050505050565b5f600254905090565b5f806109546113cf565b905061096185828561158f565b61096c858585611495565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b61099e82610978565b6109a7816113e8565b6109b18383611622565b50505050565b5f6012905090565b6109c76113cf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a2b576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a35828261170c565b505050565b610a426117f6565b610a4a61187d565b565b610a546113fc565b610a5c611446565b5f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290612696565b60405180910390fd5b5f8311610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b249061255c565b60405180910390fd5b82610b3733610e70565b1015610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f906126fe565b60405180910390fd5b610ba433600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611495565b3373ffffffffffffffffffffffffffffffffffffffff167f1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729848484604051610bee9392919061261c565b60405180910390a2610bfe611585565b505050565b5f60065f9054906101000a900460ff16905090565b610c206117f6565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c869061248c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf490612766565b60405180910390fd5b5f8211610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d369061255c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610d7a929190612784565b6020604051808303815f875af1158015610d96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dba91906127d5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe684604051610e189190612196565b60405180910390a350505050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ebd6117f6565b610ec65f6118de565b565b610ed06117f6565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f369061248c565b60405180910390fd5b8160095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f6033b33396350ae21a9bb61962b3be199ccf9c12465a993f6f67e703954e6ecc60405160405180910390a25050565b610fce6117f6565b610fd66119a1565b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461107390612412565b80601f016020809104026020016040519081016040528092919081815260200182805461109f90612412565b80156110ea5780601f106110c1576101008083540402835291602001916110ea565b820191905f5260205f20905b8154815290600101906020018083116110cd57829003601f168201915b5050505050905090565b5f801b81565b5f806111046113cf565b9050611111818585611495565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5381565b61114982610978565b611152816113e8565b61115c838361170c565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6111ec6117f6565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361125b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112529061248c565b60405180910390fd5b81600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f60405160405180910390a25050565b6112ea6117f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361135a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113519190612363565b60405180910390fd5b611363816118de565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6113e38383836001611a03565b505050565b6113f9816113f46113cf565b611bd2565b50565b611404610c03565b15611444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143b9061284a565b60405180910390fd5b565b60026007540361148b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611482906128b2565b60405180910390fd5b6002600781905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611505575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114fc9190612363565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611575575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161156c9190612363565b60405180910390fd5b611580838383611c23565b505050565b6001600781905550565b5f61159a8484611162565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561161c578181101561160d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611604939291906128d0565b60405180910390fd5b61161b84848484035f611a03565b5b50505050565b5f61162d8383611000565b61170257600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061169f6113cf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611706565b5f90505b92915050565b5f6117178383611000565b156117ec575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117896113cf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506117f0565b5f90505b92915050565b6117fe6113cf565b73ffffffffffffffffffffffffffffffffffffffff1661181c610fd8565b73ffffffffffffffffffffffffffffffffffffffff161461187b5761183f6113cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118729190612363565b60405180910390fd5b565b611885611e3c565b5f60065f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118c76113cf565b6040516118d49190612363565b60405180910390a1565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119a96113fc565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119ec6113cf565b6040516119f99190612363565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a73575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a6a9190612363565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ae3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ada9190612363565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611bcc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611bc39190612196565b60405180910390a35b50505050565b611bdc8282611000565b611c1f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611c16929190612905565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c73578060025f828254611c679190612959565b92505081905550611d41565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611cfc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611cf3939291906128d0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d88578060025f8282540392505081905550611dd2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e2f9190612196565b60405180910390a3505050565b611e44610c03565b611e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7a906129d6565b60405180910390fd5b565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ec181611e8d565b8114611ecb575f80fd5b50565b5f81359050611edc81611eb8565b92915050565b5f60208284031215611ef757611ef6611e85565b5b5f611f0484828501611ece565b91505092915050565b5f8115159050919050565b611f2181611f0d565b82525050565b5f602082019050611f3a5f830184611f18565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f77578082015181840152602081019050611f5c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f9c82611f40565b611fa68185611f4a565b9350611fb6818560208601611f5a565b611fbf81611f82565b840191505092915050565b5f6020820190508181035f830152611fe28184611f92565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61201382611fea565b9050919050565b61202381612009565b811461202d575f80fd5b50565b5f8135905061203e8161201a565b92915050565b5f819050919050565b61205681612044565b8114612060575f80fd5b50565b5f813590506120718161204d565b92915050565b5f806040838503121561208d5761208c611e85565b5b5f61209a85828601612030565b92505060206120ab85828601612063565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126120d6576120d56120b5565b5b8235905067ffffffffffffffff8111156120f3576120f26120b9565b5b60208301915083600182028301111561210f5761210e6120bd565b5b9250929050565b5f805f806060858703121561212e5761212d611e85565b5b5f61213b87828801612030565b945050602061214c87828801612063565b935050604085013567ffffffffffffffff81111561216d5761216c611e89565b5b612179878288016120c1565b925092505092959194509250565b61219081612044565b82525050565b5f6020820190506121a95f830184612187565b92915050565b5f805f606084860312156121c6576121c5611e85565b5b5f6121d386828701612030565b93505060206121e486828701612030565b92505060406121f586828701612063565b9150509250925092565b5f819050919050565b612211816121ff565b811461221b575f80fd5b50565b5f8135905061222c81612208565b92915050565b5f6020828403121561224757612246611e85565b5b5f6122548482850161221e565b91505092915050565b612266816121ff565b82525050565b5f60208201905061227f5f83018461225d565b92915050565b5f806040838503121561229b5761229a611e85565b5b5f6122a88582860161221e565b92505060206122b985828601612030565b9150509250929050565b5f60ff82169050919050565b6122d8816122c3565b82525050565b5f6020820190506122f15f8301846122cf565b92915050565b5f805f6040848603121561230e5761230d611e85565b5b5f61231b86828701612063565b935050602084013567ffffffffffffffff81111561233c5761233b611e89565b5b612348868287016120c1565b92509250509250925092565b61235d81612009565b82525050565b5f6020820190506123765f830184612354565b92915050565b5f6020828403121561239157612390611e85565b5b5f61239e84828501612030565b91505092915050565b5f80604083850312156123bd576123bc611e85565b5b5f6123ca85828601612030565b92505060206123db85828601612030565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061242957607f821691505b60208210810361243c5761243b6123e5565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612476600f83611f4a565b915061248182612442565b602082019050919050565b5f6020820190508181035f8301526124a38161246a565b9050919050565b7f52657761726420706f6f6c206e6f7420736574000000000000000000000000005f82015250565b5f6124de601383611f4a565b91506124e9826124aa565b602082019050919050565b5f6020820190508181035f83015261250b816124d2565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f612546602083611f4a565b915061255182612512565b602082019050919050565b5f6020820190508181035f8301526125738161253a565b9050919050565b7f496e73756666696369656e742072657761726420706f6f6c2062616c616e63655f82015250565b5f6125ae602083611f4a565b91506125b98261257a565b602082019050919050565b5f6020820190508181035f8301526125db816125a2565b9050919050565b828183375f83830152505050565b5f6125fb8385611f4a565b93506126088385846125e2565b61261183611f82565b840190509392505050565b5f60408201905061262f5f830186612187565b81810360208301526126428184866125f0565b9050949350505050565b7f5472656173757279206e6f7420736574000000000000000000000000000000005f82015250565b5f612680601083611f4a565b915061268b8261264c565b602082019050919050565b5f6020820190508181035f8301526126ad81612674565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6126e8601483611f4a565b91506126f3826126b4565b602082019050919050565b5f6020820190508181035f830152612715816126dc565b9050919050565b7f43616e6e6f74207265636f766572204c4e5420746f6b656e73000000000000005f82015250565b5f612750601983611f4a565b915061275b8261271c565b602082019050919050565b5f6020820190508181035f83015261277d81612744565b9050919050565b5f6040820190506127975f830185612354565b6127a46020830184612187565b9392505050565b6127b481611f0d565b81146127be575f80fd5b50565b5f815190506127cf816127ab565b92915050565b5f602082840312156127ea576127e9611e85565b5b5f6127f7848285016127c1565b91505092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612834601083611f4a565b915061283f82612800565b602082019050919050565b5f6020820190508181035f83015261286181612828565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61289c601f83611f4a565b91506128a782612868565b602082019050919050565b5f6020820190508181035f8301526128c981612890565b9050919050565b5f6060820190506128e35f830186612354565b6128f06020830185612187565b6128fd6040830184612187565b949350505050565b5f6040820190506129185f830185612354565b612925602083018461225d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61296382612044565b915061296e83612044565b92508282019050808211156129865761298561292c565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6129c0601483611f4a565b91506129cb8261298c565b602082019050919050565b5f6020820190508181035f8301526129ed816129b4565b905091905056fea26469706673582212207c78689c4a88594a8d58d7e7e4f1165fa54ff68396bf944b4ec72292ed96148b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x66130818DB6C33CC9D8EF14845548EF08E6118AD PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x149F9C20480A4DC264DAEDC1396A0E06A3848724 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x388B CODESIZE SUB DUP1 PUSH3 0x388B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6F636B6E657373546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x15C SWAP2 SWAP1 PUSH3 0xA7F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x16E SWAP2 SWAP1 PUSH3 0xA7F JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x205 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1FC SWAP2 SWAP1 PUSH3 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x216 DUP2 PUSH3 0x2A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x257 DUP2 PUSH3 0x22C PUSH3 0x369 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x23A SWAP2 SWAP1 PUSH3 0xD18 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x24B SWAP2 SWAP1 PUSH3 0xD68 JUMP JUMPDEST PUSH3 0x371 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x26B PUSH0 DUP1 SHL DUP3 PUSH3 0x3FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x29E PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP3 PUSH3 0x3FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xE53 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DB SWAP2 SWAP1 PUSH3 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3F7 PUSH0 DUP4 DUP4 PUSH3 0x4F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH3 0x40E DUP4 DUP4 PUSH3 0x71B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4ED JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x489 PUSH3 0x77F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x4F1 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x54B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x53E SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x61C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x5D7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x665 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6AF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x70E SWAP2 SWAP1 PUSH3 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x7B5 DUP3 PUSH3 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7C7 DUP2 PUSH3 0x7A9 JUMP JUMPDEST DUP2 EQ PUSH3 0x7D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x7E5 DUP2 PUSH3 0x7BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x803 JUMPI PUSH3 0x802 PUSH3 0x786 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x812 DUP5 DUP3 DUP6 ADD PUSH3 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x897 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x8AD JUMPI PUSH3 0x8AC PUSH3 0x852 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x911 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8D4 JUMP JUMPDEST PUSH3 0x91D DUP7 DUP4 PUSH3 0x8D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x967 PUSH3 0x961 PUSH3 0x95B DUP5 PUSH3 0x935 JUMP JUMPDEST PUSH3 0x93E JUMP JUMPDEST PUSH3 0x935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x982 DUP4 PUSH3 0x947 JUMP JUMPDEST PUSH3 0x99A PUSH3 0x991 DUP3 PUSH3 0x96E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8E0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x9B0 PUSH3 0x9A2 JUMP JUMPDEST PUSH3 0x9BD DUP2 DUP5 DUP5 PUSH3 0x977 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9E4 JUMPI PUSH3 0x9D8 PUSH0 DUP3 PUSH3 0x9A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA33 JUMPI PUSH3 0x9FD DUP2 PUSH3 0x8B3 JUMP JUMPDEST PUSH3 0xA08 DUP5 PUSH3 0x8C5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA18 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA30 PUSH3 0xA27 DUP6 PUSH3 0x8C5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9C2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA55 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA38 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA6F DUP4 DUP4 PUSH3 0xA44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA8A DUP3 PUSH3 0x81B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAA6 JUMPI PUSH3 0xAA5 PUSH3 0x825 JUMP JUMPDEST JUMPDEST PUSH3 0xAB2 DUP3 SLOAD PUSH3 0x87F JUMP JUMPDEST PUSH3 0xABF DUP3 DUP3 DUP6 PUSH3 0x9E8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAF5 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xAE0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAEC DUP6 DUP3 PUSH3 0xA62 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB5B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB05 DUP7 PUSH3 0x8B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB2E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB07 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB4E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB4A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xB6E DUP2 PUSH3 0x7A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB89 PUSH0 DUP4 ADD DUP5 PUSH3 0xB63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xC19 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xBF1 JUMPI PUSH3 0xBF0 PUSH3 0xB8F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xC01 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xC11 DUP6 PUSH3 0xBBC JUMP JUMPDEST SWAP5 POP PUSH3 0xBD1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xC33 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xD05 JUMP JUMPDEST DUP2 PUSH3 0xC42 JUMPI PUSH0 SWAP1 POP PUSH3 0xD05 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xC5B JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xC66 JUMPI PUSH3 0xC9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xD05 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xC7B JUMPI PUSH3 0xC7A PUSH3 0xB8F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xC95 JUMPI PUSH3 0xC94 PUSH3 0xB8F JUMP JUMPDEST JUMPDEST POP PUSH3 0xD05 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xCD6 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xCD0 JUMPI PUSH3 0xCCF PUSH3 0xB8F JUMP JUMPDEST JUMPDEST PUSH3 0xD05 JUMP JUMPDEST PUSH3 0xCE5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xBC8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xCFF JUMPI PUSH3 0xCFE PUSH3 0xB8F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD24 DUP3 PUSH3 0x935 JUMP JUMPDEST SWAP2 POP PUSH3 0xD31 DUP4 PUSH3 0xD0C JUMP JUMPDEST SWAP3 POP PUSH3 0xD60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xC22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xD74 DUP3 PUSH3 0x935 JUMP JUMPDEST SWAP2 POP PUSH3 0xD81 DUP4 PUSH3 0x935 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xD91 DUP2 PUSH3 0x935 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xDAB JUMPI PUSH3 0xDAA PUSH3 0xB8F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xDBE DUP3 PUSH3 0x935 JUMP JUMPDEST SWAP2 POP PUSH3 0xDCB DUP4 PUSH3 0x935 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xDE6 JUMPI PUSH3 0xDE5 PUSH3 0xB8F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xDF7 DUP2 PUSH3 0x935 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xE12 PUSH0 DUP4 ADD DUP7 PUSH3 0xB63 JUMP JUMPDEST PUSH3 0xE21 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xDEC JUMP JUMPDEST PUSH3 0xE30 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xDEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE4D PUSH0 DUP4 ADD DUP5 PUSH3 0xDEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A2A DUP1 PUSH3 0xE61 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66666AA9 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x586 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xC7495233 EQ PUSH2 0x500 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x78238C37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x78238C37 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x464 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x416 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x59563CDF GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x59563CDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3AA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x34A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xCEB382E GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xCEB382E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xA3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B2 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x444 PUSH2 0xFC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0x12E2 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x613 DUP3 PUSH2 0x1366 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x62A SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x656 SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x678 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x684 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6B5 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 DUP2 DUP6 DUP6 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 PUSH2 0x6F7 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x6FF PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x707 PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x872 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE70 JUMP JUMPDEST LT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 PUSH2 0x1495 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x929 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x93A PUSH2 0x1585 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x954 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x961 DUP6 DUP3 DUP6 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x96C DUP6 DUP6 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99E DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x9B1 DUP4 DUP4 PUSH2 0x1622 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C7 PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA35 DUP3 DUP3 PUSH2 0x170C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x187D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xA5C PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xB37 CALLER PUSH2 0xE70 JUMP JUMPDEST LT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA4 CALLER PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1495 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBEE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xBFE PUSH2 0x1585 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x17F6 JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD36 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7A SWAP3 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xEC6 PUSH0 PUSH2 0x18DE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x17F6 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6033B33396350AE21A9BB61962B3BE199CCF9C12465A993F6F67E703954E6ECC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFCE PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xFD6 PUSH2 0x19A1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1073 SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x109F SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1104 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x1111 DUP2 DUP6 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP2 JUMP JUMPDEST PUSH2 0x1149 DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x1152 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x115C DUP4 DUP4 PUSH2 0x170C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11EC PUSH2 0x17F6 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3C864541EF71378C6229510ED90F376565EE42D9C5E0904A984A9E863E6DB44F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x12EA PUSH2 0x17F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1363 DUP2 PUSH2 0x18DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13F4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1BD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1404 PUSH2 0xC03 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143B SWAP1 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1482 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1505 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1575 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1580 DUP4 DUP4 DUP4 PUSH2 0x1C23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159A DUP5 DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x161C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x160D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1604 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1A03 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162D DUP4 DUP4 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1702 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x169F PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1717 DUP4 DUP4 PUSH2 0x1000 JUMP JUMPDEST ISZERO PUSH2 0x17EC JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1789 PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x17F0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x181C PUSH2 0xFD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187B JUMPI PUSH2 0x183F PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1E3C JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18C7 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D4 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x19A9 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x19EC PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADA SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1BCC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BDC DUP3 DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1C1F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C16 SWAP3 SWAP2 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C73 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D41 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1CFC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D88 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DD2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E2F SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1E44 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x1E83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7A SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1ECB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EDC DUP2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F21 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3A PUSH0 DUP4 ADD DUP5 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C DUP3 PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1FA6 DUP2 DUP6 PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x1F82 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE2 DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2013 DUP3 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2023 DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP2 EQ PUSH2 0x202D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x203E DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2056 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x2060 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2071 DUP2 PUSH2 0x204D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x209A DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20AB DUP6 DUP3 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH2 0x20F2 PUSH2 0x20B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x20BD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213B DUP8 DUP3 DUP9 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x214C DUP8 DUP3 DUP9 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x1E89 JUMP JUMPDEST JUMPDEST PUSH2 0x2179 DUP8 DUP3 DUP9 ADD PUSH2 0x20C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2190 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH2 0x21C5 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D3 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E4 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP2 EQ PUSH2 0x221B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x222C DUP2 PUSH2 0x2208 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2254 DUP5 DUP3 DUP6 ADD PUSH2 0x221E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2266 DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227F PUSH0 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A8 DUP6 DUP3 DUP7 ADD PUSH2 0x221E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B9 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D8 DUP2 PUSH2 0x22C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x22CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x230E JUMPI PUSH2 0x230D PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231B DUP7 DUP3 DUP8 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x1E89 JUMP JUMPDEST JUMPDEST PUSH2 0x2348 DUP7 DUP3 DUP8 ADD PUSH2 0x20C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x235D DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2376 PUSH0 DUP4 ADD DUP5 PUSH2 0x2354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2391 JUMPI PUSH2 0x2390 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239E DUP5 DUP3 DUP6 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BD JUMPI PUSH2 0x23BC PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CA DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23DB DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2429 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x243C JUMPI PUSH2 0x243B PUSH2 0x23E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2476 PUSH1 0xF DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP3 PUSH2 0x2442 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A3 DUP2 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420706F6F6C206E6F742073657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x13 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2546 PUSH1 0x20 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2551 DUP3 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2573 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C2062616C616E6365 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25AE PUSH1 0x20 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x25B9 DUP3 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25DB DUP2 PUSH2 0x25A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25FB DUP4 DUP6 PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP PUSH2 0x2608 DUP4 DUP6 DUP5 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0x2611 DUP4 PUSH2 0x1F82 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x262F PUSH0 DUP4 ADD DUP7 PUSH2 0x2187 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2642 DUP2 DUP5 DUP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2680 PUSH1 0x10 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP3 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AD DUP2 PUSH2 0x2674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E8 PUSH1 0x14 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x26F3 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2715 DUP2 PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F766572204C4E5420746F6B656E7300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2750 PUSH1 0x19 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x275B DUP3 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x277D DUP2 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2797 PUSH0 DUP4 ADD DUP6 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x27A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x27B4 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP2 EQ PUSH2 0x27BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CF DUP2 PUSH2 0x27AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F7 DUP5 DUP3 DUP6 ADD PUSH2 0x27C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2834 PUSH1 0x10 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x283F DUP3 PUSH2 0x2800 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2861 DUP2 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x289C PUSH1 0x1F DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x28A7 DUP3 PUSH2 0x2868 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C9 DUP2 PUSH2 0x2890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28E3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x28F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x28FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2918 PUSH0 DUP4 ADD DUP6 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x2925 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2963 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x296E DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2986 JUMPI PUSH2 0x2985 PUSH2 0x292C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x14 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x78689C4A88594A8D58D7E7E4F1165FA54FF68396BF944B4EC72292ED96 EQ DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "403:3558:12:-:0;;;657:42;629:70;;;;;;;;;;;;;;;;;;;;730:42;705:67;;;;;;;;;;;;;;;;;;;;1229:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1318:12;1582:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1006:5:4;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:5;1821:7;:22;;;;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1346:51:12::2;1352:12;1386:10;:8;;;:10;;:::i;:::-;1382:2;:14;;;;:::i;:::-;1366:13;:30;;;;:::i;:::-;1346:5;;;:51;;:::i;:::-;1407:44;2241:4:0;1418:18:12::0;::::2;1438:12;1407:10;;;:44;;:::i;:::-;;1461:43;546:30;1491:12;1461:10;;;:43;;:::i;:::-;;1229:282:::0;403:3558;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3868:91:12:-;3926:5;3950:2;3943:9;;3868:91;:::o;7362:208:6:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;5912:1107:6:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;403:3558:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 4340,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TASK_MANAGER_ROLE_1545": {
									"entryPoint": 4380,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1243": {
									"entryPoint": 5078,
									"id": 1243,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1303": {
									"entryPoint": 6659,
									"id": 1303,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_464": {
									"entryPoint": 6134,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 7122,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 5096,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 5666,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1468": {
									"entryPoint": 5071,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_825": {
									"entryPoint": 5509,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_817": {
									"entryPoint": 5190,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_755": {
									"entryPoint": 6561,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_728": {
									"entryPoint": 5116,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_739": {
									"entryPoint": 7740,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 5900,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1351": {
									"entryPoint": 5519,
									"id": 1351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_526": {
									"entryPoint": 6366,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 5269,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_771": {
									"entryPoint": 6269,
									"id": 771,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1159": {
									"entryPoint": 7203,
									"id": 1159,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 4450,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1707,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_938": {
									"entryPoint": 3696,
									"id": 938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1854": {
									"entryPoint": 2487,
									"id": 1854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 2424,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 2453,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 4096,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_898": {
									"entryPoint": 1563,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_447": {
									"entryPoint": 4056,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1790": {
									"entryPoint": 4038,
									"id": 1790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_716": {
									"entryPoint": 3075,
									"id": 716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverTokens_1845": {
									"entryPoint": 3096,
									"id": 1845,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceOwnership_478": {
									"entryPoint": 3765,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2495,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 4416,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardPool_1548": {
									"entryPoint": 3659,
									"id": 1548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardTokens_1728": {
									"entryPoint": 1741,
									"id": 1728,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setRewardPool_1651": {
									"entryPoint": 3784,
									"id": 1651,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_1670": {
									"entryPoint": 4580,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@spendTokens_1781": {
									"entryPoint": 2636,
									"id": 1781,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 4966,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1442,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_907": {
									"entryPoint": 4196,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_925": {
									"entryPoint": 2369,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 2378,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_506": {
									"entryPoint": 4834,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_962": {
									"entryPoint": 4346,
									"id": 962,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1551": {
									"entryPoint": 3622,
									"id": 1551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1799": {
									"entryPoint": 2618,
									"id": 1799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr": {
									"entryPoint": 8470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_calldata_ptr": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10448,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9756,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 10636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 9282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62": {
									"entryPoint": 9804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 9908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 10240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332": {
									"entryPoint": 9594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24083:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3037:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3047:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3019:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3029:7:13",
														"type": ""
													}
												],
												"src": "2992:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3194:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:43:13"
															},
															"nodeType": "YulIf",
															"src": "3147:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:13",
														"type": ""
													}
												],
												"src": "3094:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3274:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3252:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3260:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3268:5:13",
														"type": ""
													}
												],
												"src": "3222:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3422:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3433:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3394:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3404:7:13",
														"type": ""
													}
												],
												"src": "3367:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:43:13"
															},
															"nodeType": "YulIf",
															"src": "3503:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3486:5:13",
														"type": ""
													}
												],
												"src": "3450:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3608:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3616:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:13",
														"type": ""
													}
												],
												"src": "3578:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3806:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3852:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:32:13"
															},
															"nodeType": "YulIf",
															"src": "3816:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3989:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4072:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4117:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3768:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3779:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3791:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3799:6:13",
														"type": ""
													}
												],
												"src": "3723:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4292:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4309:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4312:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4302:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4302:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4203:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4415:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "4326:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4449:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4710:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4712:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4712:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4689:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4697:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4685:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4685:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4704:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:35:13"
															},
															"nodeType": "YulIf",
															"src": "4671:122:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4802:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4825:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4812:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4875:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4877:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4847:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4844:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:30:13"
															},
															"nodeType": "YulIf",
															"src": "4841:117:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4967:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4983:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4967:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5050:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "5052:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5052:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5052:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "5015:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5029:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5037:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5025:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5025:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:32:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5008:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5008:41:13"
															},
															"nodeType": "YulIf",
															"src": "5005:128:13"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4628:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4636:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4644:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4654:6:13",
														"type": ""
													}
												],
												"src": "4586:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:699:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5311:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5313:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5313:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5313:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5286:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5295:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5278:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:32:13"
															},
															"nodeType": "YulIf",
															"src": "5275:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5404:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5419:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5433:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5423:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5448:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5483:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5494:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5479:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5479:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5503:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5458:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5448:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5531:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5546:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5560:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5550:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5576:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5611:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5622:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5607:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5607:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5631:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5586:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5586:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5576:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5659:298:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5674:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5705:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5716:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5701:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5701:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5688:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5678:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5767:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5769:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5769:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5769:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5739:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5747:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5736:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "5733:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5864:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5919:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5930:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5915:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5915:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5939:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5882:32:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5882:65:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5864:6:13"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5872:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5211:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5222:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5234:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5242:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5250:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5258:6:13",
														"type": ""
													}
												],
												"src": "5145:819:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6052:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6075:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6057:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6045:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6045:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6023:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6030:3:13",
														"type": ""
													}
												],
												"src": "5970:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6192:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6202:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6214:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6202:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6282:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6295:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6306:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6291:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6291:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6238:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6238:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6164:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6176:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6187:4:13",
														"type": ""
													}
												],
												"src": "6094:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6422:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6468:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6470:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6470:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6470:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6443:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6452:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6439:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6439:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6464:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6435:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:32:13"
															},
															"nodeType": "YulIf",
															"src": "6432:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6561:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6576:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6590:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6580:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6605:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6640:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6651:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6636:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6636:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6660:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6615:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6615:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6605:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6688:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6703:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6707:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6733:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6768:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6779:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6764:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6764:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6788:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6743:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6733:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6816:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6831:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6845:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6835:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6861:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6896:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6907:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6892:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6892:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6916:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6871:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6871:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6861:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6376:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6387:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6399:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6407:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6415:6:13",
														"type": ""
													}
												],
												"src": "6322:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6992:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7002:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7013:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7002:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6984:7:13",
														"type": ""
													}
												],
												"src": "6947:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7073:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7132:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7132:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "7103:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7093:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7086:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:43:13"
															},
															"nodeType": "YulIf",
															"src": "7083:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7066:5:13",
														"type": ""
													}
												],
												"src": "7030:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7210:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7229:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "7258:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7258:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7204:5:13",
														"type": ""
													}
												],
												"src": "7158:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7369:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7417:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7390:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7399:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7382:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:32:13"
															},
															"nodeType": "YulIf",
															"src": "7379:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7508:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7523:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7537:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7527:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7552:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7587:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7598:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7583:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7583:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7607:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7562:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7562:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7552:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7339:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7350:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7362:6:13",
														"type": ""
													}
												],
												"src": "7303:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7703:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7720:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7743:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7725:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7725:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7713:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7713:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7691:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7698:3:13",
														"type": ""
													}
												],
												"src": "7638:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7860:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7870:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7882:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7893:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7878:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7870:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7950:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7963:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7974:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7959:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7959:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7906:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7906:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7906:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7832:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7844:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7855:4:13",
														"type": ""
													}
												],
												"src": "7762:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8119:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8121:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8121:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8121:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8094:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8090:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8090:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:32:13"
															},
															"nodeType": "YulIf",
															"src": "8083:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "8212:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8227:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8241:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8231:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8256:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8291:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8302:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8287:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8287:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8311:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8266:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8266:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8256:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8339:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8354:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8368:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8358:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8384:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8419:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8430:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8415:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8415:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8439:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8394:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8394:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8384:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8035:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8046:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8058:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8066:6:13",
														"type": ""
													}
												],
												"src": "7990:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8513:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8523:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8538:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8545:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8523:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8495:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8505:7:13",
														"type": ""
													}
												],
												"src": "8470:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8623:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8640:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8661:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8645:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8645:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8633:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8611:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8618:3:13",
														"type": ""
													}
												],
												"src": "8562:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8774:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8784:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8796:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8807:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8792:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8784:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8860:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8873:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8884:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8869:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8869:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8820:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8820:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8820:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8746:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8769:4:13",
														"type": ""
													}
												],
												"src": "8680:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9003:571:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9049:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9051:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9051:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9051:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9024:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9033:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9016:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9016:32:13"
															},
															"nodeType": "YulIf",
															"src": "9013:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "9142:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9157:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9171:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9161:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9186:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9221:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9232:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9217:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9217:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9241:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9196:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9196:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9186:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9269:298:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9284:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9315:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9326:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9311:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9311:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9298:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9298:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9288:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9377:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9379:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9379:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9379:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9349:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9357:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9346:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9346:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "9343:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9474:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9529:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9540:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9525:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9525:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9549:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9492:32:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9492:65:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9474:6:13"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9482:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8957:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8968:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8988:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8996:6:13",
														"type": ""
													}
												],
												"src": "8900:674:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9645:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9662:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9685:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9667:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9667:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9655:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9633:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9640:3:13",
														"type": ""
													}
												],
												"src": "9580:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9802:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9812:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9824:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9835:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9812:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9892:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9905:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9916:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9901:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9901:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9848:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9848:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9774:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9786:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9797:4:13",
														"type": ""
													}
												],
												"src": "9704:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9998:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10044:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10046:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10046:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10046:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10019:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10028:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10015:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10015:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10011:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10011:32:13"
															},
															"nodeType": "YulIf",
															"src": "10008:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10137:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10152:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10166:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10156:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10181:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10216:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10227:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10212:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10212:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10236:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10191:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10181:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9968:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9979:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9991:6:13",
														"type": ""
													}
												],
												"src": "9932:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10350:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10396:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10398:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10398:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10398:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10371:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10380:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10363:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10363:32:13"
															},
															"nodeType": "YulIf",
															"src": "10360:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10489:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10504:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10518:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10508:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10533:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10568:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10579:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10564:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10564:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10588:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10543:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10543:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10533:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10616:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10631:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10635:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10661:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10696:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10707:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10692:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10692:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10716:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10671:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10671:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10661:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10312:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10323:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10335:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10343:6:13",
														"type": ""
													}
												],
												"src": "10267:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10775:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10792:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10795:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10785:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10785:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10785:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10889:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10892:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10882:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10913:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10916:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10906:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10906:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10747:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10984:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10994:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11008:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11014:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11004:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11004:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10994:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11025:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11055:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11061:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11051:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11029:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11102:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11116:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11130:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11138:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11126:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11116:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11082:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11075:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11075:26:13"
															},
															"nodeType": "YulIf",
															"src": "11072:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11205:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11219:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11219:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11219:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11169:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11192:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11189:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11189:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11166:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:38:13"
															},
															"nodeType": "YulIf",
															"src": "11163:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10968:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10977:6:13",
														"type": ""
													}
												],
												"src": "10933:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11365:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11387:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11395:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11383:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11383:14:13"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11399:17:13",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11376:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11376:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11376:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11357:6:13",
														"type": ""
													}
												],
												"src": "11259:165:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11576:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11586:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11652:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11657:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11593:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11758:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "11669:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11669:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11771:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11782:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11787:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11771:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11564:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11572:3:13",
														"type": ""
													}
												],
												"src": "11430:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11973:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11983:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11995:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12006:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11983:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12030:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12041:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12026:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12026:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12049:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12055:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12045:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12045:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12019:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12019:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12075:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12209:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12083:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12075:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11953:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11968:4:13",
														"type": ""
													}
												],
												"src": "11802:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12333:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12355:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12363:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12351:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12351:14:13"
																	},
																	{
																		"hexValue": "52657761726420706f6f6c206e6f7420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12367:21:13",
																		"type": "",
																		"value": "Reward pool not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12344:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12344:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12344:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12325:6:13",
														"type": ""
													}
												],
												"src": "12227:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12548:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12558:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12624:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12629:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12565:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12565:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12558:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12730:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af",
																	"nodeType": "YulIdentifier",
																	"src": "12641:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12743:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12754:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12759:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12750:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12750:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12743:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12536:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12544:3:13",
														"type": ""
													}
												],
												"src": "12402:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12945:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12955:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12967:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12978:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12963:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12955:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13002:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13013:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12998:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12998:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13021:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13027:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13017:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13017:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12991:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12991:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12991:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13047:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13181:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13055:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13055:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13047:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12925:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12940:4:13",
														"type": ""
													}
												],
												"src": "12774:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13305:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13327:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13335:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13323:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13323:14:13"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13339:34:13",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13316:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13316:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13316:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13297:6:13",
														"type": ""
													}
												],
												"src": "13199:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13533:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13543:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13609:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13614:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13550:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13550:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13543:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13715:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nodeType": "YulIdentifier",
																	"src": "13626:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13626:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13728:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13739:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13744:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13735:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13735:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13728:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13521:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13529:3:13",
														"type": ""
													}
												],
												"src": "13387:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13930:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13940:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13952:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13963:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13948:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13987:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13998:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13983:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13983:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14006:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14012:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14002:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13976:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13976:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13976:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14032:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14166:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14040:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14040:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14032:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13910:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13925:4:13",
														"type": ""
													}
												],
												"src": "13759:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14290:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14312:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14320:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14308:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420706f6f6c2062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14324:34:13",
																		"type": "",
																		"value": "Insufficient reward pool balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14301:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14282:6:13",
														"type": ""
													}
												],
												"src": "14184:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14518:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14528:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14594:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14599:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14535:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14535:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14528:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14700:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332",
																	"nodeType": "YulIdentifier",
																	"src": "14611:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14611:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14713:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14724:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14729:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14720:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14713:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14506:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14514:3:13",
														"type": ""
													}
												],
												"src": "14372:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14915:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14925:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14937:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14948:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14933:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14933:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14925:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14972:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14983:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14968:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14991:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14997:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14987:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14987:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14961:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14961:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14961:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15017:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15151:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15025:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15025:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15017:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14895:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14910:4:13",
														"type": ""
													}
												],
												"src": "14744:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15233:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "15256:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15261:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15266:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15243:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15243:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15243:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15293:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15298:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15289:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15289:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15307:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15282:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15282:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15282:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15215:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15220:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15225:6:13",
														"type": ""
													}
												],
												"src": "15169:146:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15447:215:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15457:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15523:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15528:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15464:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15464:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15457:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "15582:5:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15589:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15594:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15545:36:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15545:56:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15545:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15610:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15621:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15648:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15626:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15626:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15617:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15617:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15610:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "15420:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15427:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15435:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15443:3:13",
														"type": ""
													}
												],
												"src": "15345:317:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15824:287:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15834:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15846:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15842:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15834:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15914:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15927:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15938:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15923:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15923:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15870:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15870:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15870:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15962:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15973:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15958:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15982:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15988:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15978:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15978:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15951:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15951:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15951:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16008:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16082:6:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16090:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16099:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16016:65:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16016:88:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16008:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15780:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15792:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15800:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15808:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15819:4:13",
														"type": ""
													}
												],
												"src": "15668:443:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16223:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16245:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16253:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16241:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16241:14:13"
																	},
																	{
																		"hexValue": "5472656173757279206e6f7420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16257:18:13",
																		"type": "",
																		"value": "Treasury not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16234:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16234:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16234:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16215:6:13",
														"type": ""
													}
												],
												"src": "16117:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16435:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16445:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16511:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16516:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16452:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16452:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16445:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16617:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62",
																	"nodeType": "YulIdentifier",
																	"src": "16528:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16528:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16528:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16630:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16641:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16646:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16637:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16630:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16423:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16431:3:13",
														"type": ""
													}
												],
												"src": "16289:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16832:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16842:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16854:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16850:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16850:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16842:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16889:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16900:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16885:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16885:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16908:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16914:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16904:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16904:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16878:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16878:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16878:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16934:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17068:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16942:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16942:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16934:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16812:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16827:4:13",
														"type": ""
													}
												],
												"src": "16661:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17192:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17214:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17222:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17210:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17210:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17226:22:13",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17203:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17203:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17203:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17184:6:13",
														"type": ""
													}
												],
												"src": "17086:170:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17408:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17418:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17484:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17489:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17425:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17425:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17418:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17590:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "17501:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17501:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17501:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17603:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17614:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17619:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17610:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17603:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17396:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17404:3:13",
														"type": ""
													}
												],
												"src": "17262:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17805:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17815:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17827:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17838:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17823:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17823:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17815:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17862:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17873:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17858:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17858:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17881:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17887:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17877:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17877:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17851:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17851:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17907:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18041:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17915:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17915:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17907:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17785:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17800:4:13",
														"type": ""
													}
												],
												"src": "17634:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18165:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18195:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18183:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18183:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207265636f766572204c4e5420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18199:27:13",
																		"type": "",
																		"value": "Cannot recover LNT tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18176:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18176:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18176:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18157:6:13",
														"type": ""
													}
												],
												"src": "18059:175:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18386:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18396:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18462:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18467:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18403:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18403:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18396:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18568:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9",
																	"nodeType": "YulIdentifier",
																	"src": "18479:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18479:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18479:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18581:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18592:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18597:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18588:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18588:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18581:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18374:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18382:3:13",
														"type": ""
													}
												],
												"src": "18240:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18783:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18793:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18805:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18816:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18801:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18801:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18793:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18840:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18851:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18836:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18836:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18859:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18865:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18855:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18855:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18829:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18829:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18829:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18885:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19019:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18893:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18893:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18885:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18763:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18778:4:13",
														"type": ""
													}
												],
												"src": "18612:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19163:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19173:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19185:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19196:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19181:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19181:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19173:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19253:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19266:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19277:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19262:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19262:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19209:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19209:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19209:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19334:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19347:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19358:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19343:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19290:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19290:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19290:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19127:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19139:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19147:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19158:4:13",
														"type": ""
													}
												],
												"src": "19037:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19415:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19469:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19478:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19481:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19471:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19471:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19471:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19438:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19460:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "19445:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19445:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19435:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19435:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19428:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19428:40:13"
															},
															"nodeType": "YulIf",
															"src": "19425:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19408:5:13",
														"type": ""
													}
												],
												"src": "19375:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19557:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19567:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19582:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19576:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19576:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19567:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19622:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "19598:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19598:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19598:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19535:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19543:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19551:5:13",
														"type": ""
													}
												],
												"src": "19497:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19714:271:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19760:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19762:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19762:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19762:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19735:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19744:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19731:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19756:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19727:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19727:32:13"
															},
															"nodeType": "YulIf",
															"src": "19724:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "19853:125:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19868:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19882:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19872:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19897:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19940:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19951:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19936:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19936:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19960:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19907:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19907:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19897:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19684:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19695:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19707:6:13",
														"type": ""
													}
												],
												"src": "19640:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20097:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20119:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20127:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20115:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20115:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20131:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20108:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20108:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20108:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20089:6:13",
														"type": ""
													}
												],
												"src": "19991:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20309:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20319:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20385:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20390:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20326:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20326:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20319:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20491:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "20402:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20402:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20402:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20504:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20515:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20520:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20511:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20511:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20504:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20297:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20305:3:13",
														"type": ""
													}
												],
												"src": "20163:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20706:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20716:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20728:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20739:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20724:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20724:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20716:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20763:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20774:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20759:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20759:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20782:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20788:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20778:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20778:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20752:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20752:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20752:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20808:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20942:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20816:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20816:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20808:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20686:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20701:4:13",
														"type": ""
													}
												],
												"src": "20535:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21066:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21088:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21096:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21084:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21084:14:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21100:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21077:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21077:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21077:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21058:6:13",
														"type": ""
													}
												],
												"src": "20960:181:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21293:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21303:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21369:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21374:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21310:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21310:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21303:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21475:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "21386:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21386:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21386:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21488:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21499:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21504:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21495:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21495:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21488:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21281:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21289:3:13",
														"type": ""
													}
												],
												"src": "21147:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21690:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21700:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21712:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21723:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21708:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21708:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21700:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21747:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21758:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21743:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21743:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21766:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21772:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21762:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21762:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21736:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21736:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21736:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21792:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21926:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21800:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21800:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21792:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21670:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21685:4:13",
														"type": ""
													}
												],
												"src": "21519:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22098:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22108:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22120:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22131:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22116:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22116:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22108:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22188:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22201:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22212:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22197:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22197:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22144:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22144:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22144:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22269:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22282:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22293:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22278:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22278:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22225:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22225:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22225:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22351:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22364:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22375:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22360:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22307:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22307:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22307:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22054:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22066:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22074:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22082:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22093:4:13",
														"type": ""
													}
												],
												"src": "21944:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22518:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22528:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22540:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22551:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22536:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22536:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22528:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22608:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22621:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22632:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22617:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22564:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22564:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22564:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22689:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22702:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22713:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22698:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22698:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22645:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22645:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22645:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22482:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22494:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22502:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22513:4:13",
														"type": ""
													}
												],
												"src": "22392:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22758:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22775:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22778:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22768:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22768:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22768:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22872:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22875:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22865:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22865:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22896:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22899:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22889:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22889:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22730:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22960:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22970:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22993:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22975:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22975:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22970:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23004:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23027:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23009:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23009:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23004:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23038:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23049:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23052:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23045:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23045:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "23038:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23078:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23080:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23080:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23080:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23070:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "23073:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23067:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23067:10:13"
															},
															"nodeType": "YulIf",
															"src": "23064:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22947:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22950:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22956:3:13",
														"type": ""
													}
												],
												"src": "22916:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23219:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23241:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23249:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23237:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23237:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23253:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23230:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23230:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23230:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23211:6:13",
														"type": ""
													}
												],
												"src": "23113:170:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23435:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23445:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23511:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23516:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23452:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23452:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23445:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23617:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "23528:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23528:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23528:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23630:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23641:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23646:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23637:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23630:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23423:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23431:3:13",
														"type": ""
													}
												],
												"src": "23289:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23832:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23842:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23854:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23850:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23850:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23842:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23889:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23900:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23885:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23885:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23908:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23914:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23904:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23904:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23878:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23878:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23878:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23934:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24068:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23942:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23942:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23934:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23812:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23827:4:13",
														"type": ""
													}
												],
												"src": "23661:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward pool not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward pool balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62(memPtr) {\n\n        mstore(add(memPtr, 0), \"Treasury not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot recover LNT tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101d8575f3560e01c806366666aa91161010257806395d89b41116100a0578063d547741f1161006f578063d547741f1461051e578063dd62ed3e1461053a578063f0f442601461056a578063f2fde38b14610586576101d8565b806395d89b4114610494578063a217fddf146104b2578063a9059cbb146104d0578063c749523314610500576101d8565b806378238c37116100dc57806378238c37146104205780638456cb591461043c5780638da5cb5b1461044657806391d1485414610464576101d8565b806366666aa9146103c857806370a08231146103e6578063715018a614610416576101d8565b80632f2ff15d1161017a57806359563cdf1161014957806359563cdf146103545780635c975abb146103705780635f3e849f1461038e57806361d027b3146103aa576101d8565b80632f2ff15d146102f4578063313ce5671461031057806336568abe1461032e5780633f4ba83a1461034a576101d8565b80630ceb382e116101b65780630ceb382e1461025a57806318160ddd1461027657806323b872dd14610294578063248a9ca3146102c4576101d8565b806301ffc9a7146101dc57806306fdde031461020c578063095ea7b31461022a575b5f80fd5b6101f660048036038101906101f19190611ee2565b6105a2565b6040516102039190611f27565b60405180910390f35b61021461061b565b6040516102219190611fca565b60405180910390f35b610244600480360381019061023f9190612077565b6106ab565b6040516102519190611f27565b60405180910390f35b610274600480360381019061026f9190612116565b6106cd565b005b61027e610941565b60405161028b9190612196565b60405180910390f35b6102ae60048036038101906102a991906121af565b61094a565b6040516102bb9190611f27565b60405180910390f35b6102de60048036038101906102d99190612232565b610978565b6040516102eb919061226c565b60405180910390f35b61030e60048036038101906103099190612285565b610995565b005b6103186109b7565b60405161032591906122de565b60405180910390f35b61034860048036038101906103439190612285565b6109bf565b005b610352610a3a565b005b61036e600480360381019061036991906122f7565b610a4c565b005b610378610c03565b6040516103859190611f27565b60405180910390f35b6103a860048036038101906103a391906121af565b610c18565b005b6103b2610e26565b6040516103bf9190612363565b60405180910390f35b6103d0610e4b565b6040516103dd9190612363565b60405180910390f35b61040060048036038101906103fb919061237c565b610e70565b60405161040d9190612196565b60405180910390f35b61041e610eb5565b005b61043a6004803603810190610435919061237c565b610ec8565b005b610444610fc6565b005b61044e610fd8565b60405161045b9190612363565b60405180910390f35b61047e60048036038101906104799190612285565b611000565b60405161048b9190611f27565b60405180910390f35b61049c611064565b6040516104a99190611fca565b60405180910390f35b6104ba6110f4565b6040516104c7919061226c565b60405180910390f35b6104ea60048036038101906104e59190612077565b6110fa565b6040516104f79190611f27565b60405180910390f35b61050861111c565b604051610515919061226c565b60405180910390f35b61053860048036038101906105339190612285565b611140565b005b610554600480360381019061054f91906123a7565b611162565b6040516105619190612196565b60405180910390f35b610584600480360381019061057f919061237c565b6111e4565b005b6105a0600480360381019061059b919061237c565b6112e2565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610614575061061382611366565b5b9050919050565b60606003805461062a90612412565b80601f016020809104026020016040519081016040528092919081815260200182805461065690612412565b80156106a15780601f10610678576101008083540402835291602001916106a1565b820191905f5260205f20905b81548152906001019060200180831161068457829003601f168201915b5050505050905090565b5f806106b56113cf565b90506106c28185856113d6565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b536106f7816113e8565b6106ff6113fc565b610707611446565b845f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061248c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc906124f4565b60405180910390fd5b5f8511610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e9061255c565b60405180910390fd5b8461087260095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e70565b10156108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa906125c4565b60405180910390fd5b6108df60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168787611495565b8573ffffffffffffffffffffffffffffffffffffffff167fb969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d8686866040516109299392919061261c565b60405180910390a25061093a611585565b5050505050565b5f600254905090565b5f806109546113cf565b905061096185828561158f565b61096c858585611495565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b61099e82610978565b6109a7816113e8565b6109b18383611622565b50505050565b5f6012905090565b6109c76113cf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a2b576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a35828261170c565b505050565b610a426117f6565b610a4a61187d565b565b610a546113fc565b610a5c611446565b5f73ffffffffffffffffffffffffffffffffffffffff16600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290612696565b60405180910390fd5b5f8311610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b249061255c565b60405180910390fd5b82610b3733610e70565b1015610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f906126fe565b60405180910390fd5b610ba433600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611495565b3373ffffffffffffffffffffffffffffffffffffffff167f1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729848484604051610bee9392919061261c565b60405180910390a2610bfe611585565b505050565b5f60065f9054906101000a900460ff16905090565b610c206117f6565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c869061248c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf490612766565b60405180910390fd5b5f8211610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d369061255c565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610d7a929190612784565b6020604051808303815f875af1158015610d96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dba91906127d5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe684604051610e189190612196565b60405180910390a350505050565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ebd6117f6565b610ec65f6118de565b565b610ed06117f6565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f369061248c565b60405180910390fd5b8160095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f6033b33396350ae21a9bb61962b3be199ccf9c12465a993f6f67e703954e6ecc60405160405180910390a25050565b610fce6117f6565b610fd66119a1565b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461107390612412565b80601f016020809104026020016040519081016040528092919081815260200182805461109f90612412565b80156110ea5780601f106110c1576101008083540402835291602001916110ea565b820191905f5260205f20905b8154815290600101906020018083116110cd57829003601f168201915b5050505050905090565b5f801b81565b5f806111046113cf565b9050611111818585611495565b600191505092915050565b7f77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b5381565b61114982610978565b611152816113e8565b61115c838361170c565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6111ec6117f6565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361125b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112529061248c565b60405180910390fd5b81600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f60405160405180910390a25050565b6112ea6117f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361135a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113519190612363565b60405180910390fd5b611363816118de565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6113e38383836001611a03565b505050565b6113f9816113f46113cf565b611bd2565b50565b611404610c03565b15611444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143b9061284a565b60405180910390fd5b565b60026007540361148b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611482906128b2565b60405180910390fd5b6002600781905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611505575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114fc9190612363565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611575575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161156c9190612363565b60405180910390fd5b611580838383611c23565b505050565b6001600781905550565b5f61159a8484611162565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561161c578181101561160d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611604939291906128d0565b60405180910390fd5b61161b84848484035f611a03565b5b50505050565b5f61162d8383611000565b61170257600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061169f6113cf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611706565b5f90505b92915050565b5f6117178383611000565b156117ec575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117896113cf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506117f0565b5f90505b92915050565b6117fe6113cf565b73ffffffffffffffffffffffffffffffffffffffff1661181c610fd8565b73ffffffffffffffffffffffffffffffffffffffff161461187b5761183f6113cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118729190612363565b60405180910390fd5b565b611885611e3c565b5f60065f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118c76113cf565b6040516118d49190612363565b60405180910390a1565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119a96113fc565b600160065f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119ec6113cf565b6040516119f99190612363565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a73575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a6a9190612363565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ae3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ada9190612363565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611bcc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611bc39190612196565b60405180910390a35b50505050565b611bdc8282611000565b611c1f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611c16929190612905565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c73578060025f828254611c679190612959565b92505081905550611d41565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611cfc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611cf3939291906128d0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d88578060025f8282540392505081905550611dd2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e2f9190612196565b60405180910390a3505050565b611e44610c03565b611e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7a906129d6565b60405180910390fd5b565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ec181611e8d565b8114611ecb575f80fd5b50565b5f81359050611edc81611eb8565b92915050565b5f60208284031215611ef757611ef6611e85565b5b5f611f0484828501611ece565b91505092915050565b5f8115159050919050565b611f2181611f0d565b82525050565b5f602082019050611f3a5f830184611f18565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f77578082015181840152602081019050611f5c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f9c82611f40565b611fa68185611f4a565b9350611fb6818560208601611f5a565b611fbf81611f82565b840191505092915050565b5f6020820190508181035f830152611fe28184611f92565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61201382611fea565b9050919050565b61202381612009565b811461202d575f80fd5b50565b5f8135905061203e8161201a565b92915050565b5f819050919050565b61205681612044565b8114612060575f80fd5b50565b5f813590506120718161204d565b92915050565b5f806040838503121561208d5761208c611e85565b5b5f61209a85828601612030565b92505060206120ab85828601612063565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126120d6576120d56120b5565b5b8235905067ffffffffffffffff8111156120f3576120f26120b9565b5b60208301915083600182028301111561210f5761210e6120bd565b5b9250929050565b5f805f806060858703121561212e5761212d611e85565b5b5f61213b87828801612030565b945050602061214c87828801612063565b935050604085013567ffffffffffffffff81111561216d5761216c611e89565b5b612179878288016120c1565b925092505092959194509250565b61219081612044565b82525050565b5f6020820190506121a95f830184612187565b92915050565b5f805f606084860312156121c6576121c5611e85565b5b5f6121d386828701612030565b93505060206121e486828701612030565b92505060406121f586828701612063565b9150509250925092565b5f819050919050565b612211816121ff565b811461221b575f80fd5b50565b5f8135905061222c81612208565b92915050565b5f6020828403121561224757612246611e85565b5b5f6122548482850161221e565b91505092915050565b612266816121ff565b82525050565b5f60208201905061227f5f83018461225d565b92915050565b5f806040838503121561229b5761229a611e85565b5b5f6122a88582860161221e565b92505060206122b985828601612030565b9150509250929050565b5f60ff82169050919050565b6122d8816122c3565b82525050565b5f6020820190506122f15f8301846122cf565b92915050565b5f805f6040848603121561230e5761230d611e85565b5b5f61231b86828701612063565b935050602084013567ffffffffffffffff81111561233c5761233b611e89565b5b612348868287016120c1565b92509250509250925092565b61235d81612009565b82525050565b5f6020820190506123765f830184612354565b92915050565b5f6020828403121561239157612390611e85565b5b5f61239e84828501612030565b91505092915050565b5f80604083850312156123bd576123bc611e85565b5b5f6123ca85828601612030565b92505060206123db85828601612030565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061242957607f821691505b60208210810361243c5761243b6123e5565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612476600f83611f4a565b915061248182612442565b602082019050919050565b5f6020820190508181035f8301526124a38161246a565b9050919050565b7f52657761726420706f6f6c206e6f7420736574000000000000000000000000005f82015250565b5f6124de601383611f4a565b91506124e9826124aa565b602082019050919050565b5f6020820190508181035f83015261250b816124d2565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f612546602083611f4a565b915061255182612512565b602082019050919050565b5f6020820190508181035f8301526125738161253a565b9050919050565b7f496e73756666696369656e742072657761726420706f6f6c2062616c616e63655f82015250565b5f6125ae602083611f4a565b91506125b98261257a565b602082019050919050565b5f6020820190508181035f8301526125db816125a2565b9050919050565b828183375f83830152505050565b5f6125fb8385611f4a565b93506126088385846125e2565b61261183611f82565b840190509392505050565b5f60408201905061262f5f830186612187565b81810360208301526126428184866125f0565b9050949350505050565b7f5472656173757279206e6f7420736574000000000000000000000000000000005f82015250565b5f612680601083611f4a565b915061268b8261264c565b602082019050919050565b5f6020820190508181035f8301526126ad81612674565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6126e8601483611f4a565b91506126f3826126b4565b602082019050919050565b5f6020820190508181035f830152612715816126dc565b9050919050565b7f43616e6e6f74207265636f766572204c4e5420746f6b656e73000000000000005f82015250565b5f612750601983611f4a565b915061275b8261271c565b602082019050919050565b5f6020820190508181035f83015261277d81612744565b9050919050565b5f6040820190506127975f830185612354565b6127a46020830184612187565b9392505050565b6127b481611f0d565b81146127be575f80fd5b50565b5f815190506127cf816127ab565b92915050565b5f602082840312156127ea576127e9611e85565b5b5f6127f7848285016127c1565b91505092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612834601083611f4a565b915061283f82612800565b602082019050919050565b5f6020820190508181035f83015261286181612828565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61289c601f83611f4a565b91506128a782612868565b602082019050919050565b5f6020820190508181035f8301526128c981612890565b9050919050565b5f6060820190506128e35f830186612354565b6128f06020830185612187565b6128fd6040830184612187565b949350505050565b5f6040820190506129185f830185612354565b612925602083018461225d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61296382612044565b915061296e83612044565b92508282019050808211156129865761298561292c565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6129c0601483611f4a565b91506129cb8261298c565b602082019050919050565b5f6020820190508181035f8301526129ed816129b4565b905091905056fea26469706673582212207c78689c4a88594a8d58d7e7e4f1165fa54ff68396bf944b4ec72292ed96148b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66666AA9 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x586 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xC7495233 EQ PUSH2 0x500 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x78238C37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x78238C37 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x464 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x66666AA9 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x416 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x59563CDF GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x59563CDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x5F3E849F EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3AA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x34A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xCEB382E GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xCEB382E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH2 0xA3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x378 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B2 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x444 PUSH2 0xFC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH2 0x12E2 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x613 DUP3 PUSH2 0x1366 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x62A SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x656 SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x678 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x684 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6B5 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 DUP2 DUP6 DUP6 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 PUSH2 0x6F7 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x6FF PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x707 PUSH2 0x1446 JUMP JUMPDEST DUP5 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 GT PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x872 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE70 JUMP JUMPDEST LT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DF PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 PUSH2 0x1495 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x929 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x93A PUSH2 0x1585 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x954 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x961 DUP6 DUP3 DUP6 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x96C DUP6 DUP6 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99E DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x9A7 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x9B1 DUP4 DUP4 PUSH2 0x1622 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C7 PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA35 DUP3 DUP3 PUSH2 0x170C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA42 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x187D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xA5C PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xB37 CALLER PUSH2 0xE70 JUMP JUMPDEST LT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA4 CALLER PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x1495 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBEE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xBFE PUSH2 0x1585 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x17F6 JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD36 SWAP1 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7A SWAP3 SWAP2 SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xEC6 PUSH0 PUSH2 0x18DE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x17F6 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6033B33396350AE21A9BB61962B3BE199CCF9C12465A993F6F67E703954E6ECC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFCE PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xFD6 PUSH2 0x19A1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1073 SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x109F SWAP1 PUSH2 0x2412 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1104 PUSH2 0x13CF JUMP JUMPDEST SWAP1 POP PUSH2 0x1111 DUP2 DUP6 DUP6 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53 DUP2 JUMP JUMPDEST PUSH2 0x1149 DUP3 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x1152 DUP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x115C DUP4 DUP4 PUSH2 0x170C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11EC PUSH2 0x17F6 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3C864541EF71378C6229510ED90F376565EE42D9C5E0904A984A9E863E6DB44F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x12EA PUSH2 0x17F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x135A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1363 DUP2 PUSH2 0x18DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13F4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1BD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1404 PUSH2 0xC03 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143B SWAP1 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x148B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1482 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1505 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1575 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1580 DUP4 DUP4 DUP4 PUSH2 0x1C23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159A DUP5 DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x161C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x160D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1604 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1A03 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162D DUP4 DUP4 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1702 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x169F PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1717 DUP4 DUP4 PUSH2 0x1000 JUMP JUMPDEST ISZERO PUSH2 0x17EC JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1789 PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x17F0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x13CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x181C PUSH2 0xFD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187B JUMPI PUSH2 0x183F PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1E3C JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18C7 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D4 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x19A9 PUSH2 0x13FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x19EC PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADA SWAP2 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1BCC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BDC DUP3 DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1C1F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C16 SWAP3 SWAP2 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C73 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D41 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1CFC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D88 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DD2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E2F SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1E44 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x1E83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7A SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP2 EQ PUSH2 0x1ECB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EDC DUP2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F21 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3A PUSH0 DUP4 ADD DUP5 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F77 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F5C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C DUP3 PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1FA6 DUP2 DUP6 PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x1F82 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE2 DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2013 DUP3 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2023 DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP2 EQ PUSH2 0x202D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x203E DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2056 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x2060 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2071 DUP2 PUSH2 0x204D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x209A DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20AB DUP6 DUP3 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x20B5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH2 0x20F2 PUSH2 0x20B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x20BD JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x213B DUP8 DUP3 DUP9 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x214C DUP8 DUP3 DUP9 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x1E89 JUMP JUMPDEST JUMPDEST PUSH2 0x2179 DUP8 DUP3 DUP9 ADD PUSH2 0x20C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2190 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH2 0x21C5 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21D3 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E4 DUP7 DUP3 DUP8 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP2 EQ PUSH2 0x221B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x222C DUP2 PUSH2 0x2208 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2254 DUP5 DUP3 DUP6 ADD PUSH2 0x221E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2266 DUP2 PUSH2 0x21FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227F PUSH0 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22A8 DUP6 DUP3 DUP7 ADD PUSH2 0x221E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B9 DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D8 DUP2 PUSH2 0x22C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x22CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x230E JUMPI PUSH2 0x230D PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x231B DUP7 DUP3 DUP8 ADD PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x1E89 JUMP JUMPDEST JUMPDEST PUSH2 0x2348 DUP7 DUP3 DUP8 ADD PUSH2 0x20C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x235D DUP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2376 PUSH0 DUP4 ADD DUP5 PUSH2 0x2354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2391 JUMPI PUSH2 0x2390 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239E DUP5 DUP3 DUP6 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BD JUMPI PUSH2 0x23BC PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CA DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23DB DUP6 DUP3 DUP7 ADD PUSH2 0x2030 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2429 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x243C JUMPI PUSH2 0x243B PUSH2 0x23E5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2476 PUSH1 0xF DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP3 PUSH2 0x2442 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A3 DUP2 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420706F6F6C206E6F742073657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x13 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2546 PUSH1 0x20 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2551 DUP3 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2573 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C2062616C616E6365 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25AE PUSH1 0x20 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x25B9 DUP3 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25DB DUP2 PUSH2 0x25A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25FB DUP4 DUP6 PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP PUSH2 0x2608 DUP4 DUP6 DUP5 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0x2611 DUP4 PUSH2 0x1F82 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x262F PUSH0 DUP4 ADD DUP7 PUSH2 0x2187 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2642 DUP2 DUP5 DUP7 PUSH2 0x25F0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2680 PUSH1 0x10 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP3 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AD DUP2 PUSH2 0x2674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E8 PUSH1 0x14 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x26F3 DUP3 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2715 DUP2 PUSH2 0x26DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F766572204C4E5420746F6B656E7300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2750 PUSH1 0x19 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x275B DUP3 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x277D DUP2 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2797 PUSH0 DUP4 ADD DUP6 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x27A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x27B4 DUP2 PUSH2 0x1F0D JUMP JUMPDEST DUP2 EQ PUSH2 0x27BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CF DUP2 PUSH2 0x27AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F7 DUP5 DUP3 DUP6 ADD PUSH2 0x27C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2834 PUSH1 0x10 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x283F DUP3 PUSH2 0x2800 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2861 DUP2 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x289C PUSH1 0x1F DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x28A7 DUP3 PUSH2 0x2868 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C9 DUP2 PUSH2 0x2890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28E3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x28F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x28FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2187 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2918 PUSH0 DUP4 ADD DUP6 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x2925 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x225D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2963 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x296E DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2986 JUMPI PUSH2 0x2985 PUSH2 0x292C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 PUSH1 0x14 DUP4 PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP3 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29ED DUP2 PUSH2 0x29B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x78689C4A88594A8D58D7E7E4F1165FA54FF68396BF944B4EC72292ED96 EQ DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "403:3558:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2165:512:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3868:91:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3317:65:12;;;:::i;:::-;;2724:448;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3444:369:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;705:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;1727:173:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3213:61;;;:::i;:::-;;1638:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;502:74:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1947:159:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:6:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2165:512:12:-;546:30;2473:16:0;2484:4;2473:10;:16::i;:::-;1239:19:4::1;:17;:19::i;:::-;2261:21:5::2;:19;:21::i;:::-;2350:4:12::3;1637:1;1618:21;;:7;:21;;::::0;1610:49:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:1:::4;2374:24;;:10;;;;;;;;;;;:24;;::::0;2366:56:::4;;;;;;;;;;;;:::i;:::-;;;;;;;;;2449:1;2440:6;:10;2432:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2530:6;2505:21;2515:10;;;;;;;;;;;2505:9;:21::i;:::-;:31;;2497:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:35;2594:10;;;;;;;;;;;2606:4;2612:6;2584:9;:35::i;:::-;2649:4;2634:36;;;2655:6;2663;;2634:36;;;;;;;;:::i;:::-;;;;;;;;2292:1:5::3;2303:20:::2;:18;:20::i;:::-;2165:512:12::0;;;;;:::o;2803:97:6:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;3868:91:12:-;3926:5;3950:2;3943:9;;3868:91;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;3317:65:12:-;1531:13:2;:11;:13::i;:::-;3365:10:12::1;:8;:10::i;:::-;3317:65::o:0;2724:448::-;1239:19:4;:17;:19::i;:::-;2261:21:5::1;:19;:21::i;:::-;2890:1:12::2;2870:22;;:8;;;;;;;;;;;:22;;::::0;2862:51:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2940:1;2931:6;:10;2923:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3021:6;2996:21;3006:10;2996:9;:21::i;:::-;:31;;2988:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3063:39;3073:10;3085:8;;;;;;;;;;;3095:6;3063:9;:39::i;:::-;3129:10;3117:48;;;3141:6;3149:15;;3117:48;;;;;;;;:::i;:::-;;;;;;;;2303:20:5::1;:18;:20::i;:::-;2724:448:12::0;;;:::o;1615:84:4:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3444:369:12:-;1531:13:2;:11;:13::i;:::-;3574:2:12::1;1637:1;1618:21;;:7;:21;;::::0;1610:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3613:4:::2;3596:22;;:5;:22;;::::0;3588:60:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3675:1;3666:6;:10;3658:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3730:5;3723:22;;;3746:2;3750:6;3723:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3795:2;3772:34;;3788:5;3772:34;;;3799:6;3772:34;;;;;;:::i;:::-;;;;;;;;1554:1:2::1;3444:369:12::0;;;:::o;705:67::-;;;;;;;;;;;;;:::o;629:70::-;;;;;;;;;;;;;:::o;2933:116:6:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1727:173:12:-;1531:13:2;:11;:13::i;:::-;1805:11:12::1;1637:1;1618:21;;:7;:21;;::::0;1610:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1841:11:::2;1828:10;;:24;;;;;;;;;;;;;;;;;;1881:11;1867:26;;;;;;;;;;;;1554:1:2::1;1727:173:12::0;:::o;3213:61::-;1531:13:2;:11;:13::i;:::-;3259:8:12::1;:6;:8::i;:::-;3213:61::o:0;1638:85:2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:6:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3244:178:6:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;502:74:12:-;546:30;502:74;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3455:140:6:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;1947:159:12:-;1531:13:2;:11;:13::i;:::-;2021:9:12::1;1637:1;1618:21;;:7;:21;;::::0;1610:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2053:9:::2;2042:8;;:20;;;;;;;;;;;;;;;;;;2089:9;2077:22;;;;;;;;;;;;1554:1:2::1;1947:159:12::0;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8630:128:6:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;1767:106:4:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5297:300:6:-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;10319:476:6:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;1796:162:2:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:4:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:2:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:4:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9605:432:6:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;5912:1107:6:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;1945:106:4:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;88:117:13:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:117::-;4312:1;4309;4302:12;4326:117;4435:1;4432;4425:12;4449:117;4558:1;4555;4548:12;4586:553;4644:8;4654:6;4704:3;4697:4;4689:6;4685:17;4681:27;4671:122;;4712:79;;:::i;:::-;4671:122;4825:6;4812:20;4802:30;;4855:18;4847:6;4844:30;4841:117;;;4877:79;;:::i;:::-;4841:117;4991:4;4983:6;4979:17;4967:29;;5045:3;5037:4;5029:6;5025:17;5015:8;5011:32;5008:41;5005:128;;;5052:79;;:::i;:::-;5005:128;4586:553;;;;;:::o;5145:819::-;5234:6;5242;5250;5258;5307:2;5295:9;5286:7;5282:23;5278:32;5275:119;;;5313:79;;:::i;:::-;5275:119;5433:1;5458:53;5503:7;5494:6;5483:9;5479:22;5458:53;:::i;:::-;5448:63;;5404:117;5560:2;5586:53;5631:7;5622:6;5611:9;5607:22;5586:53;:::i;:::-;5576:63;;5531:118;5716:2;5705:9;5701:18;5688:32;5747:18;5739:6;5736:30;5733:117;;;5769:79;;:::i;:::-;5733:117;5882:65;5939:7;5930:6;5919:9;5915:22;5882:65;:::i;:::-;5864:83;;;;5659:298;5145:819;;;;;;;:::o;5970:118::-;6057:24;6075:5;6057:24;:::i;:::-;6052:3;6045:37;5970:118;;:::o;6094:222::-;6187:4;6225:2;6214:9;6210:18;6202:26;;6238:71;6306:1;6295:9;6291:17;6282:6;6238:71;:::i;:::-;6094:222;;;;:::o;6322:619::-;6399:6;6407;6415;6464:2;6452:9;6443:7;6439:23;6435:32;6432:119;;;6470:79;;:::i;:::-;6432:119;6590:1;6615:53;6660:7;6651:6;6640:9;6636:22;6615:53;:::i;:::-;6605:63;;6561:117;6717:2;6743:53;6788:7;6779:6;6768:9;6764:22;6743:53;:::i;:::-;6733:63;;6688:118;6845:2;6871:53;6916:7;6907:6;6896:9;6892:22;6871:53;:::i;:::-;6861:63;;6816:118;6322:619;;;;;:::o;6947:77::-;6984:7;7013:5;7002:16;;6947:77;;;:::o;7030:122::-;7103:24;7121:5;7103:24;:::i;:::-;7096:5;7093:35;7083:63;;7142:1;7139;7132:12;7083:63;7030:122;:::o;7158:139::-;7204:5;7242:6;7229:20;7220:29;;7258:33;7285:5;7258:33;:::i;:::-;7158:139;;;;:::o;7303:329::-;7362:6;7411:2;7399:9;7390:7;7386:23;7382:32;7379:119;;;7417:79;;:::i;:::-;7379:119;7537:1;7562:53;7607:7;7598:6;7587:9;7583:22;7562:53;:::i;:::-;7552:63;;7508:117;7303:329;;;;:::o;7638:118::-;7725:24;7743:5;7725:24;:::i;:::-;7720:3;7713:37;7638:118;;:::o;7762:222::-;7855:4;7893:2;7882:9;7878:18;7870:26;;7906:71;7974:1;7963:9;7959:17;7950:6;7906:71;:::i;:::-;7762:222;;;;:::o;7990:474::-;8058:6;8066;8115:2;8103:9;8094:7;8090:23;8086:32;8083:119;;;8121:79;;:::i;:::-;8083:119;8241:1;8266:53;8311:7;8302:6;8291:9;8287:22;8266:53;:::i;:::-;8256:63;;8212:117;8368:2;8394:53;8439:7;8430:6;8419:9;8415:22;8394:53;:::i;:::-;8384:63;;8339:118;7990:474;;;;;:::o;8470:86::-;8505:7;8545:4;8538:5;8534:16;8523:27;;8470:86;;;:::o;8562:112::-;8645:22;8661:5;8645:22;:::i;:::-;8640:3;8633:35;8562:112;;:::o;8680:214::-;8769:4;8807:2;8796:9;8792:18;8784:26;;8820:67;8884:1;8873:9;8869:17;8860:6;8820:67;:::i;:::-;8680:214;;;;:::o;8900:674::-;8980:6;8988;8996;9045:2;9033:9;9024:7;9020:23;9016:32;9013:119;;;9051:79;;:::i;:::-;9013:119;9171:1;9196:53;9241:7;9232:6;9221:9;9217:22;9196:53;:::i;:::-;9186:63;;9142:117;9326:2;9315:9;9311:18;9298:32;9357:18;9349:6;9346:30;9343:117;;;9379:79;;:::i;:::-;9343:117;9492:65;9549:7;9540:6;9529:9;9525:22;9492:65;:::i;:::-;9474:83;;;;9269:298;8900:674;;;;;:::o;9580:118::-;9667:24;9685:5;9667:24;:::i;:::-;9662:3;9655:37;9580:118;;:::o;9704:222::-;9797:4;9835:2;9824:9;9820:18;9812:26;;9848:71;9916:1;9905:9;9901:17;9892:6;9848:71;:::i;:::-;9704:222;;;;:::o;9932:329::-;9991:6;10040:2;10028:9;10019:7;10015:23;10011:32;10008:119;;;10046:79;;:::i;:::-;10008:119;10166:1;10191:53;10236:7;10227:6;10216:9;10212:22;10191:53;:::i;:::-;10181:63;;10137:117;9932:329;;;;:::o;10267:474::-;10335:6;10343;10392:2;10380:9;10371:7;10367:23;10363:32;10360:119;;;10398:79;;:::i;:::-;10360:119;10518:1;10543:53;10588:7;10579:6;10568:9;10564:22;10543:53;:::i;:::-;10533:63;;10489:117;10645:2;10671:53;10716:7;10707:6;10696:9;10692:22;10671:53;:::i;:::-;10661:63;;10616:118;10267:474;;;;;:::o;10747:180::-;10795:77;10792:1;10785:88;10892:4;10889:1;10882:15;10916:4;10913:1;10906:15;10933:320;10977:6;11014:1;11008:4;11004:12;10994:22;;11061:1;11055:4;11051:12;11082:18;11072:81;;11138:4;11130:6;11126:17;11116:27;;11072:81;11200:2;11192:6;11189:14;11169:18;11166:38;11163:84;;11219:18;;:::i;:::-;11163:84;10984:269;10933:320;;;:::o;11259:165::-;11399:17;11395:1;11387:6;11383:14;11376:41;11259:165;:::o;11430:366::-;11572:3;11593:67;11657:2;11652:3;11593:67;:::i;:::-;11586:74;;11669:93;11758:3;11669:93;:::i;:::-;11787:2;11782:3;11778:12;11771:19;;11430:366;;;:::o;11802:419::-;11968:4;12006:2;11995:9;11991:18;11983:26;;12055:9;12049:4;12045:20;12041:1;12030:9;12026:17;12019:47;12083:131;12209:4;12083:131;:::i;:::-;12075:139;;11802:419;;;:::o;12227:169::-;12367:21;12363:1;12355:6;12351:14;12344:45;12227:169;:::o;12402:366::-;12544:3;12565:67;12629:2;12624:3;12565:67;:::i;:::-;12558:74;;12641:93;12730:3;12641:93;:::i;:::-;12759:2;12754:3;12750:12;12743:19;;12402:366;;;:::o;12774:419::-;12940:4;12978:2;12967:9;12963:18;12955:26;;13027:9;13021:4;13017:20;13013:1;13002:9;12998:17;12991:47;13055:131;13181:4;13055:131;:::i;:::-;13047:139;;12774:419;;;:::o;13199:182::-;13339:34;13335:1;13327:6;13323:14;13316:58;13199:182;:::o;13387:366::-;13529:3;13550:67;13614:2;13609:3;13550:67;:::i;:::-;13543:74;;13626:93;13715:3;13626:93;:::i;:::-;13744:2;13739:3;13735:12;13728:19;;13387:366;;;:::o;13759:419::-;13925:4;13963:2;13952:9;13948:18;13940:26;;14012:9;14006:4;14002:20;13998:1;13987:9;13983:17;13976:47;14040:131;14166:4;14040:131;:::i;:::-;14032:139;;13759:419;;;:::o;14184:182::-;14324:34;14320:1;14312:6;14308:14;14301:58;14184:182;:::o;14372:366::-;14514:3;14535:67;14599:2;14594:3;14535:67;:::i;:::-;14528:74;;14611:93;14700:3;14611:93;:::i;:::-;14729:2;14724:3;14720:12;14713:19;;14372:366;;;:::o;14744:419::-;14910:4;14948:2;14937:9;14933:18;14925:26;;14997:9;14991:4;14987:20;14983:1;14972:9;14968:17;14961:47;15025:131;15151:4;15025:131;:::i;:::-;15017:139;;14744:419;;;:::o;15169:146::-;15266:6;15261:3;15256;15243:30;15307:1;15298:6;15293:3;15289:16;15282:27;15169:146;;;:::o;15345:317::-;15443:3;15464:71;15528:6;15523:3;15464:71;:::i;:::-;15457:78;;15545:56;15594:6;15589:3;15582:5;15545:56;:::i;:::-;15626:29;15648:6;15626:29;:::i;:::-;15621:3;15617:39;15610:46;;15345:317;;;;;:::o;15668:443::-;15819:4;15857:2;15846:9;15842:18;15834:26;;15870:71;15938:1;15927:9;15923:17;15914:6;15870:71;:::i;:::-;15988:9;15982:4;15978:20;15973:2;15962:9;15958:18;15951:48;16016:88;16099:4;16090:6;16082;16016:88;:::i;:::-;16008:96;;15668:443;;;;;;:::o;16117:166::-;16257:18;16253:1;16245:6;16241:14;16234:42;16117:166;:::o;16289:366::-;16431:3;16452:67;16516:2;16511:3;16452:67;:::i;:::-;16445:74;;16528:93;16617:3;16528:93;:::i;:::-;16646:2;16641:3;16637:12;16630:19;;16289:366;;;:::o;16661:419::-;16827:4;16865:2;16854:9;16850:18;16842:26;;16914:9;16908:4;16904:20;16900:1;16889:9;16885:17;16878:47;16942:131;17068:4;16942:131;:::i;:::-;16934:139;;16661:419;;;:::o;17086:170::-;17226:22;17222:1;17214:6;17210:14;17203:46;17086:170;:::o;17262:366::-;17404:3;17425:67;17489:2;17484:3;17425:67;:::i;:::-;17418:74;;17501:93;17590:3;17501:93;:::i;:::-;17619:2;17614:3;17610:12;17603:19;;17262:366;;;:::o;17634:419::-;17800:4;17838:2;17827:9;17823:18;17815:26;;17887:9;17881:4;17877:20;17873:1;17862:9;17858:17;17851:47;17915:131;18041:4;17915:131;:::i;:::-;17907:139;;17634:419;;;:::o;18059:175::-;18199:27;18195:1;18187:6;18183:14;18176:51;18059:175;:::o;18240:366::-;18382:3;18403:67;18467:2;18462:3;18403:67;:::i;:::-;18396:74;;18479:93;18568:3;18479:93;:::i;:::-;18597:2;18592:3;18588:12;18581:19;;18240:366;;;:::o;18612:419::-;18778:4;18816:2;18805:9;18801:18;18793:26;;18865:9;18859:4;18855:20;18851:1;18840:9;18836:17;18829:47;18893:131;19019:4;18893:131;:::i;:::-;18885:139;;18612:419;;;:::o;19037:332::-;19158:4;19196:2;19185:9;19181:18;19173:26;;19209:71;19277:1;19266:9;19262:17;19253:6;19209:71;:::i;:::-;19290:72;19358:2;19347:9;19343:18;19334:6;19290:72;:::i;:::-;19037:332;;;;;:::o;19375:116::-;19445:21;19460:5;19445:21;:::i;:::-;19438:5;19435:32;19425:60;;19481:1;19478;19471:12;19425:60;19375:116;:::o;19497:137::-;19551:5;19582:6;19576:13;19567:22;;19598:30;19622:5;19598:30;:::i;:::-;19497:137;;;;:::o;19640:345::-;19707:6;19756:2;19744:9;19735:7;19731:23;19727:32;19724:119;;;19762:79;;:::i;:::-;19724:119;19882:1;19907:61;19960:7;19951:6;19940:9;19936:22;19907:61;:::i;:::-;19897:71;;19853:125;19640:345;;;;:::o;19991:166::-;20131:18;20127:1;20119:6;20115:14;20108:42;19991:166;:::o;20163:366::-;20305:3;20326:67;20390:2;20385:3;20326:67;:::i;:::-;20319:74;;20402:93;20491:3;20402:93;:::i;:::-;20520:2;20515:3;20511:12;20504:19;;20163:366;;;:::o;20535:419::-;20701:4;20739:2;20728:9;20724:18;20716:26;;20788:9;20782:4;20778:20;20774:1;20763:9;20759:17;20752:47;20816:131;20942:4;20816:131;:::i;:::-;20808:139;;20535:419;;;:::o;20960:181::-;21100:33;21096:1;21088:6;21084:14;21077:57;20960:181;:::o;21147:366::-;21289:3;21310:67;21374:2;21369:3;21310:67;:::i;:::-;21303:74;;21386:93;21475:3;21386:93;:::i;:::-;21504:2;21499:3;21495:12;21488:19;;21147:366;;;:::o;21519:419::-;21685:4;21723:2;21712:9;21708:18;21700:26;;21772:9;21766:4;21762:20;21758:1;21747:9;21743:17;21736:47;21800:131;21926:4;21800:131;:::i;:::-;21792:139;;21519:419;;;:::o;21944:442::-;22093:4;22131:2;22120:9;22116:18;22108:26;;22144:71;22212:1;22201:9;22197:17;22188:6;22144:71;:::i;:::-;22225:72;22293:2;22282:9;22278:18;22269:6;22225:72;:::i;:::-;22307;22375:2;22364:9;22360:18;22351:6;22307:72;:::i;:::-;21944:442;;;;;;:::o;22392:332::-;22513:4;22551:2;22540:9;22536:18;22528:26;;22564:71;22632:1;22621:9;22617:17;22608:6;22564:71;:::i;:::-;22645:72;22713:2;22702:9;22698:18;22689:6;22645:72;:::i;:::-;22392:332;;;;;:::o;22730:180::-;22778:77;22775:1;22768:88;22875:4;22872:1;22865:15;22899:4;22896:1;22889:15;22916:191;22956:3;22975:20;22993:1;22975:20;:::i;:::-;22970:25;;23009:20;23027:1;23009:20;:::i;:::-;23004:25;;23052:1;23049;23045:9;23038:16;;23073:3;23070:1;23067:10;23064:36;;;23080:18;;:::i;:::-;23064:36;22916:191;;;;:::o;23113:170::-;23253:22;23249:1;23241:6;23237:14;23230:46;23113:170;:::o;23289:366::-;23431:3;23452:67;23516:2;23511:3;23452:67;:::i;:::-;23445:74;;23528:93;23617:3;23528:93;:::i;:::-;23646:2;23641:3;23637:12;23630:19;;23289:366;;;:::o;23661:419::-;23827:4;23865:2;23854:9;23850:18;23842:26;;23914:9;23908:4;23904:20;23900:1;23889:9;23885:17;23878:47;23942:131;24068:4;23942:131;:::i;:::-;23934:139;;23661:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2158800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "397",
								"TASK_MANAGER_ROLE()": "436",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2897",
								"decimals()": "406",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3233",
								"name()": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"paused()": "2540",
								"recoverTokens(address,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardPool()": "2554",
								"rewardTokens(address,uint256,string)": "infinite",
								"setRewardPool(address)": "infinite",
								"setTreasury(address)": "infinite",
								"spendTokens(uint256,string)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2619",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 657,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "66130818DB6C33CC9D8EF14845548EF08E6118AD"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 629,
									"end": 699,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 629,
									"end": 699,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 730,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "149F9C20480A4DC264DAEDC1396A0E06A3848724"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 705,
									"end": 772,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 705,
									"end": 772,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1229,
									"end": 1511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1330,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "4C6F636B6E657373546F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "4C4E540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1346,
									"end": 1397,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1352,
									"end": 1364,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1386,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1386,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1386,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1386,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1384,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1382,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1382,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1379,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "3B9ACA00"
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1366,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1366,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1397,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1346,
									"end": 1397,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1397,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1397,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1346,
									"end": 1397,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2241,
									"end": 2245,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1418,
									"end": 1436,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1450,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1417,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1407,
									"end": 1417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1417,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1451,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1451,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 546,
									"end": 576,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
								},
								{
									"begin": 1491,
									"end": 1503,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1461,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1461,
									"end": 1471,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1504,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1504,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1229,
									"end": 1511,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3868,
									"end": 3959,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3868,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3926,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3950,
									"end": 3952,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3943,
									"end": 3952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 3952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3959,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 3961,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c78689c4a88594a8d58d7e7e4f1165fa54ff68396bf944b4ec72292ed96148b64736f6c63430008140033",
									".code": [
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "66666AA9"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "F0F44260"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "C7495233"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "78238C37"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "78238C37"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "66666AA9"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "59563CDF"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "59563CDF"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "5F3E849F"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "61D027B3"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "CEB382E"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "CEB382E"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 403,
											"end": 3961,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2165,
											"end": 2677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2165,
											"end": 2677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3868,
											"end": 3959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3868,
											"end": 3959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3317,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2724,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2724,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 3444,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3444,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 705,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 705,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 629,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1727,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1727,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 3213,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 502,
											"end": 576,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 502,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 502,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1947,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1947,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 546,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2354,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1638,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1625,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1610,
											"end": 1659,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2397,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2398,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2398,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2398,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2398,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2366,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2366,
											"end": 2422,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2440,
											"end": 2450,
											"modifierDepth": 4,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2432,
											"end": 2487,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2432,
											"end": 2487,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2536,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2526,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2515,
											"end": 2525,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2514,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2505,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2526,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 2505,
											"end": 2526,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2536,
											"modifierDepth": 4,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2536,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2497,
											"end": 2573,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2497,
											"end": 2573,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2619,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2604,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 2610,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 2618,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2593,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2584,
											"end": 2619,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2619,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2584,
											"end": 2619,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2649,
											"end": 2653,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "B969D134776A7F04430DBBCAC4E68734B1C6C5ADCECBF68C3CBE6A9A4F2C8A1D"
										},
										{
											"begin": 2655,
											"end": 2661,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2669,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2663,
											"end": 2669,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 2634,
											"end": 2670,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2670,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 3,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3317,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3365,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 3365,
											"end": 3375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3365,
											"end": 3375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2891,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2878,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2862,
											"end": 2913,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2862,
											"end": 2913,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2941,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2923,
											"end": 2978,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2923,
											"end": 2978,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3021,
											"end": 3027,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3017,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3006,
											"end": 3016,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3005,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2996,
											"end": 3017,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3017,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 2996,
											"end": 3017,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3027,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3027,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2988,
											"end": 3052,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2988,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3102,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3073,
											"end": 3083,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3085,
											"end": 3093,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3095,
											"end": 3101,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3072,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3063,
											"end": 3102,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3102,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 3063,
											"end": 3102,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3139,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1AECF3017F715B90945C9B7C4A1ED780E6EC69BE2D7650296DC1CF6E28113729"
										},
										{
											"begin": 3141,
											"end": 3147,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3164,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3164,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3117,
											"end": 3165,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3165,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 3172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1610,
											"end": 1659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3617,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3596,
											"end": 3618,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3601,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3596,
											"end": 3618,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3618,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3588,
											"end": 3648,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3588,
											"end": 3648,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3672,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3676,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3658,
											"end": 3713,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3658,
											"end": 3713,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3735,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3745,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 3746,
											"end": 3748,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3756,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 3723,
											"end": 3757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3757,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 3723,
											"end": 3757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3797,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3793,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "401F439D865A766757EC78675925BD67198D5E78805AA41691B34B5D6A6CBBE6"
										},
										{
											"begin": 3799,
											"end": 3805,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3772,
											"end": 3806,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3806,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 772,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 705,
											"end": 772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 699,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 629,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1610,
											"end": 1659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1852,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1828,
											"end": 1838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1852,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1892,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6033B33396350AE21A9BB61962B3BE199CCF9C12465A993F6F67E703954E6ECC"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1727,
											"end": 1900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 3213,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3259,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3259,
											"end": 3267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3259,
											"end": 3267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 576,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 546,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "77FC88C8BFD922252C44B5DA30DBEA32F579A84297895DAE83DB4A3D172D6B53"
										},
										{
											"begin": 502,
											"end": 576,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 502,
											"end": 576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1610,
											"end": 1659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1610,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2062,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2042,
											"end": 2050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2042,
											"end": 2062,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3C864541EF71378C6229510ED90F376565EE42D9C5E0904A984A9E863E6DB44F"
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2099,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 2106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4320,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4203,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4443,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4326,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4437,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4566,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4449,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4559,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4644,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4701,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4708,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4671,
											"end": 4793,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4712,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4712,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4712,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4712,
											"end": 4791,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4712,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4793,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4671,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4825,
											"end": 4831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4832,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4873,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4847,
											"end": 4853,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4844,
											"end": 4874,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4877,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4979,
											"end": 4996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5041,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5023,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5133,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5005,
											"end": 5133,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5052,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 5052,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5052,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5052,
											"end": 5131,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 5052,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5133,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5005,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 5139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5295,
											"end": 5304,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5293,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5282,
											"end": 5305,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5278,
											"end": 5310,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5275,
											"end": 5394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5313,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5313,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5392,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5313,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5394,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5275,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5501,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5458,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5458,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5458,
											"end": 5511,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 5458,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5511,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5586,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5631,
											"end": 5638,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5607,
											"end": 5629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 5586,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5639,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5586,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5531,
											"end": 5649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5720,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5747,
											"end": 5765,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5766,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5733,
											"end": 5850,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5733,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 5733,
											"end": 5850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5769,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 5769,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5848,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5769,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5733,
											"end": 5850,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 5733,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 5939,
											"end": 5946,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5882,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5947,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 5882,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5947,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5947,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6057,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6057,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6082,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 6088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 6088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6306,
											"end": 6307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 6238,
											"end": 6309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6238,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6415,
											"end": 6421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 6450,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6467,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6551,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 6432,
											"end": 6551,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6470,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6551,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 6432,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6640,
											"end": 6649,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 6615,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6615,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6605,
											"end": 6668,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6605,
											"end": 6668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6561,
											"end": 6678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6764,
											"end": 6786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 6743,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6796,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6743,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6796,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6847,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6871,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6916,
											"end": 6923,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6907,
											"end": 6913,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6905,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 6871,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6924,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6871,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6861,
											"end": 6924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6861,
											"end": 6924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7024,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 6947,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 6991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 7024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7152,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 7030,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7121,
											"end": 7126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 7103,
											"end": 7127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7103,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 7083,
											"end": 7146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7146,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 7083,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7229,
											"end": 7249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 7285,
											"end": 7290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 7258,
											"end": 7291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7291,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 7258,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7390,
											"end": 7397,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7414,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 7417,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7598,
											"end": 7604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7587,
											"end": 7596,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7583,
											"end": 7605,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 7562,
											"end": 7615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7508,
											"end": 7625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7756,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 7638,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7725,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7725,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 7725,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7725,
											"end": 7749,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 7725,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7720,
											"end": 7723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7750,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7882,
											"end": 7891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7878,
											"end": 7896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7906,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 7974,
											"end": 7975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7972,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 7976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7906,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 7906,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7906,
											"end": 7977,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 7906,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8072,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8113,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8118,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 8083,
											"end": 8202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 8121,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8121,
											"end": 8200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8200,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 8121,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8202,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 8083,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8311,
											"end": 8318,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8291,
											"end": 8300,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 8266,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8319,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8266,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8319,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8212,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8394,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 8394,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8394,
											"end": 8447,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 8394,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8384,
											"end": 8447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8384,
											"end": 8447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8339,
											"end": 8457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7990,
											"end": 8464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8556,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 8470,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8505,
											"end": 8512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8545,
											"end": 8549,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8538,
											"end": 8543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8534,
											"end": 8550,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8523,
											"end": 8550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8523,
											"end": 8550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8562,
											"end": 8674,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 8562,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8661,
											"end": 8666,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 8645,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8562,
											"end": 8674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8562,
											"end": 8674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8562,
											"end": 8674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8773,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 8884,
											"end": 8885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8882,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 8886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 8820,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8887,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 8820,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8680,
											"end": 8894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8980,
											"end": 8986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9002,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9042,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9031,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9020,
											"end": 9043,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9048,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9013,
											"end": 9132,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9013,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9013,
											"end": 9132,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9051,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9051,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 9051,
											"end": 9130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9051,
											"end": 9130,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9051,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9013,
											"end": 9132,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9013,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 9241,
											"end": 9248,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9232,
											"end": 9238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 9196,
											"end": 9249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9249,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 9196,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9186,
											"end": 9249,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9186,
											"end": 9249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 9328,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9324,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9298,
											"end": 9330,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9376,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 9343,
											"end": 9460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 9379,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 9379,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9458,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 9379,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9460,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 9343,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9492,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9525,
											"end": 9547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9492,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 9492,
											"end": 9557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9492,
											"end": 9557,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 9492,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9474,
											"end": 9557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9269,
											"end": 9567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 9574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9698,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 9580,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 9685,
											"end": 9690,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 9667,
											"end": 9691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9691,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 9667,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9662,
											"end": 9665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9655,
											"end": 9692,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9837,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9812,
											"end": 9838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9812,
											"end": 9838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 9916,
											"end": 9917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9901,
											"end": 9918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9892,
											"end": 9898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 9848,
											"end": 9919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 9919,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 9848,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 9997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10019,
											"end": 10026,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10015,
											"end": 10038,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10011,
											"end": 10043,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10127,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10008,
											"end": 10127,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10046,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10046,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10125,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10046,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10127,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10008,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 10236,
											"end": 10243,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10225,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 10191,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10244,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 10191,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 10244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 10244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10137,
											"end": 10254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 10261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10392,
											"end": 10394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10389,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10378,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 10395,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10398,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 10398,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10398,
											"end": 10477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10398,
											"end": 10477,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 10398,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10568,
											"end": 10577,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10543,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 10543,
											"end": 10596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10543,
											"end": 10596,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 10543,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10533,
											"end": 10596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10533,
											"end": 10596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10489,
											"end": 10606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10645,
											"end": 10647,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 10716,
											"end": 10723,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10707,
											"end": 10713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10696,
											"end": 10705,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10692,
											"end": 10714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 10671,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10724,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 10671,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10724,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10661,
											"end": 10724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10927,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10747,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10795,
											"end": 10872,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10792,
											"end": 10793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10785,
											"end": 10873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10896,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10882,
											"end": 10897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 10920,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10921,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11253,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 10933,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10977,
											"end": 10983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 11008,
											"end": 11012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11004,
											"end": 11016,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11061,
											"end": 11062,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11055,
											"end": 11059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11051,
											"end": 11063,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11072,
											"end": 11153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11142,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 11130,
											"end": 11136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11143,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11072,
											"end": 11153,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 11072,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11200,
											"end": 11202,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11192,
											"end": 11198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11189,
											"end": 11203,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11166,
											"end": 11204,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11163,
											"end": 11247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 11219,
											"end": 11237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11247,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 11163,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10984,
											"end": 11253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11424,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 11259,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11399,
											"end": 11416,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 11395,
											"end": 11396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11383,
											"end": 11397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11376,
											"end": 11417,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11430,
											"end": 11796,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 11430,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11593,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 11652,
											"end": 11655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 11593,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11660,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 11593,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11586,
											"end": 11660,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11586,
											"end": 11660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 11669,
											"end": 11762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11762,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 11669,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11782,
											"end": 11785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11430,
											"end": 11796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11430,
											"end": 11796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11430,
											"end": 11796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11430,
											"end": 11796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 12221,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 11802,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12008,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11995,
											"end": 12004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11991,
											"end": 12009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 12009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 12009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12049,
											"end": 12053,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12045,
											"end": 12065,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12041,
											"end": 12042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12030,
											"end": 12039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12026,
											"end": 12043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12019,
											"end": 12066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12083,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 12209,
											"end": 12213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12083,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 12083,
											"end": 12214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12083,
											"end": 12214,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 12083,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 12221,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 12221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 12221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 12221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12396,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 12227,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12367,
											"end": 12388,
											"name": "PUSH",
											"source": 13,
											"value": "52657761726420706F6F6C206E6F742073657400000000000000000000000000"
										},
										{
											"begin": 12363,
											"end": 12364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12355,
											"end": 12361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12768,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 12402,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12544,
											"end": 12547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12565,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 12629,
											"end": 12631,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 12624,
											"end": 12627,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12565,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12565,
											"end": 12632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12565,
											"end": 12632,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 12565,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12632,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12641,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 12730,
											"end": 12733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12641,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 12641,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12641,
											"end": 12734,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 12641,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12761,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12754,
											"end": 12757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12750,
											"end": 12762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 12762,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 12762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 13193,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 12774,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12940,
											"end": 12944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12978,
											"end": 12980,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12967,
											"end": 12976,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12955,
											"end": 12981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12955,
											"end": 12981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13027,
											"end": 13036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13017,
											"end": 13037,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13002,
											"end": 13011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12998,
											"end": 13015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12991,
											"end": 13038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13055,
											"end": 13186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 13181,
											"end": 13185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13055,
											"end": 13186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 13055,
											"end": 13186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13055,
											"end": 13186,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 13055,
											"end": 13186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13047,
											"end": 13186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13047,
											"end": 13186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 13193,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 13193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 13193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 13193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13381,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 13199,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13373,
											"name": "PUSH",
											"source": 13,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13323,
											"end": 13337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13316,
											"end": 13374,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13753,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13387,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13529,
											"end": 13532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13550,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 13614,
											"end": 13616,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13609,
											"end": 13612,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13550,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 13550,
											"end": 13617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13550,
											"end": 13617,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 13550,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13543,
											"end": 13617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13543,
											"end": 13617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 13715,
											"end": 13718,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 13626,
											"end": 13719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13719,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 13626,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13744,
											"end": 13746,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13739,
											"end": 13742,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13735,
											"end": 13747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13753,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 14178,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 13759,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13963,
											"end": 13965,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13952,
											"end": 13961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 13966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 13966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 13966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14012,
											"end": 14021,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14006,
											"end": 14010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14002,
											"end": 14022,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13998,
											"end": 13999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 13996,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13983,
											"end": 14000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13976,
											"end": 14023,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 14166,
											"end": 14170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 14040,
											"end": 14171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14171,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 14040,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14032,
											"end": 14171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14032,
											"end": 14171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 14178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 14178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 14178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 14178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14366,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 14184,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14324,
											"end": 14358,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742072657761726420706F6F6C2062616C616E6365"
										},
										{
											"begin": 14320,
											"end": 14321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14312,
											"end": 14318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14301,
											"end": 14359,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14366,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14738,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14372,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14514,
											"end": 14517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14535,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 14599,
											"end": 14601,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 14535,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14602,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 14535,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14528,
											"end": 14602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14528,
											"end": 14602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 14700,
											"end": 14703,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 14611,
											"end": 14704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14611,
											"end": 14704,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 14611,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14729,
											"end": 14731,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14720,
											"end": 14732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14713,
											"end": 14732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14713,
											"end": 14732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14738,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 15163,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 14744,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14910,
											"end": 14914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14937,
											"end": 14946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 14951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14991,
											"end": 14995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14987,
											"end": 15007,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14983,
											"end": 14984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14972,
											"end": 14981,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14968,
											"end": 14985,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 15008,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 15151,
											"end": 15155,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 15025,
											"end": 15156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15156,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 15025,
											"end": 15156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15017,
											"end": 15156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15017,
											"end": 15156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 15163,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 15163,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 15163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 15163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15315,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 15169,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15266,
											"end": 15272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15261,
											"end": 15264,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15256,
											"end": 15259,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15273,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 15307,
											"end": 15308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15298,
											"end": 15304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15293,
											"end": 15296,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15289,
											"end": 15305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15282,
											"end": 15309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15443,
											"end": 15446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15464,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 15528,
											"end": 15534,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15526,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15464,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 15464,
											"end": 15535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15464,
											"end": 15535,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 15464,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15457,
											"end": 15535,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15457,
											"end": 15535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15545,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 15594,
											"end": 15600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15589,
											"end": 15592,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 15587,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15545,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 15545,
											"end": 15601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15545,
											"end": 15601,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 15545,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 15648,
											"end": 15654,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 15626,
											"end": 15655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15621,
											"end": 15624,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15345,
											"end": 15662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15819,
											"end": 15823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15859,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15846,
											"end": 15855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15834,
											"end": 15860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15834,
											"end": 15860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 15938,
											"end": 15939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15927,
											"end": 15936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15923,
											"end": 15940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15914,
											"end": 15920,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 15870,
											"end": 15941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15941,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 15870,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 15986,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15978,
											"end": 15998,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15973,
											"end": 15975,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15962,
											"end": 15971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15958,
											"end": 15976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15951,
											"end": 15999,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16016,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 16099,
											"end": 16103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16090,
											"end": 16096,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16088,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16016,
											"end": 16104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 16016,
											"end": 16104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16016,
											"end": 16104,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 16016,
											"end": 16104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16008,
											"end": 16104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16008,
											"end": 16104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15668,
											"end": 16111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16117,
											"end": 16283,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16117,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16275,
											"name": "PUSH",
											"source": 13,
											"value": "5472656173757279206E6F742073657400000000000000000000000000000000"
										},
										{
											"begin": 16253,
											"end": 16254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16241,
											"end": 16255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16234,
											"end": 16276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16117,
											"end": 16283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16117,
											"end": 16283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16655,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 16289,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16431,
											"end": 16434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16452,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 16516,
											"end": 16518,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 16511,
											"end": 16514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16452,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 16452,
											"end": 16519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16452,
											"end": 16519,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 16452,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16445,
											"end": 16519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16445,
											"end": 16519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16528,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 16617,
											"end": 16620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16528,
											"end": 16621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 16528,
											"end": 16621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16528,
											"end": 16621,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 16528,
											"end": 16621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16646,
											"end": 16648,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16641,
											"end": 16644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16637,
											"end": 16649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16630,
											"end": 16649,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16630,
											"end": 16649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 17080,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 16661,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16827,
											"end": 16831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16865,
											"end": 16867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16854,
											"end": 16863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16842,
											"end": 16868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16842,
											"end": 16868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16914,
											"end": 16923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16908,
											"end": 16912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16904,
											"end": 16924,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16900,
											"end": 16901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16889,
											"end": 16898,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16878,
											"end": 16925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 17073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 17068,
											"end": 17072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 17073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 16942,
											"end": 17073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 17073,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 16942,
											"end": 17073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 17073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 17073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 17080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 17080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 17080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16661,
											"end": 17080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17256,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 17086,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17226,
											"end": 17248,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 17222,
											"end": 17223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17220,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17224,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17203,
											"end": 17249,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17628,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 17262,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17404,
											"end": 17407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17425,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 17484,
											"end": 17487,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17425,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 17425,
											"end": 17492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17425,
											"end": 17492,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 17425,
											"end": 17492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17418,
											"end": 17492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17418,
											"end": 17492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 17590,
											"end": 17593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 17501,
											"end": 17594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17621,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17614,
											"end": 17617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17610,
											"end": 17622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17628,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 18053,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 17634,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17800,
											"end": 17804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17838,
											"end": 17840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17827,
											"end": 17836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17815,
											"end": 17841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17815,
											"end": 17841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17881,
											"end": 17885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 17897,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17873,
											"end": 17874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17862,
											"end": 17871,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17851,
											"end": 17898,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17915,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 18041,
											"end": 18045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17915,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 17915,
											"end": 18046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17915,
											"end": 18046,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 17915,
											"end": 18046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17907,
											"end": 18046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17907,
											"end": 18046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 18053,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 18053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 18053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 18053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18234,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 18059,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18199,
											"end": 18226,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F74207265636F766572204C4E5420746F6B656E7300000000000000"
										},
										{
											"begin": 18195,
											"end": 18196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18187,
											"end": 18193,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18183,
											"end": 18197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18176,
											"end": 18227,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18240,
											"end": 18606,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 18240,
											"end": 18606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18382,
											"end": 18385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 18467,
											"end": 18469,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 18462,
											"end": 18465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18403,
											"end": 18470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 18403,
											"end": 18470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18403,
											"end": 18470,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 18403,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18470,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18479,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 18568,
											"end": 18571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18479,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 18479,
											"end": 18572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18479,
											"end": 18572,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 18479,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18597,
											"end": 18599,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18592,
											"end": 18595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18588,
											"end": 18600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18581,
											"end": 18600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18581,
											"end": 18600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18240,
											"end": 18606,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18240,
											"end": 18606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18240,
											"end": 18606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18240,
											"end": 18606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 19031,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 18612,
											"end": 19031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18778,
											"end": 18782,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18816,
											"end": 18818,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18805,
											"end": 18814,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18801,
											"end": 18819,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18793,
											"end": 18819,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18793,
											"end": 18819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18859,
											"end": 18863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18855,
											"end": 18875,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18851,
											"end": 18852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18840,
											"end": 18849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18836,
											"end": 18853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18829,
											"end": 18876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18893,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 19019,
											"end": 19023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18893,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 18893,
											"end": 19024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18893,
											"end": 19024,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 18893,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18885,
											"end": 19024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18885,
											"end": 19024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 19031,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 19031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 19031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 19031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19196,
											"end": 19198,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19185,
											"end": 19194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19181,
											"end": 19199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19209,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19266,
											"end": 19275,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19262,
											"end": 19279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19253,
											"end": 19259,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19209,
											"end": 19280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 19209,
											"end": 19280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19209,
											"end": 19280,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19209,
											"end": 19280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19290,
											"end": 19362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 19358,
											"end": 19360,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19347,
											"end": 19356,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19343,
											"end": 19361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19334,
											"end": 19340,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19290,
											"end": 19362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 19290,
											"end": 19362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19290,
											"end": 19362,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 19290,
											"end": 19362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19491,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 19375,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19445,
											"end": 19466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 19460,
											"end": 19465,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19445,
											"end": 19466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 19445,
											"end": 19466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19445,
											"end": 19466,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 19445,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19438,
											"end": 19443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19435,
											"end": 19467,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19425,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 19425,
											"end": 19485,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19481,
											"end": 19482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19478,
											"end": 19479,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19471,
											"end": 19483,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19425,
											"end": 19485,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 19425,
											"end": 19485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19551,
											"end": 19556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19582,
											"end": 19588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19576,
											"end": 19589,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19567,
											"end": 19589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19567,
											"end": 19589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19598,
											"end": 19628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 19622,
											"end": 19627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19598,
											"end": 19628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 19598,
											"end": 19628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19598,
											"end": 19628,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 19598,
											"end": 19628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19707,
											"end": 19713,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19744,
											"end": 19753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19735,
											"end": 19742,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19731,
											"end": 19754,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19727,
											"end": 19759,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19724,
											"end": 19843,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19724,
											"end": 19843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 19724,
											"end": 19843,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19762,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 19762,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 19762,
											"end": 19841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19762,
											"end": 19841,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 19762,
											"end": 19841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19724,
											"end": 19843,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 19724,
											"end": 19843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19882,
											"end": 19883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19907,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19960,
											"end": 19967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 19957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19940,
											"end": 19949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19936,
											"end": 19958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19907,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 19907,
											"end": 19968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19907,
											"end": 19968,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19907,
											"end": 19968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19897,
											"end": 19968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19897,
											"end": 19968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19853,
											"end": 19978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20157,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 19991,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20131,
											"end": 20149,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 20127,
											"end": 20128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20119,
											"end": 20125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20115,
											"end": 20129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20108,
											"end": 20150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20529,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 20163,
											"end": 20529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20305,
											"end": 20308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20326,
											"end": 20393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 20390,
											"end": 20392,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 20385,
											"end": 20388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20326,
											"end": 20393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 20326,
											"end": 20393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20326,
											"end": 20393,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 20326,
											"end": 20393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20319,
											"end": 20393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20319,
											"end": 20393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20402,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 20491,
											"end": 20494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20402,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 20402,
											"end": 20495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20402,
											"end": 20495,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 20402,
											"end": 20495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20520,
											"end": 20522,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20515,
											"end": 20518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20511,
											"end": 20523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20163,
											"end": 20529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20954,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 20535,
											"end": 20954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20701,
											"end": 20705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20739,
											"end": 20741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20728,
											"end": 20737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20724,
											"end": 20742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20716,
											"end": 20742,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20716,
											"end": 20742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 20797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20782,
											"end": 20786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 20798,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20774,
											"end": 20775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20763,
											"end": 20772,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20759,
											"end": 20776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20752,
											"end": 20799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20816,
											"end": 20947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 20942,
											"end": 20946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20816,
											"end": 20947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 20816,
											"end": 20947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20816,
											"end": 20947,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 20816,
											"end": 20947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20808,
											"end": 20947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20808,
											"end": 20947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20954,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20960,
											"end": 21141,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 20960,
											"end": 21141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21133,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 21096,
											"end": 21097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21088,
											"end": 21094,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21084,
											"end": 21098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21134,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20960,
											"end": 21141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20960,
											"end": 21141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21513,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 21147,
											"end": 21513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21289,
											"end": 21292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 21374,
											"end": 21376,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 21369,
											"end": 21372,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21310,
											"end": 21377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 21310,
											"end": 21377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21310,
											"end": 21377,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 21310,
											"end": 21377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21303,
											"end": 21377,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21303,
											"end": 21377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 21475,
											"end": 21478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 21386,
											"end": 21479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21479,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 21386,
											"end": 21479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21504,
											"end": 21506,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21499,
											"end": 21502,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21495,
											"end": 21507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21488,
											"end": 21507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21488,
											"end": 21507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21513,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21513,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21519,
											"end": 21938,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 21519,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21685,
											"end": 21689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21723,
											"end": 21725,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21712,
											"end": 21721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21708,
											"end": 21726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21700,
											"end": 21726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21700,
											"end": 21726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21772,
											"end": 21781,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21766,
											"end": 21770,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21762,
											"end": 21782,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21747,
											"end": 21756,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21743,
											"end": 21760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21736,
											"end": 21783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21800,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 21926,
											"end": 21930,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21800,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 21800,
											"end": 21931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21800,
											"end": 21931,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 21800,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21792,
											"end": 21931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21792,
											"end": 21931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21519,
											"end": 21938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21519,
											"end": 21938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21519,
											"end": 21938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21519,
											"end": 21938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22093,
											"end": 22097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22131,
											"end": 22133,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 22120,
											"end": 22129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22116,
											"end": 22134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22108,
											"end": 22134,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22108,
											"end": 22134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 22212,
											"end": 22213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22201,
											"end": 22210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22197,
											"end": 22214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22194,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 22144,
											"end": 22215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22215,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 22144,
											"end": 22215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22225,
											"end": 22297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 22293,
											"end": 22295,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22282,
											"end": 22291,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22269,
											"end": 22275,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22225,
											"end": 22297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 22225,
											"end": 22297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22225,
											"end": 22297,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 22225,
											"end": 22297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22307,
											"end": 22379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 22375,
											"end": 22377,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22364,
											"end": 22373,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22360,
											"end": 22378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22351,
											"end": 22357,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22307,
											"end": 22379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 22307,
											"end": 22379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22307,
											"end": 22379,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 22307,
											"end": 22379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21944,
											"end": 22386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22513,
											"end": 22517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22551,
											"end": 22553,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22540,
											"end": 22549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22536,
											"end": 22554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22528,
											"end": 22554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22528,
											"end": 22554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22564,
											"end": 22635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 22632,
											"end": 22633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22621,
											"end": 22630,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22617,
											"end": 22634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22608,
											"end": 22614,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22564,
											"end": 22635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 22564,
											"end": 22635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22564,
											"end": 22635,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 22564,
											"end": 22635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22645,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 22713,
											"end": 22715,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22702,
											"end": 22711,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22698,
											"end": 22716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22689,
											"end": 22695,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22645,
											"end": 22717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 22645,
											"end": 22717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22645,
											"end": 22717,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 22645,
											"end": 22717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22392,
											"end": 22724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22730,
											"end": 22910,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 22730,
											"end": 22910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22778,
											"end": 22855,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22775,
											"end": 22776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22768,
											"end": 22856,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22875,
											"end": 22879,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 22872,
											"end": 22873,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 22865,
											"end": 22880,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22899,
											"end": 22903,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22896,
											"end": 22897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22889,
											"end": 22904,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22956,
											"end": 22959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22975,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 22993,
											"end": 22994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22975,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 22975,
											"end": 22995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22975,
											"end": 22995,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 22975,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22970,
											"end": 22995,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22970,
											"end": 22995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23009,
											"end": 23029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 23027,
											"end": 23028,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23009,
											"end": 23029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 23009,
											"end": 23029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23009,
											"end": 23029,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 23009,
											"end": 23029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23004,
											"end": 23029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23004,
											"end": 23029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23052,
											"end": 23053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23049,
											"end": 23050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23045,
											"end": 23054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23038,
											"end": 23054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23038,
											"end": 23054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23073,
											"end": 23076,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23070,
											"end": 23071,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23067,
											"end": 23077,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 23064,
											"end": 23100,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 23064,
											"end": 23100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 23064,
											"end": 23100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23080,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 23080,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 23080,
											"end": 23098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23080,
											"end": 23098,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 23080,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23064,
											"end": 23100,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 23064,
											"end": 23100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 23107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23113,
											"end": 23283,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 23113,
											"end": 23283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23253,
											"end": 23275,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 23249,
											"end": 23250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23241,
											"end": 23247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23237,
											"end": 23251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23230,
											"end": 23276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23113,
											"end": 23283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23113,
											"end": 23283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23289,
											"end": 23655,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 23289,
											"end": 23655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23431,
											"end": 23434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23452,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 23516,
											"end": 23518,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 23511,
											"end": 23514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23452,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 23452,
											"end": 23519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23452,
											"end": 23519,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 23452,
											"end": 23519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23445,
											"end": 23519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23445,
											"end": 23519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23528,
											"end": 23621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 23617,
											"end": 23620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23528,
											"end": 23621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 23528,
											"end": 23621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23528,
											"end": 23621,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 23528,
											"end": 23621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23646,
											"end": 23648,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23641,
											"end": 23644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23637,
											"end": 23649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23630,
											"end": 23649,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23630,
											"end": 23649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23289,
											"end": 23655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23289,
											"end": 23655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23289,
											"end": 23655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23289,
											"end": 23655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23661,
											"end": 24080,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 23661,
											"end": 24080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23827,
											"end": 23831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23865,
											"end": 23867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23854,
											"end": 23863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23850,
											"end": 23868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23842,
											"end": 23868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23842,
											"end": 23868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23914,
											"end": 23923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23908,
											"end": 23912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23904,
											"end": 23924,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23889,
											"end": 23898,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23885,
											"end": 23902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23878,
											"end": 23925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23942,
											"end": 24073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 24068,
											"end": 24072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23942,
											"end": 24073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 23942,
											"end": 24073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23942,
											"end": 24073,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 23942,
											"end": 24073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23934,
											"end": 24073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23934,
											"end": 24073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23661,
											"end": 24080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23661,
											"end": 24080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23661,
											"end": 24080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23661,
											"end": 24080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Lockness/contract/LNT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"TASK_MANAGER_ROLE()": "c7495233",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"recoverTokens(address,address,uint256)": "5f3e849f",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardPool()": "66666aa9",
							"rewardTokens(address,uint256,string)": "0ceb382e",
							"setRewardPool(address)": "78238c37",
							"setTreasury(address)": "f0f44260",
							"spendTokens(uint256,string)": "59563cdf",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardPool\",\"type\":\"address\"}],\"name\":\"RewardPoolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"taskId\",\"type\":\"string\"}],\"name\":\"TokensRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemOrServiceId\",\"type\":\"string\"}],\"name\":\"TokensSpent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasurySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TASK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"taskId\",\"type\":\"string\"}],\"name\":\"rewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardPool\",\"type\":\"address\"}],\"name\":\"setRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"itemOrServiceId\",\"type\":\"string\"}],\"name\":\"spendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Lockness/contract/LNT.sol\":\"LNT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"Lockness/contract/LNT.sol\":{\"keccak256\":\"0x017dbae5e1a405ae3f1ba574c66212e6ec377452dfc3b876defb8e67cd1d1947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fada27ea430af5aa3378887750f796f97155d5b9efea3e17b74bf94c6ffca6\",\"dweb:/ipfs/QmPgbaMdAHd2nmZ21YQqpjoo3AT4AybRnwTc6PoFfUMXCX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 866,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 868,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 870,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 872,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 682,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 783,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_status",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 388,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1548,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "rewardPool",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1551,
								"contract": "Lockness/contract/LNT.sol:LNT",
								"label": "treasury",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "Lockness/contract/LNT.sol:LNT",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "Lockness/contract/LNT.sol:LNT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1486
						],
						"ERC165": [
							1510
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1522
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1511,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1522,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1510,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1510,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1510,
								1522,
								379,
								1486
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1509,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Ownable": [
							527
						]
					},
					"id": 528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 528,
							"sourceUnit": 1487,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 385,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "692:7:2"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 384,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 527,
							"linearizedBaseContracts": [
								527,
								1486
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 527,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 387,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 393,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 398,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 404,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 417,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 416,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 422,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 430,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 527,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 433,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 436,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 438,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 527,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 451,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 453,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 457,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 456,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 460,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 527,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 470,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 467,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 527,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 487,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 493,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 492,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 498,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 501,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 483,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 527,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"id": 514,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 521,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 527,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 528,
							"src": "663:2438:2",
							"usedErrors": [
								393,
								398
							],
							"usedEvents": [
								404
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							664
						],
						"IERC20Errors": [
							569
						],
						"IERC721Errors": [
							617
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 530,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 539,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 544,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 549,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 558,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 563,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 568,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 665,
							"src": "280:1764:3",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 575,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 580,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 589,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 594,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 599,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 606,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 611,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 616,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 665,
							"src": "2190:2092:3",
							"usedErrors": [
								575,
								580,
								589,
								594,
								599,
								606,
								611,
								616
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 629,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 634,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 639,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 646,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 651,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 656,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 663,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 665,
							"src": "4430:2107:3",
							"usedErrors": [
								629,
								634,
								639,
								646,
								651,
								656,
								663
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"Pausable": [
							772
						]
					},
					"id": 773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 773,
							"sourceUnit": 1487,
							"src": "130:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "Context",
										"nameLocations": [
											"632:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "632:7:4"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								1486
							],
							"name": "Pausable",
							"nameLocation": "620:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 675,
									"name": "Paused",
									"nameLocation": "730:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "737:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:4"
									},
									"src": "724:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 680,
									"name": "Unpaused",
									"nameLocation": "841:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "850:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:4"
									},
									"src": "835:32:4"
								},
								{
									"constant": false,
									"id": 682,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "873:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 681,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "986:32:4",
										"statements": [
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 686,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "996:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "996:15:4"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 691,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:4"
									},
									"scope": 772,
									"src": "972:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1229:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1239:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:4"
											},
											{
												"id": 697,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:4"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 699,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:4"
									},
									"src": "1204:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1476:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 702,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "1486:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:4"
											},
											{
												"id": 705,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 707,
									"name": "whenPaused",
									"nameLocation": "1463:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:4"
									},
									"src": "1454:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "1668:31:4",
										"statements": [
											{
												"expression": {
													"id": 713,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "1685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 712,
												"id": 714,
												"nodeType": "Return",
												"src": "1678:14:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1662:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:4"
									},
									"scope": 772,
									"src": "1615:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1818:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:4",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 721,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1837:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:4"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 772,
									"src": "1767:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "1993:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 733,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2011:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:4"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:4"
									},
									"scope": 772,
									"src": "1945:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "2235:66:4",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2245:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 750,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "2281:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 749,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "2274:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "2269:25:4"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 743,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 742,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2221:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:4"
									},
									"scope": 772,
									"src": "2186:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "2481:69:4",
										"statements": [
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2491:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 766,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "2530:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 765,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2521:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "EmitStatement",
												"src": "2516:27:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 758,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 707,
												"src": "2470:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:4"
									},
									"scope": 772,
									"src": "2433:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 773,
							"src": "602:1950:4",
							"usedErrors": [],
							"usedEvents": [
								675,
								680
							]
						}
					],
					"src": "105:2448:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							837
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 775,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 778,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 776,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 781,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 783,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 786,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 787,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 837,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 794,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 797,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 798,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 802,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 807,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 813,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 837,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 821,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 837,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 832,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 830,
												"id": 834,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 837,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 838,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1486
						],
						"ERC20": [
							1352
						],
						"IERC20": [
							1430
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1456
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1431,
							"src": "131:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 840,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1457,
							"src": "168:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 842,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "176:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1487,
							"src": "232:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 844,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "240:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 665,
							"src": "281:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 846,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 569,
										"src": "289:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Context",
										"nameLocations": [
											"1133:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "1133:7:6"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:6"
								},
								{
									"baseName": {
										"id": 851,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "1142:6:6"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:6"
								},
								{
									"baseName": {
										"id": 853,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "1150:14:6"
									},
									"id": 854,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:6"
								},
								{
									"baseName": {
										"id": 855,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 569,
										"src": "1166:12:6"
									},
									"id": 856,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:6",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								569,
								1456,
								1430,
								1486
							],
							"name": "ERC20",
							"nameLocation": "1124:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 860,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1185:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 859,
										"keyName": "account",
										"keyNameLocation": "1201:7:6",
										"keyType": {
											"id": 857,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 858,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1245:83:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 865,
										"keyName": "account",
										"keyNameLocation": "1261:7:6",
										"keyType": {
											"id": 861,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 864,
											"keyName": "spender",
											"keyNameLocation": "1288:7:6",
											"keyType": {
												"id": 862,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1335:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 870,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1370:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 869,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "1396:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 871,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "1638:57:6",
										"statements": [
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1648:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 881,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1656:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:6"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 885,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1681:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:6"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:6",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 889,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1594:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 874,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1615:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:6"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:6"
									},
									"scope": 1352,
									"src": "1582:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1820:29:6",
										"statements": [
											{
												"expression": {
													"id": 895,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 870,
													"src": "1837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 894,
												"id": 896,
												"nodeType": "Return",
												"src": "1830:12:6"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1805:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:6"
									},
									"scope": 1352,
									"src": "1760:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1449
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2024:31:6",
										"statements": [
											{
												"expression": {
													"id": 904,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 903,
												"id": 905,
												"nodeType": "Return",
												"src": "2034:14:6"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:6"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2009:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 901,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:6"
									},
									"scope": 1352,
									"src": "1962:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2744:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 912,
												"id": 914,
												"nodeType": "Return",
												"src": "2754:9:6"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:6"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2737:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 910,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:6"
									},
									"scope": 1352,
									"src": "2688:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1379
									],
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "2864:36:6",
										"statements": [
											{
												"expression": {
													"id": 922,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 868,
													"src": "2881:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 923,
												"nodeType": "Return",
												"src": "2874:19:6"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "2855:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:6"
									},
									"scope": 1352,
									"src": "2803:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3007:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 933,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3024:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 935,
													"indexExpression": {
														"id": 934,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3034:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 936,
												"nodeType": "Return",
												"src": "3017:25:6"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2952:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2998:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:6"
									},
									"scope": 1352,
									"src": "2933:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3319:103:6",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "3329:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 948,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3345:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "3377:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3384:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3388:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3367:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 947,
												"id": 960,
												"nodeType": "Return",
												"src": "3404:11:6"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3262:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3274:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3313:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:6"
									},
									"scope": 1352,
									"src": "3244:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "3544:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 972,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "3561:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3573:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "3580:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 971,
												"id": 977,
												"nodeType": "Return",
												"src": "3554:34:6"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:6",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3474:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3489:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:6"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3535:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:6"
									},
									"scope": 1352,
									"src": "3455:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "3981:107:6",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "3991:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "4007:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4038:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "4045:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4054:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1243,
															1303
														],
														"referencedDeclaration": 1243,
														"src": "4029:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "4070:11:6"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:6",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3919:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3936:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3975:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:6"
									},
									"scope": 1352,
									"src": "3902:186:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "4773:151:6",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "4783:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "4801:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4839:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4845:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4854:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "4823:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4880:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4886:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4890:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4870:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "4906:11:6"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:6",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4702:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4716:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4728:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "4767:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:6"
									},
									"scope": 1352,
									"src": "4680:244:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5366:231:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "5380:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "5376:86:6",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "5400:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "5421:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "5414:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "5475:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "5471:86:6",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "5493:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "5514:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "5507:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "5580:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "5584:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5566:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:6"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:6"
									},
									"scope": 1352,
									"src": "5297:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "5987:1032:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "6001:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "6175:362:6",
													"statements": [
														{
															"assignments": [
																1104
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1104,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1129,
																	"src": "6189:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1108,
															"initialValue": {
																"baseExpression": {
																	"id": 1105,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "6211:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1107,
																"indexExpression": {
																	"id": 1106,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "6221:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1109,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "6244:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "6258:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "6240:115:6",
															"trueBody": {
																"id": 1118,
																"nodeType": "Block",
																"src": "6265:90:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1113,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "6315:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1114,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "6321:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1115,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "6334:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1112,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "6290:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1117,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:6"
																	}
																]
															}
														},
														{
															"id": 1128,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:6",
															"statements": [
																{
																	"expression": {
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1120,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "6475:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1122,
																			"indexExpression": {
																				"id": 1121,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "6485:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1123,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "6493:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1124,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "6507:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1127,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:6"
																}
															]
														}
													]
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "5997:540:6",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "6021:148:6",
													"statements": [
														{
															"expression": {
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1098,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "6137:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "6153:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1131,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "6551:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1132,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "6766:206:6",
													"statements": [
														{
															"id": 1149,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:6",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1143,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "6925:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1145,
																			"indexExpression": {
																				"id": 1144,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "6935:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "6942:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:6"
																}
															]
														}
													]
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "6547:425:6",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "6569:191:6",
													"statements": [
														{
															"id": 1141,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:6",
															"statements": [
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "6714:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1138,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "6730:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:6"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1153,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "6996:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "7002:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "7006:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1152,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "6987:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "6982:30:6"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:6",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5929:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5943:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5955:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:6"
									},
									"scope": 1352,
									"src": "5912:1107:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "7418:152:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7432:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1168,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "7428:91:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "7455:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1174,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1173,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "7476:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "RevertStatement",
															"src": "7469:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "7548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "7557:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "7528:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:6"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:6",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7377:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7394:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:6"
									},
									"scope": 1352,
									"src": "7362:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "7944:150:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "7958:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "7954:89:6",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "7981:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1207,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1206,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "8002:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "7995:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "8060:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8081:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "8052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:6"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "7903:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "7920:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:6"
									},
									"scope": 1352,
									"src": "7888:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "8704:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "8723:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "8730:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "8739:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1235,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1243,
															1303
														],
														"referencedDeclaration": 1303,
														"src": "8714:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:6"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:6",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8648:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8663:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "8680:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:6"
									},
									"scope": 1352,
									"src": "8630:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "9703:334:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "9717:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "9713:89:6",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "9738:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1262,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1261,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "9759:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1267,
															"nodeType": "RevertStatement",
															"src": "9752:39:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "9815:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "9811:90:6",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "9838:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1277,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1276,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "9859:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "9852:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1285,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "9910:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1288,
															"indexExpression": {
																"id": 1286,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "9922:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1289,
														"indexExpression": {
															"id": 1287,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "9929:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1290,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "9940:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:6"
											},
											{
												"condition": {
													"id": 1293,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1252,
													"src": "9959:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "9955:76:6",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "9970:61:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "9998:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1248,
																		"src": "10005:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "10014:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1294,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "9989:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "EmitStatement",
															"src": "9984:36:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:6",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9623:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9638:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9670:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:6"
									},
									"scope": 1352,
									"src": "9605:432:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "10408:387:6",
										"statements": [
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "10418:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"id": 1316,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "10455:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "10462:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1315,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "10445:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1320,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "10484:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1321,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "IfStatement",
												"src": "10480:309:6",
												"trueBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "10522:267:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1327,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "10540:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "10559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1337,
															"nodeType": "IfStatement",
															"src": "10536:130:6",
															"trueBody": {
																"id": 1336,
																"nodeType": "Block",
																"src": "10566:100:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1331,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1308,
																					"src": "10618:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1332,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "10627:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1333,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "10645:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1330,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "10591:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1335,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:6"
																	}
																]
															}
														},
														{
															"id": 1347,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1339,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "10716:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1340,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "10723:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1341,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1314,
																					"src": "10732:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1342,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "10751:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1338,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1243,
																				1303
																			],
																			"referencedDeclaration": 1303,
																			"src": "10707:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1346,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:6",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10359:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "10376:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:6"
									},
									"scope": 1352,
									"src": "10319:476:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1353,
							"src": "1106:9691:6",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "105:10693:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1430
						]
					},
					"id": 1431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1364,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1373,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 1430,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 1430,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 1430,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 1430,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 1430,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 1430,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1430
						],
						"IERC20Metadata": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1431,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1433,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1436,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "306:6:8"
									},
									"id": 1437,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1435,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1430
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 1456,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 1456,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1452,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 1456,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								1364,
								1373
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1466,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1486,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1475,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1486,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1481,
												"id": 1483,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1486,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1510
						],
						"IERC165": [
							1522
						]
					},
					"id": 1511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 1523,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1522,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1492,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1522,
										"src": "688:7:10"
									},
									"id": 1493,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1491,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1510,
							"linearizedBaseContracts": [
								1510,
								1522
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1507,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1510,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1511,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1522
						]
					},
					"id": 1523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1512,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1513,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1522,
							"linearizedBaseContracts": [
								1522
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1522,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1523,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"Lockness/contract/LNT.sol": {
				"ast": {
					"absolutePath": "Lockness/contract/LNT.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1486
						],
						"ERC165": [
							1510
						],
						"ERC20": [
							1352
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1522
						],
						"IERC20": [
							1430
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1456
						],
						"LNT": [
							1855
						],
						"Ownable": [
							527
						],
						"Pausable": [
							772
						],
						"ReentrancyGuard": [
							837
						]
					},
					"id": 1856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 1353,
							"src": "58:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 297,
							"src": "114:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 773,
							"src": "173:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 838,
							"src": "229:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 528,
							"src": "292:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1856,
							"sourceUnit": 1431,
							"src": "345:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1531,
										"name": "ERC20",
										"nameLocations": [
											"419:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1352,
										"src": "419:5:12"
									},
									"id": 1532,
									"nodeType": "InheritanceSpecifier",
									"src": "419:5:12"
								},
								{
									"baseName": {
										"id": 1533,
										"name": "AccessControl",
										"nameLocations": [
											"426:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "426:13:12"
									},
									"id": 1534,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:12"
								},
								{
									"baseName": {
										"id": 1535,
										"name": "Pausable",
										"nameLocations": [
											"441:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "441:8:12"
									},
									"id": 1536,
									"nodeType": "InheritanceSpecifier",
									"src": "441:8:12"
								},
								{
									"baseName": {
										"id": 1537,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"451:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "451:15:12"
									},
									"id": 1538,
									"nodeType": "InheritanceSpecifier",
									"src": "451:15:12"
								},
								{
									"baseName": {
										"id": 1539,
										"name": "Ownable",
										"nameLocations": [
											"468:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 527,
										"src": "468:7:12"
									},
									"id": 1540,
									"nodeType": "InheritanceSpecifier",
									"src": "468:7:12"
								}
							],
							"canonicalName": "LNT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1855,
							"linearizedBaseContracts": [
								1855,
								527,
								837,
								772,
								296,
								1510,
								1522,
								379,
								1352,
								569,
								1456,
								1430,
								1486
							],
							"name": "LNT",
							"nameLocation": "412:3:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "c7495233",
									"id": 1545,
									"mutability": "constant",
									"name": "TASK_MANAGER_ROLE",
									"nameLocation": "526:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "502:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1541,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5441534b5f4d414e414745525f524f4c45",
												"id": 1543,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "556:19:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53",
													"typeString": "literal_string \"TASK_MANAGER_ROLE\""
												},
												"value": "TASK_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_77fc88c8bfd922252c44b5da30dbea32f579a84297895dae83db4a3d172d6b53",
													"typeString": "literal_string \"TASK_MANAGER_ROLE\""
												}
											],
											"id": 1542,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "546:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1544,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "546:30:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66666aa9",
									"id": 1548,
									"mutability": "mutable",
									"name": "rewardPool",
									"nameLocation": "644:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "629:70:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1546,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836363133303831386442366333334343396438656631343834353534384566303845363131384144",
										"id": 1547,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "657:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x66130818dB6c33CC9d8ef14845548Ef08E6118AD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 1551,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "720:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "705:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1549,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831343966396332303438304134444332363444414564433133393661304530366133383438373234",
										"id": 1550,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "730:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x149f9c20480A4DC264DAEdC1396a0E06a3848724"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b969d134776a7f04430dbbcac4e68734b1c6c5adcecbf68c3cbe6a9a4f2c8a1d",
									"id": 1559,
									"name": "TokensRewarded",
									"nameLocation": "823:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "854:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "838:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "868:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "860:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "883:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "876:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "876:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:53:12"
									},
									"src": "817:74:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1aecf3017f715b90945c9b7c4a1ed780e6ec69be2d7650296dc1cf6e28113729",
									"id": 1567,
									"name": "TokensSpent",
									"nameLocation": "902:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "930:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "914:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "944:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "936:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemOrServiceId",
												"nameLocation": "959:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "952:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "952:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:62:12"
									},
									"src": "896:80:12"
								},
								{
									"anonymous": false,
									"eventSelector": "401f439d865a766757ec78675925bd67198d5e78805aa41691b34b5d6a6cbbe6",
									"id": 1575,
									"name": "TokensRecovered",
									"nameLocation": "987:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1019:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1003:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1042:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1026:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1054:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1046:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:59:12"
									},
									"src": "981:81:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6033b33396350ae21a9bb61962b3be199ccf9c12465a993f6f67e703954e6ecc",
									"id": 1579,
									"name": "RewardPoolSet",
									"nameLocation": "1073:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewardPool",
												"nameLocation": "1103:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1087:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:28:12"
									},
									"src": "1067:48:12"
								},
								{
									"anonymous": false,
									"eventSelector": "3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f",
									"id": 1583,
									"name": "TreasurySet",
									"nameLocation": "1126:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"indexed": true,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "1154:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1138:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:26:12"
									},
									"src": "1120:44:12"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1336:175:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1596,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "1352:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f303030",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1382:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1599,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1854
																		],
																		"referencedDeclaration": 1854,
																		"src": "1386:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1386:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1382:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1366:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1595,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "1346:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "1346:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1418:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1607,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "1438:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1605,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1407:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "1407:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1611,
															"name": "TASK_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "1472:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1612,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "1491:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1610,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1461:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "1461:43:12"
											}
										]
									},
									"id": 1616,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6f636b6e657373546f6b656e",
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1278:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7ed22a159305d379d8bc3d43fb09f988c9cb5f6732918e5441d0bbb370acbab0",
														"typeString": "literal_string \"LocknessToken\""
													},
													"value": "LocknessToken"
												},
												{
													"hexValue": "4c4e54",
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1295:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_378b09d8c96f945801f373cba5eae42e4ebb9ca31dfdcd1ad3c809a856a7c75e",
														"typeString": "literal_string \"LNT\""
													},
													"value": "LNT"
												}
											],
											"id": 1590,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1587,
												"name": "ERC20",
												"nameLocations": [
													"1272:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1352,
												"src": "1272:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1272:29:12"
										},
										{
											"arguments": [
												{
													"id": 1592,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1585,
													"src": "1318:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1593,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1591,
												"name": "Ownable",
												"nameLocations": [
													"1310:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 527,
												"src": "1310:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1310:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1249:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1241:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:22:12"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:0:12"
									},
									"scope": 1855,
									"src": "1229:282:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "1600:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1621,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "1618:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1637:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1629:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1622,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1629:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1629:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1618:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1610:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "1610:49:12"
											},
											{
												"id": 1630,
												"nodeType": "PlaceholderStatement",
												"src": "1669:1:12"
											}
										]
									},
									"id": 1632,
									"name": "nonZeroAddress",
									"nameLocation": "1568:14:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1591:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "1583:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:17:12"
									},
									"src": "1559:118:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1818:82:12",
										"statements": [
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1642,
														"name": "rewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "1828:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1643,
														"name": "_rewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "1841:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1828:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "1828:24:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1647,
															"name": "_rewardPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "1881:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1646,
														"name": "RewardPoolSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "1867:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "EmitStatement",
												"src": "1862:31:12"
											}
										]
									},
									"functionSelector": "78238c37",
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1636,
												"name": "onlyOwner",
												"nameLocations": [
													"1780:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "1780:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1780:9:12"
										},
										{
											"arguments": [
												{
													"id": 1639,
													"name": "_rewardPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1634,
													"src": "1805:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1638,
												"name": "nonZeroAddress",
												"nameLocations": [
													"1790:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1632,
												"src": "1790:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1790:27:12"
										}
									],
									"name": "setRewardPool",
									"nameLocation": "1736:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "_rewardPool",
												"nameLocation": "1758:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1750:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1749:21:12"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:12"
									},
									"scope": 1855,
									"src": "1727:173:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2032:74:12",
										"statements": [
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1661,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "2042:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1662,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "2053:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2042:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2042:20:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1666,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "2089:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1665,
														"name": "TreasurySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "2077:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "2072:27:12"
											}
										]
									},
									"functionSelector": "f0f44260",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1655,
												"name": "onlyOwner",
												"nameLocations": [
													"1996:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "1996:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1996:9:12"
										},
										{
											"arguments": [
												{
													"id": 1658,
													"name": "_treasury",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1653,
													"src": "2021:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1657,
												"name": "nonZeroAddress",
												"nameLocations": [
													"2006:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1632,
												"src": "2006:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2006:25:12"
										}
									],
									"name": "setTreasury",
									"nameLocation": "1956:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1976:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1968:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:19:12"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:12"
									},
									"scope": 1855,
									"src": "1947:159:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "2356:321:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1690,
																"name": "rewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "2374:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2396:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2388:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1691,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2388:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2388:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2374:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420706f6f6c206e6f7420736574",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2400:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af",
																"typeString": "literal_string \"Reward pool not set\""
															},
															"value": "Reward pool not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53aa6bcba2802aec79da6cf8c85135b0374a7558207ddd34ef34792868c424af",
																"typeString": "literal_string \"Reward pool not set\""
															}
														],
														"id": 1689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2366:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:56:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "2366:56:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1700,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "2440:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2440:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2432:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2432:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2432:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "rewardPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "2515:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1707,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "2505:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2505:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1710,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "2530:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2505:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c2062616c616e6365",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332",
																"typeString": "literal_string \"Insufficient reward pool balance\""
															},
															"value": "Insufficient reward pool balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68a5fd7c5d165abd93539fcca7f657aba697411180ee7f2ba65225be627b3332",
																"typeString": "literal_string \"Insufficient reward pool balance\""
															}
														],
														"id": 1706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2497:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:76:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "2497:76:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1716,
															"name": "rewardPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "2594:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "2606:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "2612:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1715,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "2584:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "2584:35:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1722,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "2649:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1723,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "2655:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1724,
															"name": "taskId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "2663:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1721,
														"name": "TokensRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "2634:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2634:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "EmitStatement",
												"src": "2629:41:12"
											}
										]
									},
									"functionSelector": "0ceb382e",
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1679,
													"name": "TASK_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1545,
													"src": "2289:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1678,
												"name": "onlyRole",
												"nameLocations": [
													"2280:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2280:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2280:27:12"
										},
										{
											"id": 1682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "whenNotPaused",
												"nameLocations": [
													"2308:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2308:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2308:13:12"
										},
										{
											"id": 1684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1683,
												"name": "nonReentrant",
												"nameLocations": [
													"2322:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "2322:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2322:12:12"
										},
										{
											"arguments": [
												{
													"id": 1686,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "2350:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "nonZeroAddress",
												"nameLocations": [
													"2335:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1632,
												"src": "2335:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2335:20:12"
										}
									],
									"name": "rewardTokens",
									"nameLocation": "2174:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2204:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "2196:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2226:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "2218:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "2258:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "2242:22:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2242:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2186:84:12"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:0:12"
									},
									"scope": 1855,
									"src": "2165:512:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "2852:320:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1740,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "2870:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2890:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2882:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1741,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2882:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2882:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2870:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472656173757279206e6f7420736574",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2894:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62",
																"typeString": "literal_string \"Treasury not set\""
															},
															"value": "Treasury not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62",
																"typeString": "literal_string \"Treasury not set\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2862:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2862:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "2862:51:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "2931:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2940:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2931:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2943:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2923:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2923:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "2923:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1758,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3006:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3010:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3006:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1757,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "2996:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2996:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1761,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "3021:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2996:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3029:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2988:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:64:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "2988:64:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3073:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3077:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3073:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "3085:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "3095:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1766,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3063:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "3063:39:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3129:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3133:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3129:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "3141:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1777,
															"name": "itemOrServiceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "3149:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1773,
														"name": "TokensSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "3117:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "EmitStatement",
												"src": "3112:53:12"
											}
										]
									},
									"functionSelector": "59563cdf",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1734,
												"name": "whenNotPaused",
												"nameLocations": [
													"2825:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "2825:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2825:13:12"
										},
										{
											"id": 1737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1736,
												"name": "nonReentrant",
												"nameLocations": [
													"2839:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "2839:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2839:12:12"
										}
									],
									"name": "spendTokens",
									"nameLocation": "2733:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2762:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2754:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "itemOrServiceId",
												"nameLocation": "2794:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2778:31:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2778:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:71:12"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2852:0:12"
									},
									"scope": 1855,
									"src": "2724:448:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "3249:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1786,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "3259:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "3259:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1784,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1783,
												"name": "onlyOwner",
												"nameLocations": [
													"3239:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "3239:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3239:9:12"
										}
									],
									"name": "pause",
									"nameLocation": "3222:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:2:12"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:12"
									},
									"scope": 1855,
									"src": "3213:61:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "3355:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1795,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "3365:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "3365:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1792,
												"name": "onlyOwner",
												"nameLocations": [
													"3345:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "3345:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3345:9:12"
										}
									],
									"name": "unpause",
									"nameLocation": "3326:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3333:2:12"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3355:0:12"
									},
									"scope": 1855,
									"src": "3317:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "3578:235:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "3596:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1817,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3613:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LNT_$1855",
																			"typeString": "contract LNT"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LNT_$1855",
																			"typeString": "contract LNT"
																		}
																	],
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3605:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3605:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3605:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3596:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207265636f766572204c4e5420746f6b656e73",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3620:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9",
																"typeString": "literal_string \"Cannot recover LNT tokens\""
															},
															"value": "Cannot recover LNT tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec9f692ef4e657c89b4d2cd8d53befbf6a471921476a41927e6747d521ad98d9",
																"typeString": "literal_string \"Cannot recover LNT tokens\""
															}
														],
														"id": 1813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3588:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3588:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "3588:60:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1824,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "3666:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3675:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3666:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3678:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3658:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "3658:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1834,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3746:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3750:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1831,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "3730:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1830,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "3723:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1430_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3723:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1430",
																"typeString": "contract IERC20"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3737:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "3723:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "3723:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1839,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "3788:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3795:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1841,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3799:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1838,
														"name": "TokensRecovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "3772:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "EmitStatement",
												"src": "3767:39:12"
											}
										]
									},
									"functionSelector": "5f3e849f",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1807,
												"name": "onlyOwner",
												"nameLocations": [
													"3549:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "3549:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3549:9:12"
										},
										{
											"arguments": [
												{
													"id": 1810,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1803,
													"src": "3574:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1811,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1809,
												"name": "nonZeroAddress",
												"nameLocations": [
													"3559:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1632,
												"src": "3559:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3559:18:12"
										}
									],
									"name": "recoverTokens",
									"nameLocation": "3453:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3484:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "3476:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3507:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "3499:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3527:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "3519:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:73:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3578:0:12"
									},
									"scope": 1855,
									"src": "3444:369:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "3933:26:12",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3950:2:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1850,
												"id": 1852,
												"nodeType": "Return",
												"src": "3943:9:12"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3877:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1847,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3908:8:12"
									},
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3885:2:12"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3926:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1848,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:7:12"
									},
									"scope": 1855,
									"src": "3868:91:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1856,
							"src": "403:3558:12",
							"usedErrors": [
								306,
								309,
								393,
								398,
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": [
								318,
								327,
								336,
								404,
								675,
								680,
								1364,
								1373,
								1559,
								1567,
								1575,
								1579,
								1583
							]
						}
					],
					"src": "32:7153:12"
				},
				"id": 12
			}
		}
	}
}